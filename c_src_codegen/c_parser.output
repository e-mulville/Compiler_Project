Terminals unused in grammar

   T_COLON


State 52 conflicts: 1 shift/reduce
State 101 conflicts: 1 shift/reduce
State 109 conflicts: 1 shift/reduce


Grammar

    0 $accept: ROOT $end

    1 ROOT: PROGRAM

    2 PROGRAM: %empty
    3        | PROGRAM STATEMENT

    4 STATEMENT: DECLARATION
    5          | ASSIGNMENT
    6          | JUMP
    7          | CONTROL

    8 STATEMENT_LIST: %empty
    9               | STATEMENT_LIST STATEMENT

   10 DECLARATION: FUNC_DECLARATION
   11            | VAR_DECLARATION

   12 FUNC_DECLARATION: VAR_DECLARATION T_LBRACKET ARGUMENT_LIST T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET

   13 VAR_DECLARATION: T_INT VALUE_FOR_STORE
   14                | T_INT VALUE_FOR_STORE T_SEMICOLON
   15                | T_VOID VALUE_FOR_STORE
   16                | T_VOID VALUE_FOR_STORE T_SEMICOLON

   17 ARGUMENT_LIST: %empty
   18              | ARGUMENT
   19              | ARGUMENT_LIST T_COMMA ARGUMENT

   20 ARGUMENT: VAR_DECLARATION
   21         | VALUE

   22 ASSIGNMENT: ASSIGN

   23 ASSIGN: VAR_DECLARATION T_ASSIGN EXPR T_SEMICOLON
   24       | VALUE_FOR_STORE T_ASSIGN EXPR T_SEMICOLON

   25 JUMP: RETURN
   26     | FUNC_EVOKE T_SEMICOLON

   27 RETURN: T_RETURN LOGIC T_SEMICOLON

   28 CONTROL: IF
   29        | T_WHILE T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET

   30 IF: T_IF T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   31   | T_IF T_LBRACKET LOGIC T_RBRACKET STATEMENT
   32   | T_IF T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET T_ELSE T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   33   | T_IF T_LBRACKET LOGIC T_RBRACKET STATEMENT T_ELSE T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   34   | T_IF T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET T_ELSE STATEMENT
   35   | T_IF T_LBRACKET LOGIC T_RBRACKET STATEMENT T_ELSE STATEMENT

   36 LOGIC: LOGIC2
   37      | LOGIC T_OR LOGIC2

   38 LOGIC2: LOGIC3
   39       | LOGIC2 T_AND LOGIC3

   40 LOGIC3: LOGIC4
   41       | LOGIC3 T_EQUAL LOGIC4
   42       | LOGIC3 T_NOTEQUAL LOGIC4

   43 LOGIC4: LOGIC5
   44       | LOGIC4 T_GREATER LOGIC5
   45       | LOGIC4 T_EQGT LOGIC5
   46       | LOGIC4 T_LESS LOGIC5
   47       | LOGIC4 T_EQLT LOGIC5

   48 LOGIC5: EXPR
   49       | T_LBRACKET LOGIC T_RBRACKET

   50 EXPR: EXPR2
   51     | EXPR T_ADD EXPR2
   52     | EXPR T_SUB EXPR2

   53 EXPR2: EXPR3
   54      | EXPR2 T_MULT EXPR3
   55      | EXPR2 T_DIV EXPR3
   56      | EXPR2 T_MOD EXPR3

   57 EXPR3: VALUE_WITH_FUNC
   58      | T_LBRACKET EXPR T_RBRACKET

   59 VALUE_WITH_FUNC: VALUE
   60                | FUNC_EVOKE

   61 VALUE: T_NUMBER
   62      | T_SUB T_NUMBER
   63      | T_VARIABLE

   64 VALUE_FOR_STORE: T_VARIABLE

   65 FUNC_EVOKE: VALUE T_LBRACKET ARGUMENT_LIST T_RBRACKET


Terminals, with rules where they appear

$end (0) 0
error (256)
T_ASSIGN (258) 23 24
T_LBRACKET (259) 12 29 30 31 32 33 34 35 49 58 65
T_RBRACKET (260) 12 29 30 31 32 33 34 35 49 58 65
T_LCURLBRACKET (261) 12 29 30 32 33 34
T_RCURLBRACKET (262) 12 29 30 32 33 34
T_SEMICOLON (263) 14 16 23 24 26 27
T_COLON (264)
T_COMMA (265) 19
T_INT (266) 13 14
T_VOID (267) 15 16
T_RETURN (268) 27
T_IF (269) 30 31 32 33 34 35
T_ELSE (270) 32 33 34 35
T_WHILE (271) 29
T_AND (272) 39
T_OR (273) 37
T_ADD (274) 51
T_SUB (275) 52 62
T_MULT (276) 54
T_DIV (277) 55
T_MOD (278) 56
T_EQUAL (279) 41
T_NOTEQUAL (280) 42
T_LESS (281) 46
T_EQLT (282) 47
T_GREATER (283) 44
T_EQGT (284) 45
T_NUMBER (285) 61 62
T_VARIABLE (286) 63 64


Nonterminals, with rules where they appear

$accept (32)
    on left: 0
ROOT (33)
    on left: 1, on right: 0
PROGRAM (34)
    on left: 2 3, on right: 1 3
STATEMENT (35)
    on left: 4 5 6 7, on right: 3 9 31 33 34 35
STATEMENT_LIST (36)
    on left: 8 9, on right: 9 12 29 30 32 33 34
DECLARATION (37)
    on left: 10 11, on right: 4
FUNC_DECLARATION (38)
    on left: 12, on right: 10
VAR_DECLARATION (39)
    on left: 13 14 15 16, on right: 11 12 20 23
ARGUMENT_LIST (40)
    on left: 17 18 19, on right: 12 19 65
ARGUMENT (41)
    on left: 20 21, on right: 18 19
ASSIGNMENT (42)
    on left: 22, on right: 5
ASSIGN (43)
    on left: 23 24, on right: 22
JUMP (44)
    on left: 25 26, on right: 6
RETURN (45)
    on left: 27, on right: 25
CONTROL (46)
    on left: 28 29, on right: 7
IF (47)
    on left: 30 31 32 33 34 35, on right: 28
LOGIC (48)
    on left: 36 37, on right: 27 29 30 31 32 33 34 35 37 49
LOGIC2 (49)
    on left: 38 39, on right: 36 37 39
LOGIC3 (50)
    on left: 40 41 42, on right: 38 39 41 42
LOGIC4 (51)
    on left: 43 44 45 46 47, on right: 40 41 42 44 45 46 47
LOGIC5 (52)
    on left: 48 49, on right: 43 44 45 46 47
EXPR (53)
    on left: 50 51 52, on right: 23 24 48 51 52 58
EXPR2 (54)
    on left: 53 54 55 56, on right: 50 51 52 54 55 56
EXPR3 (55)
    on left: 57 58, on right: 53 54 55 56
VALUE_WITH_FUNC (56)
    on left: 59 60, on right: 57
VALUE (57)
    on left: 61 62 63, on right: 21 59 65
VALUE_FOR_STORE (58)
    on left: 64, on right: 13 14 15 16 24
FUNC_EVOKE (59)
    on left: 65, on right: 26 60


State 0

    0 $accept: . ROOT $end

    $default  reduce using rule 2 (PROGRAM)

    ROOT     go to state 1
    PROGRAM  go to state 2


State 1

    0 $accept: ROOT . $end

    $end  shift, and go to state 3


State 2

    1 ROOT: PROGRAM .
    3 PROGRAM: PROGRAM . STATEMENT

    T_INT       shift, and go to state 4
    T_VOID      shift, and go to state 5
    T_RETURN    shift, and go to state 6
    T_IF        shift, and go to state 7
    T_WHILE     shift, and go to state 8
    T_SUB       shift, and go to state 9
    T_NUMBER    shift, and go to state 10
    T_VARIABLE  shift, and go to state 11

    $default  reduce using rule 1 (ROOT)

    STATEMENT         go to state 12
    DECLARATION       go to state 13
    FUNC_DECLARATION  go to state 14
    VAR_DECLARATION   go to state 15
    ASSIGNMENT        go to state 16
    ASSIGN            go to state 17
    JUMP              go to state 18
    RETURN            go to state 19
    CONTROL           go to state 20
    IF                go to state 21
    VALUE             go to state 22
    VALUE_FOR_STORE   go to state 23
    FUNC_EVOKE        go to state 24


State 3

    0 $accept: ROOT $end .

    $default  accept


State 4

   13 VAR_DECLARATION: T_INT . VALUE_FOR_STORE
   14                | T_INT . VALUE_FOR_STORE T_SEMICOLON

    T_VARIABLE  shift, and go to state 25

    VALUE_FOR_STORE  go to state 26


State 5

   15 VAR_DECLARATION: T_VOID . VALUE_FOR_STORE
   16                | T_VOID . VALUE_FOR_STORE T_SEMICOLON

    T_VARIABLE  shift, and go to state 25

    VALUE_FOR_STORE  go to state 27


State 6

   27 RETURN: T_RETURN . LOGIC T_SEMICOLON

    T_LBRACKET  shift, and go to state 28
    T_SUB       shift, and go to state 9
    T_NUMBER    shift, and go to state 10
    T_VARIABLE  shift, and go to state 29

    LOGIC            go to state 30
    LOGIC2           go to state 31
    LOGIC3           go to state 32
    LOGIC4           go to state 33
    LOGIC5           go to state 34
    EXPR             go to state 35
    EXPR2            go to state 36
    EXPR3            go to state 37
    VALUE_WITH_FUNC  go to state 38
    VALUE            go to state 39
    FUNC_EVOKE       go to state 40


State 7

   30 IF: T_IF . T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   31   | T_IF . T_LBRACKET LOGIC T_RBRACKET STATEMENT
   32   | T_IF . T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET T_ELSE T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   33   | T_IF . T_LBRACKET LOGIC T_RBRACKET STATEMENT T_ELSE T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   34   | T_IF . T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET T_ELSE STATEMENT
   35   | T_IF . T_LBRACKET LOGIC T_RBRACKET STATEMENT T_ELSE STATEMENT

    T_LBRACKET  shift, and go to state 41


State 8

   29 CONTROL: T_WHILE . T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET

    T_LBRACKET  shift, and go to state 42


State 9

   62 VALUE: T_SUB . T_NUMBER

    T_NUMBER  shift, and go to state 43


State 10

   61 VALUE: T_NUMBER .

    $default  reduce using rule 61 (VALUE)


State 11

   63 VALUE: T_VARIABLE .
   64 VALUE_FOR_STORE: T_VARIABLE .

    T_ASSIGN  reduce using rule 64 (VALUE_FOR_STORE)
    $default  reduce using rule 63 (VALUE)


State 12

    3 PROGRAM: PROGRAM STATEMENT .

    $default  reduce using rule 3 (PROGRAM)


State 13

    4 STATEMENT: DECLARATION .

    $default  reduce using rule 4 (STATEMENT)


State 14

   10 DECLARATION: FUNC_DECLARATION .

    $default  reduce using rule 10 (DECLARATION)


State 15

   11 DECLARATION: VAR_DECLARATION .
   12 FUNC_DECLARATION: VAR_DECLARATION . T_LBRACKET ARGUMENT_LIST T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   23 ASSIGN: VAR_DECLARATION . T_ASSIGN EXPR T_SEMICOLON

    T_ASSIGN    shift, and go to state 44
    T_LBRACKET  shift, and go to state 45

    $default  reduce using rule 11 (DECLARATION)


State 16

    5 STATEMENT: ASSIGNMENT .

    $default  reduce using rule 5 (STATEMENT)


State 17

   22 ASSIGNMENT: ASSIGN .

    $default  reduce using rule 22 (ASSIGNMENT)


State 18

    6 STATEMENT: JUMP .

    $default  reduce using rule 6 (STATEMENT)


State 19

   25 JUMP: RETURN .

    $default  reduce using rule 25 (JUMP)


State 20

    7 STATEMENT: CONTROL .

    $default  reduce using rule 7 (STATEMENT)


State 21

   28 CONTROL: IF .

    $default  reduce using rule 28 (CONTROL)


State 22

   65 FUNC_EVOKE: VALUE . T_LBRACKET ARGUMENT_LIST T_RBRACKET

    T_LBRACKET  shift, and go to state 46


State 23

   24 ASSIGN: VALUE_FOR_STORE . T_ASSIGN EXPR T_SEMICOLON

    T_ASSIGN  shift, and go to state 47


State 24

   26 JUMP: FUNC_EVOKE . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 48


State 25

   64 VALUE_FOR_STORE: T_VARIABLE .

    $default  reduce using rule 64 (VALUE_FOR_STORE)


State 26

   13 VAR_DECLARATION: T_INT VALUE_FOR_STORE .
   14                | T_INT VALUE_FOR_STORE . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 49

    $default  reduce using rule 13 (VAR_DECLARATION)


State 27

   15 VAR_DECLARATION: T_VOID VALUE_FOR_STORE .
   16                | T_VOID VALUE_FOR_STORE . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 50

    $default  reduce using rule 15 (VAR_DECLARATION)


State 28

   49 LOGIC5: T_LBRACKET . LOGIC T_RBRACKET
   58 EXPR3: T_LBRACKET . EXPR T_RBRACKET

    T_LBRACKET  shift, and go to state 28
    T_SUB       shift, and go to state 9
    T_NUMBER    shift, and go to state 10
    T_VARIABLE  shift, and go to state 29

    LOGIC            go to state 51
    LOGIC2           go to state 31
    LOGIC3           go to state 32
    LOGIC4           go to state 33
    LOGIC5           go to state 34
    EXPR             go to state 52
    EXPR2            go to state 36
    EXPR3            go to state 37
    VALUE_WITH_FUNC  go to state 38
    VALUE            go to state 39
    FUNC_EVOKE       go to state 40


State 29

   63 VALUE: T_VARIABLE .

    $default  reduce using rule 63 (VALUE)


State 30

   27 RETURN: T_RETURN LOGIC . T_SEMICOLON
   37 LOGIC: LOGIC . T_OR LOGIC2

    T_SEMICOLON  shift, and go to state 53
    T_OR         shift, and go to state 54


State 31

   36 LOGIC: LOGIC2 .
   39 LOGIC2: LOGIC2 . T_AND LOGIC3

    T_AND  shift, and go to state 55

    $default  reduce using rule 36 (LOGIC)


State 32

   38 LOGIC2: LOGIC3 .
   41 LOGIC3: LOGIC3 . T_EQUAL LOGIC4
   42       | LOGIC3 . T_NOTEQUAL LOGIC4

    T_EQUAL     shift, and go to state 56
    T_NOTEQUAL  shift, and go to state 57

    $default  reduce using rule 38 (LOGIC2)


State 33

   40 LOGIC3: LOGIC4 .
   44 LOGIC4: LOGIC4 . T_GREATER LOGIC5
   45       | LOGIC4 . T_EQGT LOGIC5
   46       | LOGIC4 . T_LESS LOGIC5
   47       | LOGIC4 . T_EQLT LOGIC5

    T_LESS     shift, and go to state 58
    T_EQLT     shift, and go to state 59
    T_GREATER  shift, and go to state 60
    T_EQGT     shift, and go to state 61

    $default  reduce using rule 40 (LOGIC3)


State 34

   43 LOGIC4: LOGIC5 .

    $default  reduce using rule 43 (LOGIC4)


State 35

   48 LOGIC5: EXPR .
   51 EXPR: EXPR . T_ADD EXPR2
   52     | EXPR . T_SUB EXPR2

    T_ADD  shift, and go to state 62
    T_SUB  shift, and go to state 63

    $default  reduce using rule 48 (LOGIC5)


State 36

   50 EXPR: EXPR2 .
   54 EXPR2: EXPR2 . T_MULT EXPR3
   55      | EXPR2 . T_DIV EXPR3
   56      | EXPR2 . T_MOD EXPR3

    T_MULT  shift, and go to state 64
    T_DIV   shift, and go to state 65
    T_MOD   shift, and go to state 66

    $default  reduce using rule 50 (EXPR)


State 37

   53 EXPR2: EXPR3 .

    $default  reduce using rule 53 (EXPR2)


State 38

   57 EXPR3: VALUE_WITH_FUNC .

    $default  reduce using rule 57 (EXPR3)


State 39

   59 VALUE_WITH_FUNC: VALUE .
   65 FUNC_EVOKE: VALUE . T_LBRACKET ARGUMENT_LIST T_RBRACKET

    T_LBRACKET  shift, and go to state 46

    $default  reduce using rule 59 (VALUE_WITH_FUNC)


State 40

   60 VALUE_WITH_FUNC: FUNC_EVOKE .

    $default  reduce using rule 60 (VALUE_WITH_FUNC)


State 41

   30 IF: T_IF T_LBRACKET . LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   31   | T_IF T_LBRACKET . LOGIC T_RBRACKET STATEMENT
   32   | T_IF T_LBRACKET . LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET T_ELSE T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   33   | T_IF T_LBRACKET . LOGIC T_RBRACKET STATEMENT T_ELSE T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   34   | T_IF T_LBRACKET . LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET T_ELSE STATEMENT
   35   | T_IF T_LBRACKET . LOGIC T_RBRACKET STATEMENT T_ELSE STATEMENT

    T_LBRACKET  shift, and go to state 28
    T_SUB       shift, and go to state 9
    T_NUMBER    shift, and go to state 10
    T_VARIABLE  shift, and go to state 29

    LOGIC            go to state 67
    LOGIC2           go to state 31
    LOGIC3           go to state 32
    LOGIC4           go to state 33
    LOGIC5           go to state 34
    EXPR             go to state 35
    EXPR2            go to state 36
    EXPR3            go to state 37
    VALUE_WITH_FUNC  go to state 38
    VALUE            go to state 39
    FUNC_EVOKE       go to state 40


State 42

   29 CONTROL: T_WHILE T_LBRACKET . LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET

    T_LBRACKET  shift, and go to state 28
    T_SUB       shift, and go to state 9
    T_NUMBER    shift, and go to state 10
    T_VARIABLE  shift, and go to state 29

    LOGIC            go to state 68
    LOGIC2           go to state 31
    LOGIC3           go to state 32
    LOGIC4           go to state 33
    LOGIC5           go to state 34
    EXPR             go to state 35
    EXPR2            go to state 36
    EXPR3            go to state 37
    VALUE_WITH_FUNC  go to state 38
    VALUE            go to state 39
    FUNC_EVOKE       go to state 40


State 43

   62 VALUE: T_SUB T_NUMBER .

    $default  reduce using rule 62 (VALUE)


State 44

   23 ASSIGN: VAR_DECLARATION T_ASSIGN . EXPR T_SEMICOLON

    T_LBRACKET  shift, and go to state 69
    T_SUB       shift, and go to state 9
    T_NUMBER    shift, and go to state 10
    T_VARIABLE  shift, and go to state 29

    EXPR             go to state 70
    EXPR2            go to state 36
    EXPR3            go to state 37
    VALUE_WITH_FUNC  go to state 38
    VALUE            go to state 39
    FUNC_EVOKE       go to state 40


State 45

   12 FUNC_DECLARATION: VAR_DECLARATION T_LBRACKET . ARGUMENT_LIST T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET

    T_INT       shift, and go to state 4
    T_VOID      shift, and go to state 5
    T_SUB       shift, and go to state 9
    T_NUMBER    shift, and go to state 10
    T_VARIABLE  shift, and go to state 29

    $default  reduce using rule 17 (ARGUMENT_LIST)

    VAR_DECLARATION  go to state 71
    ARGUMENT_LIST    go to state 72
    ARGUMENT         go to state 73
    VALUE            go to state 74


State 46

   65 FUNC_EVOKE: VALUE T_LBRACKET . ARGUMENT_LIST T_RBRACKET

    T_INT       shift, and go to state 4
    T_VOID      shift, and go to state 5
    T_SUB       shift, and go to state 9
    T_NUMBER    shift, and go to state 10
    T_VARIABLE  shift, and go to state 29

    $default  reduce using rule 17 (ARGUMENT_LIST)

    VAR_DECLARATION  go to state 71
    ARGUMENT_LIST    go to state 75
    ARGUMENT         go to state 73
    VALUE            go to state 74


State 47

   24 ASSIGN: VALUE_FOR_STORE T_ASSIGN . EXPR T_SEMICOLON

    T_LBRACKET  shift, and go to state 69
    T_SUB       shift, and go to state 9
    T_NUMBER    shift, and go to state 10
    T_VARIABLE  shift, and go to state 29

    EXPR             go to state 76
    EXPR2            go to state 36
    EXPR3            go to state 37
    VALUE_WITH_FUNC  go to state 38
    VALUE            go to state 39
    FUNC_EVOKE       go to state 40


State 48

   26 JUMP: FUNC_EVOKE T_SEMICOLON .

    $default  reduce using rule 26 (JUMP)


State 49

   14 VAR_DECLARATION: T_INT VALUE_FOR_STORE T_SEMICOLON .

    $default  reduce using rule 14 (VAR_DECLARATION)


State 50

   16 VAR_DECLARATION: T_VOID VALUE_FOR_STORE T_SEMICOLON .

    $default  reduce using rule 16 (VAR_DECLARATION)


State 51

   37 LOGIC: LOGIC . T_OR LOGIC2
   49 LOGIC5: T_LBRACKET LOGIC . T_RBRACKET

    T_RBRACKET  shift, and go to state 77
    T_OR        shift, and go to state 54


State 52

   48 LOGIC5: EXPR .
   51 EXPR: EXPR . T_ADD EXPR2
   52     | EXPR . T_SUB EXPR2
   58 EXPR3: T_LBRACKET EXPR . T_RBRACKET

    T_RBRACKET  shift, and go to state 78
    T_ADD       shift, and go to state 62
    T_SUB       shift, and go to state 63

    T_RBRACKET  [reduce using rule 48 (LOGIC5)]
    $default    reduce using rule 48 (LOGIC5)


State 53

   27 RETURN: T_RETURN LOGIC T_SEMICOLON .

    $default  reduce using rule 27 (RETURN)


State 54

   37 LOGIC: LOGIC T_OR . LOGIC2

    T_LBRACKET  shift, and go to state 28
    T_SUB       shift, and go to state 9
    T_NUMBER    shift, and go to state 10
    T_VARIABLE  shift, and go to state 29

    LOGIC2           go to state 79
    LOGIC3           go to state 32
    LOGIC4           go to state 33
    LOGIC5           go to state 34
    EXPR             go to state 35
    EXPR2            go to state 36
    EXPR3            go to state 37
    VALUE_WITH_FUNC  go to state 38
    VALUE            go to state 39
    FUNC_EVOKE       go to state 40


State 55

   39 LOGIC2: LOGIC2 T_AND . LOGIC3

    T_LBRACKET  shift, and go to state 28
    T_SUB       shift, and go to state 9
    T_NUMBER    shift, and go to state 10
    T_VARIABLE  shift, and go to state 29

    LOGIC3           go to state 80
    LOGIC4           go to state 33
    LOGIC5           go to state 34
    EXPR             go to state 35
    EXPR2            go to state 36
    EXPR3            go to state 37
    VALUE_WITH_FUNC  go to state 38
    VALUE            go to state 39
    FUNC_EVOKE       go to state 40


State 56

   41 LOGIC3: LOGIC3 T_EQUAL . LOGIC4

    T_LBRACKET  shift, and go to state 28
    T_SUB       shift, and go to state 9
    T_NUMBER    shift, and go to state 10
    T_VARIABLE  shift, and go to state 29

    LOGIC4           go to state 81
    LOGIC5           go to state 34
    EXPR             go to state 35
    EXPR2            go to state 36
    EXPR3            go to state 37
    VALUE_WITH_FUNC  go to state 38
    VALUE            go to state 39
    FUNC_EVOKE       go to state 40


State 57

   42 LOGIC3: LOGIC3 T_NOTEQUAL . LOGIC4

    T_LBRACKET  shift, and go to state 28
    T_SUB       shift, and go to state 9
    T_NUMBER    shift, and go to state 10
    T_VARIABLE  shift, and go to state 29

    LOGIC4           go to state 82
    LOGIC5           go to state 34
    EXPR             go to state 35
    EXPR2            go to state 36
    EXPR3            go to state 37
    VALUE_WITH_FUNC  go to state 38
    VALUE            go to state 39
    FUNC_EVOKE       go to state 40


State 58

   46 LOGIC4: LOGIC4 T_LESS . LOGIC5

    T_LBRACKET  shift, and go to state 28
    T_SUB       shift, and go to state 9
    T_NUMBER    shift, and go to state 10
    T_VARIABLE  shift, and go to state 29

    LOGIC5           go to state 83
    EXPR             go to state 35
    EXPR2            go to state 36
    EXPR3            go to state 37
    VALUE_WITH_FUNC  go to state 38
    VALUE            go to state 39
    FUNC_EVOKE       go to state 40


State 59

   47 LOGIC4: LOGIC4 T_EQLT . LOGIC5

    T_LBRACKET  shift, and go to state 28
    T_SUB       shift, and go to state 9
    T_NUMBER    shift, and go to state 10
    T_VARIABLE  shift, and go to state 29

    LOGIC5           go to state 84
    EXPR             go to state 35
    EXPR2            go to state 36
    EXPR3            go to state 37
    VALUE_WITH_FUNC  go to state 38
    VALUE            go to state 39
    FUNC_EVOKE       go to state 40


State 60

   44 LOGIC4: LOGIC4 T_GREATER . LOGIC5

    T_LBRACKET  shift, and go to state 28
    T_SUB       shift, and go to state 9
    T_NUMBER    shift, and go to state 10
    T_VARIABLE  shift, and go to state 29

    LOGIC5           go to state 85
    EXPR             go to state 35
    EXPR2            go to state 36
    EXPR3            go to state 37
    VALUE_WITH_FUNC  go to state 38
    VALUE            go to state 39
    FUNC_EVOKE       go to state 40


State 61

   45 LOGIC4: LOGIC4 T_EQGT . LOGIC5

    T_LBRACKET  shift, and go to state 28
    T_SUB       shift, and go to state 9
    T_NUMBER    shift, and go to state 10
    T_VARIABLE  shift, and go to state 29

    LOGIC5           go to state 86
    EXPR             go to state 35
    EXPR2            go to state 36
    EXPR3            go to state 37
    VALUE_WITH_FUNC  go to state 38
    VALUE            go to state 39
    FUNC_EVOKE       go to state 40


State 62

   51 EXPR: EXPR T_ADD . EXPR2

    T_LBRACKET  shift, and go to state 69
    T_SUB       shift, and go to state 9
    T_NUMBER    shift, and go to state 10
    T_VARIABLE  shift, and go to state 29

    EXPR2            go to state 87
    EXPR3            go to state 37
    VALUE_WITH_FUNC  go to state 38
    VALUE            go to state 39
    FUNC_EVOKE       go to state 40


State 63

   52 EXPR: EXPR T_SUB . EXPR2

    T_LBRACKET  shift, and go to state 69
    T_SUB       shift, and go to state 9
    T_NUMBER    shift, and go to state 10
    T_VARIABLE  shift, and go to state 29

    EXPR2            go to state 88
    EXPR3            go to state 37
    VALUE_WITH_FUNC  go to state 38
    VALUE            go to state 39
    FUNC_EVOKE       go to state 40


State 64

   54 EXPR2: EXPR2 T_MULT . EXPR3

    T_LBRACKET  shift, and go to state 69
    T_SUB       shift, and go to state 9
    T_NUMBER    shift, and go to state 10
    T_VARIABLE  shift, and go to state 29

    EXPR3            go to state 89
    VALUE_WITH_FUNC  go to state 38
    VALUE            go to state 39
    FUNC_EVOKE       go to state 40


State 65

   55 EXPR2: EXPR2 T_DIV . EXPR3

    T_LBRACKET  shift, and go to state 69
    T_SUB       shift, and go to state 9
    T_NUMBER    shift, and go to state 10
    T_VARIABLE  shift, and go to state 29

    EXPR3            go to state 90
    VALUE_WITH_FUNC  go to state 38
    VALUE            go to state 39
    FUNC_EVOKE       go to state 40


State 66

   56 EXPR2: EXPR2 T_MOD . EXPR3

    T_LBRACKET  shift, and go to state 69
    T_SUB       shift, and go to state 9
    T_NUMBER    shift, and go to state 10
    T_VARIABLE  shift, and go to state 29

    EXPR3            go to state 91
    VALUE_WITH_FUNC  go to state 38
    VALUE            go to state 39
    FUNC_EVOKE       go to state 40


State 67

   30 IF: T_IF T_LBRACKET LOGIC . T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   31   | T_IF T_LBRACKET LOGIC . T_RBRACKET STATEMENT
   32   | T_IF T_LBRACKET LOGIC . T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET T_ELSE T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   33   | T_IF T_LBRACKET LOGIC . T_RBRACKET STATEMENT T_ELSE T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   34   | T_IF T_LBRACKET LOGIC . T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET T_ELSE STATEMENT
   35   | T_IF T_LBRACKET LOGIC . T_RBRACKET STATEMENT T_ELSE STATEMENT
   37 LOGIC: LOGIC . T_OR LOGIC2

    T_RBRACKET  shift, and go to state 92
    T_OR        shift, and go to state 54


State 68

   29 CONTROL: T_WHILE T_LBRACKET LOGIC . T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   37 LOGIC: LOGIC . T_OR LOGIC2

    T_RBRACKET  shift, and go to state 93
    T_OR        shift, and go to state 54


State 69

   58 EXPR3: T_LBRACKET . EXPR T_RBRACKET

    T_LBRACKET  shift, and go to state 69
    T_SUB       shift, and go to state 9
    T_NUMBER    shift, and go to state 10
    T_VARIABLE  shift, and go to state 29

    EXPR             go to state 94
    EXPR2            go to state 36
    EXPR3            go to state 37
    VALUE_WITH_FUNC  go to state 38
    VALUE            go to state 39
    FUNC_EVOKE       go to state 40


State 70

   23 ASSIGN: VAR_DECLARATION T_ASSIGN EXPR . T_SEMICOLON
   51 EXPR: EXPR . T_ADD EXPR2
   52     | EXPR . T_SUB EXPR2

    T_SEMICOLON  shift, and go to state 95
    T_ADD        shift, and go to state 62
    T_SUB        shift, and go to state 63


State 71

   20 ARGUMENT: VAR_DECLARATION .

    $default  reduce using rule 20 (ARGUMENT)


State 72

   12 FUNC_DECLARATION: VAR_DECLARATION T_LBRACKET ARGUMENT_LIST . T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   19 ARGUMENT_LIST: ARGUMENT_LIST . T_COMMA ARGUMENT

    T_RBRACKET  shift, and go to state 96
    T_COMMA     shift, and go to state 97


State 73

   18 ARGUMENT_LIST: ARGUMENT .

    $default  reduce using rule 18 (ARGUMENT_LIST)


State 74

   21 ARGUMENT: VALUE .

    $default  reduce using rule 21 (ARGUMENT)


State 75

   19 ARGUMENT_LIST: ARGUMENT_LIST . T_COMMA ARGUMENT
   65 FUNC_EVOKE: VALUE T_LBRACKET ARGUMENT_LIST . T_RBRACKET

    T_RBRACKET  shift, and go to state 98
    T_COMMA     shift, and go to state 97


State 76

   24 ASSIGN: VALUE_FOR_STORE T_ASSIGN EXPR . T_SEMICOLON
   51 EXPR: EXPR . T_ADD EXPR2
   52     | EXPR . T_SUB EXPR2

    T_SEMICOLON  shift, and go to state 99
    T_ADD        shift, and go to state 62
    T_SUB        shift, and go to state 63


State 77

   49 LOGIC5: T_LBRACKET LOGIC T_RBRACKET .

    $default  reduce using rule 49 (LOGIC5)


State 78

   58 EXPR3: T_LBRACKET EXPR T_RBRACKET .

    $default  reduce using rule 58 (EXPR3)


State 79

   37 LOGIC: LOGIC T_OR LOGIC2 .
   39 LOGIC2: LOGIC2 . T_AND LOGIC3

    T_AND  shift, and go to state 55

    $default  reduce using rule 37 (LOGIC)


State 80

   39 LOGIC2: LOGIC2 T_AND LOGIC3 .
   41 LOGIC3: LOGIC3 . T_EQUAL LOGIC4
   42       | LOGIC3 . T_NOTEQUAL LOGIC4

    T_EQUAL     shift, and go to state 56
    T_NOTEQUAL  shift, and go to state 57

    $default  reduce using rule 39 (LOGIC2)


State 81

   41 LOGIC3: LOGIC3 T_EQUAL LOGIC4 .
   44 LOGIC4: LOGIC4 . T_GREATER LOGIC5
   45       | LOGIC4 . T_EQGT LOGIC5
   46       | LOGIC4 . T_LESS LOGIC5
   47       | LOGIC4 . T_EQLT LOGIC5

    T_LESS     shift, and go to state 58
    T_EQLT     shift, and go to state 59
    T_GREATER  shift, and go to state 60
    T_EQGT     shift, and go to state 61

    $default  reduce using rule 41 (LOGIC3)


State 82

   42 LOGIC3: LOGIC3 T_NOTEQUAL LOGIC4 .
   44 LOGIC4: LOGIC4 . T_GREATER LOGIC5
   45       | LOGIC4 . T_EQGT LOGIC5
   46       | LOGIC4 . T_LESS LOGIC5
   47       | LOGIC4 . T_EQLT LOGIC5

    T_LESS     shift, and go to state 58
    T_EQLT     shift, and go to state 59
    T_GREATER  shift, and go to state 60
    T_EQGT     shift, and go to state 61

    $default  reduce using rule 42 (LOGIC3)


State 83

   46 LOGIC4: LOGIC4 T_LESS LOGIC5 .

    $default  reduce using rule 46 (LOGIC4)


State 84

   47 LOGIC4: LOGIC4 T_EQLT LOGIC5 .

    $default  reduce using rule 47 (LOGIC4)


State 85

   44 LOGIC4: LOGIC4 T_GREATER LOGIC5 .

    $default  reduce using rule 44 (LOGIC4)


State 86

   45 LOGIC4: LOGIC4 T_EQGT LOGIC5 .

    $default  reduce using rule 45 (LOGIC4)


State 87

   51 EXPR: EXPR T_ADD EXPR2 .
   54 EXPR2: EXPR2 . T_MULT EXPR3
   55      | EXPR2 . T_DIV EXPR3
   56      | EXPR2 . T_MOD EXPR3

    T_MULT  shift, and go to state 64
    T_DIV   shift, and go to state 65
    T_MOD   shift, and go to state 66

    $default  reduce using rule 51 (EXPR)


State 88

   52 EXPR: EXPR T_SUB EXPR2 .
   54 EXPR2: EXPR2 . T_MULT EXPR3
   55      | EXPR2 . T_DIV EXPR3
   56      | EXPR2 . T_MOD EXPR3

    T_MULT  shift, and go to state 64
    T_DIV   shift, and go to state 65
    T_MOD   shift, and go to state 66

    $default  reduce using rule 52 (EXPR)


State 89

   54 EXPR2: EXPR2 T_MULT EXPR3 .

    $default  reduce using rule 54 (EXPR2)


State 90

   55 EXPR2: EXPR2 T_DIV EXPR3 .

    $default  reduce using rule 55 (EXPR2)


State 91

   56 EXPR2: EXPR2 T_MOD EXPR3 .

    $default  reduce using rule 56 (EXPR2)


State 92

   30 IF: T_IF T_LBRACKET LOGIC T_RBRACKET . T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   31   | T_IF T_LBRACKET LOGIC T_RBRACKET . STATEMENT
   32   | T_IF T_LBRACKET LOGIC T_RBRACKET . T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET T_ELSE T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   33   | T_IF T_LBRACKET LOGIC T_RBRACKET . STATEMENT T_ELSE T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   34   | T_IF T_LBRACKET LOGIC T_RBRACKET . T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET T_ELSE STATEMENT
   35   | T_IF T_LBRACKET LOGIC T_RBRACKET . STATEMENT T_ELSE STATEMENT

    T_LCURLBRACKET  shift, and go to state 100
    T_INT           shift, and go to state 4
    T_VOID          shift, and go to state 5
    T_RETURN        shift, and go to state 6
    T_IF            shift, and go to state 7
    T_WHILE         shift, and go to state 8
    T_SUB           shift, and go to state 9
    T_NUMBER        shift, and go to state 10
    T_VARIABLE      shift, and go to state 11

    STATEMENT         go to state 101
    DECLARATION       go to state 13
    FUNC_DECLARATION  go to state 14
    VAR_DECLARATION   go to state 15
    ASSIGNMENT        go to state 16
    ASSIGN            go to state 17
    JUMP              go to state 18
    RETURN            go to state 19
    CONTROL           go to state 20
    IF                go to state 21
    VALUE             go to state 22
    VALUE_FOR_STORE   go to state 23
    FUNC_EVOKE        go to state 24


State 93

   29 CONTROL: T_WHILE T_LBRACKET LOGIC T_RBRACKET . T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET

    T_LCURLBRACKET  shift, and go to state 102


State 94

   51 EXPR: EXPR . T_ADD EXPR2
   52     | EXPR . T_SUB EXPR2
   58 EXPR3: T_LBRACKET EXPR . T_RBRACKET

    T_RBRACKET  shift, and go to state 78
    T_ADD       shift, and go to state 62
    T_SUB       shift, and go to state 63


State 95

   23 ASSIGN: VAR_DECLARATION T_ASSIGN EXPR T_SEMICOLON .

    $default  reduce using rule 23 (ASSIGN)


State 96

   12 FUNC_DECLARATION: VAR_DECLARATION T_LBRACKET ARGUMENT_LIST T_RBRACKET . T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET

    T_LCURLBRACKET  shift, and go to state 103


State 97

   19 ARGUMENT_LIST: ARGUMENT_LIST T_COMMA . ARGUMENT

    T_INT       shift, and go to state 4
    T_VOID      shift, and go to state 5
    T_SUB       shift, and go to state 9
    T_NUMBER    shift, and go to state 10
    T_VARIABLE  shift, and go to state 29

    VAR_DECLARATION  go to state 71
    ARGUMENT         go to state 104
    VALUE            go to state 74


State 98

   65 FUNC_EVOKE: VALUE T_LBRACKET ARGUMENT_LIST T_RBRACKET .

    $default  reduce using rule 65 (FUNC_EVOKE)


State 99

   24 ASSIGN: VALUE_FOR_STORE T_ASSIGN EXPR T_SEMICOLON .

    $default  reduce using rule 24 (ASSIGN)


State 100

   30 IF: T_IF T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET . STATEMENT_LIST T_RCURLBRACKET
   32   | T_IF T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET . STATEMENT_LIST T_RCURLBRACKET T_ELSE T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   34   | T_IF T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET . STATEMENT_LIST T_RCURLBRACKET T_ELSE STATEMENT

    $default  reduce using rule 8 (STATEMENT_LIST)

    STATEMENT_LIST  go to state 105


State 101

   31 IF: T_IF T_LBRACKET LOGIC T_RBRACKET STATEMENT .
   33   | T_IF T_LBRACKET LOGIC T_RBRACKET STATEMENT . T_ELSE T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   35   | T_IF T_LBRACKET LOGIC T_RBRACKET STATEMENT . T_ELSE STATEMENT

    T_ELSE  shift, and go to state 106

    T_ELSE    [reduce using rule 31 (IF)]
    $default  reduce using rule 31 (IF)


State 102

   29 CONTROL: T_WHILE T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET . STATEMENT_LIST T_RCURLBRACKET

    $default  reduce using rule 8 (STATEMENT_LIST)

    STATEMENT_LIST  go to state 107


State 103

   12 FUNC_DECLARATION: VAR_DECLARATION T_LBRACKET ARGUMENT_LIST T_RBRACKET T_LCURLBRACKET . STATEMENT_LIST T_RCURLBRACKET

    $default  reduce using rule 8 (STATEMENT_LIST)

    STATEMENT_LIST  go to state 108


State 104

   19 ARGUMENT_LIST: ARGUMENT_LIST T_COMMA ARGUMENT .

    $default  reduce using rule 19 (ARGUMENT_LIST)


State 105

    9 STATEMENT_LIST: STATEMENT_LIST . STATEMENT
   30 IF: T_IF T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST . T_RCURLBRACKET
   32   | T_IF T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST . T_RCURLBRACKET T_ELSE T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   34   | T_IF T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST . T_RCURLBRACKET T_ELSE STATEMENT

    T_RCURLBRACKET  shift, and go to state 109
    T_INT           shift, and go to state 4
    T_VOID          shift, and go to state 5
    T_RETURN        shift, and go to state 6
    T_IF            shift, and go to state 7
    T_WHILE         shift, and go to state 8
    T_SUB           shift, and go to state 9
    T_NUMBER        shift, and go to state 10
    T_VARIABLE      shift, and go to state 11

    STATEMENT         go to state 110
    DECLARATION       go to state 13
    FUNC_DECLARATION  go to state 14
    VAR_DECLARATION   go to state 15
    ASSIGNMENT        go to state 16
    ASSIGN            go to state 17
    JUMP              go to state 18
    RETURN            go to state 19
    CONTROL           go to state 20
    IF                go to state 21
    VALUE             go to state 22
    VALUE_FOR_STORE   go to state 23
    FUNC_EVOKE        go to state 24


State 106

   33 IF: T_IF T_LBRACKET LOGIC T_RBRACKET STATEMENT T_ELSE . T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   35   | T_IF T_LBRACKET LOGIC T_RBRACKET STATEMENT T_ELSE . STATEMENT

    T_LCURLBRACKET  shift, and go to state 111
    T_INT           shift, and go to state 4
    T_VOID          shift, and go to state 5
    T_RETURN        shift, and go to state 6
    T_IF            shift, and go to state 7
    T_WHILE         shift, and go to state 8
    T_SUB           shift, and go to state 9
    T_NUMBER        shift, and go to state 10
    T_VARIABLE      shift, and go to state 11

    STATEMENT         go to state 112
    DECLARATION       go to state 13
    FUNC_DECLARATION  go to state 14
    VAR_DECLARATION   go to state 15
    ASSIGNMENT        go to state 16
    ASSIGN            go to state 17
    JUMP              go to state 18
    RETURN            go to state 19
    CONTROL           go to state 20
    IF                go to state 21
    VALUE             go to state 22
    VALUE_FOR_STORE   go to state 23
    FUNC_EVOKE        go to state 24


State 107

    9 STATEMENT_LIST: STATEMENT_LIST . STATEMENT
   29 CONTROL: T_WHILE T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST . T_RCURLBRACKET

    T_RCURLBRACKET  shift, and go to state 113
    T_INT           shift, and go to state 4
    T_VOID          shift, and go to state 5
    T_RETURN        shift, and go to state 6
    T_IF            shift, and go to state 7
    T_WHILE         shift, and go to state 8
    T_SUB           shift, and go to state 9
    T_NUMBER        shift, and go to state 10
    T_VARIABLE      shift, and go to state 11

    STATEMENT         go to state 110
    DECLARATION       go to state 13
    FUNC_DECLARATION  go to state 14
    VAR_DECLARATION   go to state 15
    ASSIGNMENT        go to state 16
    ASSIGN            go to state 17
    JUMP              go to state 18
    RETURN            go to state 19
    CONTROL           go to state 20
    IF                go to state 21
    VALUE             go to state 22
    VALUE_FOR_STORE   go to state 23
    FUNC_EVOKE        go to state 24


State 108

    9 STATEMENT_LIST: STATEMENT_LIST . STATEMENT
   12 FUNC_DECLARATION: VAR_DECLARATION T_LBRACKET ARGUMENT_LIST T_RBRACKET T_LCURLBRACKET STATEMENT_LIST . T_RCURLBRACKET

    T_RCURLBRACKET  shift, and go to state 114
    T_INT           shift, and go to state 4
    T_VOID          shift, and go to state 5
    T_RETURN        shift, and go to state 6
    T_IF            shift, and go to state 7
    T_WHILE         shift, and go to state 8
    T_SUB           shift, and go to state 9
    T_NUMBER        shift, and go to state 10
    T_VARIABLE      shift, and go to state 11

    STATEMENT         go to state 110
    DECLARATION       go to state 13
    FUNC_DECLARATION  go to state 14
    VAR_DECLARATION   go to state 15
    ASSIGNMENT        go to state 16
    ASSIGN            go to state 17
    JUMP              go to state 18
    RETURN            go to state 19
    CONTROL           go to state 20
    IF                go to state 21
    VALUE             go to state 22
    VALUE_FOR_STORE   go to state 23
    FUNC_EVOKE        go to state 24


State 109

   30 IF: T_IF T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET .
   32   | T_IF T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET . T_ELSE T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   34   | T_IF T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET . T_ELSE STATEMENT

    T_ELSE  shift, and go to state 115

    T_ELSE    [reduce using rule 30 (IF)]
    $default  reduce using rule 30 (IF)


State 110

    9 STATEMENT_LIST: STATEMENT_LIST STATEMENT .

    $default  reduce using rule 9 (STATEMENT_LIST)


State 111

   33 IF: T_IF T_LBRACKET LOGIC T_RBRACKET STATEMENT T_ELSE T_LCURLBRACKET . STATEMENT_LIST T_RCURLBRACKET

    $default  reduce using rule 8 (STATEMENT_LIST)

    STATEMENT_LIST  go to state 116


State 112

   35 IF: T_IF T_LBRACKET LOGIC T_RBRACKET STATEMENT T_ELSE STATEMENT .

    $default  reduce using rule 35 (IF)


State 113

   29 CONTROL: T_WHILE T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET .

    $default  reduce using rule 29 (CONTROL)


State 114

   12 FUNC_DECLARATION: VAR_DECLARATION T_LBRACKET ARGUMENT_LIST T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET .

    $default  reduce using rule 12 (FUNC_DECLARATION)


State 115

   32 IF: T_IF T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET T_ELSE . T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   34   | T_IF T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET T_ELSE . STATEMENT

    T_LCURLBRACKET  shift, and go to state 117
    T_INT           shift, and go to state 4
    T_VOID          shift, and go to state 5
    T_RETURN        shift, and go to state 6
    T_IF            shift, and go to state 7
    T_WHILE         shift, and go to state 8
    T_SUB           shift, and go to state 9
    T_NUMBER        shift, and go to state 10
    T_VARIABLE      shift, and go to state 11

    STATEMENT         go to state 118
    DECLARATION       go to state 13
    FUNC_DECLARATION  go to state 14
    VAR_DECLARATION   go to state 15
    ASSIGNMENT        go to state 16
    ASSIGN            go to state 17
    JUMP              go to state 18
    RETURN            go to state 19
    CONTROL           go to state 20
    IF                go to state 21
    VALUE             go to state 22
    VALUE_FOR_STORE   go to state 23
    FUNC_EVOKE        go to state 24


State 116

    9 STATEMENT_LIST: STATEMENT_LIST . STATEMENT
   33 IF: T_IF T_LBRACKET LOGIC T_RBRACKET STATEMENT T_ELSE T_LCURLBRACKET STATEMENT_LIST . T_RCURLBRACKET

    T_RCURLBRACKET  shift, and go to state 119
    T_INT           shift, and go to state 4
    T_VOID          shift, and go to state 5
    T_RETURN        shift, and go to state 6
    T_IF            shift, and go to state 7
    T_WHILE         shift, and go to state 8
    T_SUB           shift, and go to state 9
    T_NUMBER        shift, and go to state 10
    T_VARIABLE      shift, and go to state 11

    STATEMENT         go to state 110
    DECLARATION       go to state 13
    FUNC_DECLARATION  go to state 14
    VAR_DECLARATION   go to state 15
    ASSIGNMENT        go to state 16
    ASSIGN            go to state 17
    JUMP              go to state 18
    RETURN            go to state 19
    CONTROL           go to state 20
    IF                go to state 21
    VALUE             go to state 22
    VALUE_FOR_STORE   go to state 23
    FUNC_EVOKE        go to state 24


State 117

   32 IF: T_IF T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET T_ELSE T_LCURLBRACKET . STATEMENT_LIST T_RCURLBRACKET

    $default  reduce using rule 8 (STATEMENT_LIST)

    STATEMENT_LIST  go to state 120


State 118

   34 IF: T_IF T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET T_ELSE STATEMENT .

    $default  reduce using rule 34 (IF)


State 119

   33 IF: T_IF T_LBRACKET LOGIC T_RBRACKET STATEMENT T_ELSE T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET .

    $default  reduce using rule 33 (IF)


State 120

    9 STATEMENT_LIST: STATEMENT_LIST . STATEMENT
   32 IF: T_IF T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET T_ELSE T_LCURLBRACKET STATEMENT_LIST . T_RCURLBRACKET

    T_RCURLBRACKET  shift, and go to state 121
    T_INT           shift, and go to state 4
    T_VOID          shift, and go to state 5
    T_RETURN        shift, and go to state 6
    T_IF            shift, and go to state 7
    T_WHILE         shift, and go to state 8
    T_SUB           shift, and go to state 9
    T_NUMBER        shift, and go to state 10
    T_VARIABLE      shift, and go to state 11

    STATEMENT         go to state 110
    DECLARATION       go to state 13
    FUNC_DECLARATION  go to state 14
    VAR_DECLARATION   go to state 15
    ASSIGNMENT        go to state 16
    ASSIGN            go to state 17
    JUMP              go to state 18
    RETURN            go to state 19
    CONTROL           go to state 20
    IF                go to state 21
    VALUE             go to state 22
    VALUE_FOR_STORE   go to state 23
    FUNC_EVOKE        go to state 24


State 121

   32 IF: T_IF T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET T_ELSE T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET .

    $default  reduce using rule 32 (IF)
