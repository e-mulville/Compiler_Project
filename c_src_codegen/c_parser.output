Terminals unused in grammar

   T_COLON


State 146 conflicts: 1 shift/reduce
State 157 conflicts: 1 shift/reduce


Grammar

    0 $accept: ROOT $end

    1 ROOT: PROGRAM

    2 PROGRAM: %empty
    3        | PROGRAM STATEMENT

    4 STATEMENT: DECLARATION
    5          | ASSIGNMENT
    6          | JUMP
    7          | CONTROL

    8 STATEMENT_LIST: %empty
    9               | STATEMENT_LIST STATEMENT

   10 DECLARATION: FUNC_DECLARATION
   11            | VAR_DECLARATION

   12 FUNC_DECLARATION: VAR_DECLARATION T_LBRACKET ARGUMENT_LIST_DEC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET

   13 VAR_DECLARATION: T_INT VALUE_FOR_STORE
   14                | T_INT VALUE_FOR_STORE T_SEMICOLON
   15                | T_VOID VALUE_FOR_STORE
   16                | T_VOID VALUE_FOR_STORE T_SEMICOLON

   17 ARGUMENT_LIST_DEC: %empty
   18                  | ARGUMENT_DEC
   19                  | ARGUMENT_LIST_DEC T_COMMA ARGUMENT_DEC

   20 ARGUMENT_LIST_CALL: %empty
   21                   | ARGUMENT_CALL
   22                   | ARGUMENT_LIST_CALL T_COMMA ARGUMENT_CALL

   23 ARGUMENT_DEC: VAR_DECLARATION
   24             | VALUE_FOR_STORE

   25 ARGUMENT_CALL: VALUE

   26 ASSIGNMENT: ASSIGN

   27 ASSIGN: VAR_DECLARATION T_ASSIGN EXPR T_SEMICOLON
   28       | VALUE_FOR_STORE T_ASSIGN EXPR T_SEMICOLON
   29       | VAR_DECLARATION T_ADDASSIGN EXPR T_SEMICOLON
   30       | VALUE_FOR_STORE T_ADDASSIGN EXPR T_SEMICOLON
   31       | VAR_DECLARATION T_SUBASSIGN EXPR T_SEMICOLON
   32       | VALUE_FOR_STORE T_SUBASSIGN EXPR T_SEMICOLON
   33       | VAR_DECLARATION T_MULTASSIGN EXPR T_SEMICOLON
   34       | VALUE_FOR_STORE T_MULTASSIGN EXPR T_SEMICOLON
   35       | VAR_DECLARATION T_DIVASSIGN EXPR T_SEMICOLON
   36       | VALUE_FOR_STORE T_DIVASSIGN EXPR T_SEMICOLON
   37       | VAR_DECLARATION T_MODASSIGN EXPR T_SEMICOLON
   38       | VALUE_FOR_STORE T_MODASSIGN EXPR T_SEMICOLON
   39       | VALUE T_INCREMENT T_SEMICOLON
   40       | VALUE T_DECREMENT T_SEMICOLON

   41 JUMP: RETURN
   42     | FUNC_EVOKE T_SEMICOLON

   43 RETURN: T_RETURN LOGIC T_SEMICOLON

   44 CONTROL: IF
   45        | T_WHILE T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   46        | T_FOR T_LBRACKET LOGIC T_SEMICOLON EXPR T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET

   47 IF: T_IF T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   48   | T_IF T_LBRACKET LOGIC T_RBRACKET STATEMENT
   49   | T_IF T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET T_ELSE T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   50   | T_IF T_LBRACKET LOGIC T_RBRACKET STATEMENT T_ELSE T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   51   | T_IF T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET T_ELSE STATEMENT
   52   | T_IF T_LBRACKET LOGIC T_RBRACKET STATEMENT T_ELSE STATEMENT

   53 LOGIC: LOGIC2
   54      | LOGIC T_OR LOGIC2

   55 LOGIC2: LOGIC3
   56       | LOGIC2 T_AND LOGIC3

   57 LOGIC3: LOGIC4
   58       | LOGIC3 T_BITOR LOGIC4

   59 LOGIC4: LOGIC5
   60       | LOGIC4 T_BITXOR LOGIC5

   61 LOGIC5: LOGIC6
   62       | LOGIC5 T_BITAND LOGIC6

   63 LOGIC6: LOGIC7
   64       | LOGIC6 T_EQUAL LOGIC7
   65       | LOGIC6 T_NOTEQUAL LOGIC7

   66 LOGIC7: EXPR
   67       | LOGIC7 T_GREATER EXPR
   68       | LOGIC7 T_EQGT EXPR
   69       | LOGIC7 T_LESS EXPR
   70       | LOGIC7 T_EQLT EXPR

   71 EXPR: EXPR2
   72     | EXPR T_ADD EXPR2
   73     | EXPR T_SUB EXPR2

   74 EXPR2: EXPR3
   75      | EXPR2 T_MULT EXPR3
   76      | EXPR2 T_DIV EXPR3
   77      | EXPR2 T_MOD EXPR3

   78 EXPR3: VALUE_WITH_FUNC
   79      | T_LBRACKET LOGIC T_RBRACKET

   80 VALUE_WITH_FUNC: FUNC_EVOKE
   81                | VALUE

   82 VALUE: T_NUMBER
   83      | T_SUB T_NUMBER
   84      | T_VARIABLE

   85 VALUE_FOR_STORE: T_VARIABLE

   86 FUNC_EVOKE: VALUE T_LBRACKET ARGUMENT_LIST_CALL T_RBRACKET


Terminals, with rules where they appear

$end (0) 0
error (256)
T_ASSIGN (258) 27 28
T_ADDASSIGN (259) 29 30
T_SUBASSIGN (260) 31 32
T_MULTASSIGN (261) 33 34
T_DIVASSIGN (262) 35 36
T_MODASSIGN (263) 37 38
T_LBRACKET (264) 12 45 46 47 48 49 50 51 52 79 86
T_RBRACKET (265) 12 45 46 47 48 49 50 51 52 79 86
T_LCURLBRACKET (266) 12 45 46 47 49 50 51
T_RCURLBRACKET (267) 12 45 46 47 49 50 51
T_SEMICOLON (268) 14 16 27 28 29 30 31 32 33 34 35 36 37 38 39 40 42
    43 46
T_COLON (269)
T_COMMA (270) 19 22
T_INT (271) 13 14
T_VOID (272) 15 16
T_RETURN (273) 43
T_IF (274) 47 48 49 50 51 52
T_ELSE (275) 49 50 51 52
T_WHILE (276) 45
T_FOR (277) 46
T_AND (278) 56
T_OR (279) 54
T_BITAND (280) 62
T_BITOR (281) 58
T_BITXOR (282) 60
T_ADD (283) 72
T_SUB (284) 73 83
T_MULT (285) 75
T_DIV (286) 76
T_MOD (287) 77
T_INCREMENT (288) 39
T_DECREMENT (289) 40
T_EQUAL (290) 64
T_NOTEQUAL (291) 65
T_LESS (292) 69
T_EQLT (293) 70
T_GREATER (294) 67
T_EQGT (295) 68
T_NUMBER (296) 82 83
T_VARIABLE (297) 84 85


Nonterminals, with rules where they appear

$accept (43)
    on left: 0
ROOT (44)
    on left: 1, on right: 0
PROGRAM (45)
    on left: 2 3, on right: 1 3
STATEMENT (46)
    on left: 4 5 6 7, on right: 3 9 48 50 51 52
STATEMENT_LIST (47)
    on left: 8 9, on right: 9 12 45 46 47 49 50 51
DECLARATION (48)
    on left: 10 11, on right: 4
FUNC_DECLARATION (49)
    on left: 12, on right: 10
VAR_DECLARATION (50)
    on left: 13 14 15 16, on right: 11 12 23 27 29 31 33 35 37
ARGUMENT_LIST_DEC (51)
    on left: 17 18 19, on right: 12 19
ARGUMENT_LIST_CALL (52)
    on left: 20 21 22, on right: 22 86
ARGUMENT_DEC (53)
    on left: 23 24, on right: 18 19
ARGUMENT_CALL (54)
    on left: 25, on right: 21 22
ASSIGNMENT (55)
    on left: 26, on right: 5
ASSIGN (56)
    on left: 27 28 29 30 31 32 33 34 35 36 37 38 39 40, on right: 26
JUMP (57)
    on left: 41 42, on right: 6
RETURN (58)
    on left: 43, on right: 41
CONTROL (59)
    on left: 44 45 46, on right: 7
IF (60)
    on left: 47 48 49 50 51 52, on right: 44
LOGIC (61)
    on left: 53 54, on right: 43 45 46 47 48 49 50 51 52 54 79
LOGIC2 (62)
    on left: 55 56, on right: 53 54 56
LOGIC3 (63)
    on left: 57 58, on right: 55 56 58
LOGIC4 (64)
    on left: 59 60, on right: 57 58 60
LOGIC5 (65)
    on left: 61 62, on right: 59 60 62
LOGIC6 (66)
    on left: 63 64 65, on right: 61 62 64 65
LOGIC7 (67)
    on left: 66 67 68 69 70, on right: 63 64 65 67 68 69 70
EXPR (68)
    on left: 71 72 73, on right: 27 28 29 30 31 32 33 34 35 36 37 38
    46 66 67 68 69 70 72 73
EXPR2 (69)
    on left: 74 75 76 77, on right: 71 72 73 75 76 77
EXPR3 (70)
    on left: 78 79, on right: 74 75 76 77
VALUE_WITH_FUNC (71)
    on left: 80 81, on right: 78
VALUE (72)
    on left: 82 83 84, on right: 25 39 40 81 86
VALUE_FOR_STORE (73)
    on left: 85, on right: 13 14 15 16 24 28 30 32 34 36 38
FUNC_EVOKE (74)
    on left: 86, on right: 42 80


State 0

    0 $accept: . ROOT $end

    $default  reduce using rule 2 (PROGRAM)

    ROOT     go to state 1
    PROGRAM  go to state 2


State 1

    0 $accept: ROOT . $end

    $end  shift, and go to state 3


State 2

    1 ROOT: PROGRAM .
    3 PROGRAM: PROGRAM . STATEMENT

    T_INT       shift, and go to state 4
    T_VOID      shift, and go to state 5
    T_RETURN    shift, and go to state 6
    T_IF        shift, and go to state 7
    T_WHILE     shift, and go to state 8
    T_FOR       shift, and go to state 9
    T_SUB       shift, and go to state 10
    T_NUMBER    shift, and go to state 11
    T_VARIABLE  shift, and go to state 12

    $default  reduce using rule 1 (ROOT)

    STATEMENT         go to state 13
    DECLARATION       go to state 14
    FUNC_DECLARATION  go to state 15
    VAR_DECLARATION   go to state 16
    ASSIGNMENT        go to state 17
    ASSIGN            go to state 18
    JUMP              go to state 19
    RETURN            go to state 20
    CONTROL           go to state 21
    IF                go to state 22
    VALUE             go to state 23
    VALUE_FOR_STORE   go to state 24
    FUNC_EVOKE        go to state 25


State 3

    0 $accept: ROOT $end .

    $default  accept


State 4

   13 VAR_DECLARATION: T_INT . VALUE_FOR_STORE
   14                | T_INT . VALUE_FOR_STORE T_SEMICOLON

    T_VARIABLE  shift, and go to state 26

    VALUE_FOR_STORE  go to state 27


State 5

   15 VAR_DECLARATION: T_VOID . VALUE_FOR_STORE
   16                | T_VOID . VALUE_FOR_STORE T_SEMICOLON

    T_VARIABLE  shift, and go to state 26

    VALUE_FOR_STORE  go to state 28


State 6

   43 RETURN: T_RETURN . LOGIC T_SEMICOLON

    T_LBRACKET  shift, and go to state 29
    T_SUB       shift, and go to state 10
    T_NUMBER    shift, and go to state 11
    T_VARIABLE  shift, and go to state 30

    LOGIC            go to state 31
    LOGIC2           go to state 32
    LOGIC3           go to state 33
    LOGIC4           go to state 34
    LOGIC5           go to state 35
    LOGIC6           go to state 36
    LOGIC7           go to state 37
    EXPR             go to state 38
    EXPR2            go to state 39
    EXPR3            go to state 40
    VALUE_WITH_FUNC  go to state 41
    VALUE            go to state 42
    FUNC_EVOKE       go to state 43


State 7

   47 IF: T_IF . T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   48   | T_IF . T_LBRACKET LOGIC T_RBRACKET STATEMENT
   49   | T_IF . T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET T_ELSE T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   50   | T_IF . T_LBRACKET LOGIC T_RBRACKET STATEMENT T_ELSE T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   51   | T_IF . T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET T_ELSE STATEMENT
   52   | T_IF . T_LBRACKET LOGIC T_RBRACKET STATEMENT T_ELSE STATEMENT

    T_LBRACKET  shift, and go to state 44


State 8

   45 CONTROL: T_WHILE . T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET

    T_LBRACKET  shift, and go to state 45


State 9

   46 CONTROL: T_FOR . T_LBRACKET LOGIC T_SEMICOLON EXPR T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET

    T_LBRACKET  shift, and go to state 46


State 10

   83 VALUE: T_SUB . T_NUMBER

    T_NUMBER  shift, and go to state 47


State 11

   82 VALUE: T_NUMBER .

    $default  reduce using rule 82 (VALUE)


State 12

   84 VALUE: T_VARIABLE .
   85 VALUE_FOR_STORE: T_VARIABLE .

    T_LBRACKET   reduce using rule 84 (VALUE)
    T_INCREMENT  reduce using rule 84 (VALUE)
    T_DECREMENT  reduce using rule 84 (VALUE)
    $default     reduce using rule 85 (VALUE_FOR_STORE)


State 13

    3 PROGRAM: PROGRAM STATEMENT .

    $default  reduce using rule 3 (PROGRAM)


State 14

    4 STATEMENT: DECLARATION .

    $default  reduce using rule 4 (STATEMENT)


State 15

   10 DECLARATION: FUNC_DECLARATION .

    $default  reduce using rule 10 (DECLARATION)


State 16

   11 DECLARATION: VAR_DECLARATION .
   12 FUNC_DECLARATION: VAR_DECLARATION . T_LBRACKET ARGUMENT_LIST_DEC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   27 ASSIGN: VAR_DECLARATION . T_ASSIGN EXPR T_SEMICOLON
   29       | VAR_DECLARATION . T_ADDASSIGN EXPR T_SEMICOLON
   31       | VAR_DECLARATION . T_SUBASSIGN EXPR T_SEMICOLON
   33       | VAR_DECLARATION . T_MULTASSIGN EXPR T_SEMICOLON
   35       | VAR_DECLARATION . T_DIVASSIGN EXPR T_SEMICOLON
   37       | VAR_DECLARATION . T_MODASSIGN EXPR T_SEMICOLON

    T_ASSIGN      shift, and go to state 48
    T_ADDASSIGN   shift, and go to state 49
    T_SUBASSIGN   shift, and go to state 50
    T_MULTASSIGN  shift, and go to state 51
    T_DIVASSIGN   shift, and go to state 52
    T_MODASSIGN   shift, and go to state 53
    T_LBRACKET    shift, and go to state 54

    $default  reduce using rule 11 (DECLARATION)


State 17

    5 STATEMENT: ASSIGNMENT .

    $default  reduce using rule 5 (STATEMENT)


State 18

   26 ASSIGNMENT: ASSIGN .

    $default  reduce using rule 26 (ASSIGNMENT)


State 19

    6 STATEMENT: JUMP .

    $default  reduce using rule 6 (STATEMENT)


State 20

   41 JUMP: RETURN .

    $default  reduce using rule 41 (JUMP)


State 21

    7 STATEMENT: CONTROL .

    $default  reduce using rule 7 (STATEMENT)


State 22

   44 CONTROL: IF .

    $default  reduce using rule 44 (CONTROL)


State 23

   39 ASSIGN: VALUE . T_INCREMENT T_SEMICOLON
   40       | VALUE . T_DECREMENT T_SEMICOLON
   86 FUNC_EVOKE: VALUE . T_LBRACKET ARGUMENT_LIST_CALL T_RBRACKET

    T_LBRACKET   shift, and go to state 55
    T_INCREMENT  shift, and go to state 56
    T_DECREMENT  shift, and go to state 57


State 24

   28 ASSIGN: VALUE_FOR_STORE . T_ASSIGN EXPR T_SEMICOLON
   30       | VALUE_FOR_STORE . T_ADDASSIGN EXPR T_SEMICOLON
   32       | VALUE_FOR_STORE . T_SUBASSIGN EXPR T_SEMICOLON
   34       | VALUE_FOR_STORE . T_MULTASSIGN EXPR T_SEMICOLON
   36       | VALUE_FOR_STORE . T_DIVASSIGN EXPR T_SEMICOLON
   38       | VALUE_FOR_STORE . T_MODASSIGN EXPR T_SEMICOLON

    T_ASSIGN      shift, and go to state 58
    T_ADDASSIGN   shift, and go to state 59
    T_SUBASSIGN   shift, and go to state 60
    T_MULTASSIGN  shift, and go to state 61
    T_DIVASSIGN   shift, and go to state 62
    T_MODASSIGN   shift, and go to state 63


State 25

   42 JUMP: FUNC_EVOKE . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 64


State 26

   85 VALUE_FOR_STORE: T_VARIABLE .

    $default  reduce using rule 85 (VALUE_FOR_STORE)


State 27

   13 VAR_DECLARATION: T_INT VALUE_FOR_STORE .
   14                | T_INT VALUE_FOR_STORE . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 65

    $default  reduce using rule 13 (VAR_DECLARATION)


State 28

   15 VAR_DECLARATION: T_VOID VALUE_FOR_STORE .
   16                | T_VOID VALUE_FOR_STORE . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 66

    $default  reduce using rule 15 (VAR_DECLARATION)


State 29

   79 EXPR3: T_LBRACKET . LOGIC T_RBRACKET

    T_LBRACKET  shift, and go to state 29
    T_SUB       shift, and go to state 10
    T_NUMBER    shift, and go to state 11
    T_VARIABLE  shift, and go to state 30

    LOGIC            go to state 67
    LOGIC2           go to state 32
    LOGIC3           go to state 33
    LOGIC4           go to state 34
    LOGIC5           go to state 35
    LOGIC6           go to state 36
    LOGIC7           go to state 37
    EXPR             go to state 38
    EXPR2            go to state 39
    EXPR3            go to state 40
    VALUE_WITH_FUNC  go to state 41
    VALUE            go to state 42
    FUNC_EVOKE       go to state 43


State 30

   84 VALUE: T_VARIABLE .

    $default  reduce using rule 84 (VALUE)


State 31

   43 RETURN: T_RETURN LOGIC . T_SEMICOLON
   54 LOGIC: LOGIC . T_OR LOGIC2

    T_SEMICOLON  shift, and go to state 68
    T_OR         shift, and go to state 69


State 32

   53 LOGIC: LOGIC2 .
   56 LOGIC2: LOGIC2 . T_AND LOGIC3

    T_AND  shift, and go to state 70

    $default  reduce using rule 53 (LOGIC)


State 33

   55 LOGIC2: LOGIC3 .
   58 LOGIC3: LOGIC3 . T_BITOR LOGIC4

    T_BITOR  shift, and go to state 71

    $default  reduce using rule 55 (LOGIC2)


State 34

   57 LOGIC3: LOGIC4 .
   60 LOGIC4: LOGIC4 . T_BITXOR LOGIC5

    T_BITXOR  shift, and go to state 72

    $default  reduce using rule 57 (LOGIC3)


State 35

   59 LOGIC4: LOGIC5 .
   62 LOGIC5: LOGIC5 . T_BITAND LOGIC6

    T_BITAND  shift, and go to state 73

    $default  reduce using rule 59 (LOGIC4)


State 36

   61 LOGIC5: LOGIC6 .
   64 LOGIC6: LOGIC6 . T_EQUAL LOGIC7
   65       | LOGIC6 . T_NOTEQUAL LOGIC7

    T_EQUAL     shift, and go to state 74
    T_NOTEQUAL  shift, and go to state 75

    $default  reduce using rule 61 (LOGIC5)


State 37

   63 LOGIC6: LOGIC7 .
   67 LOGIC7: LOGIC7 . T_GREATER EXPR
   68       | LOGIC7 . T_EQGT EXPR
   69       | LOGIC7 . T_LESS EXPR
   70       | LOGIC7 . T_EQLT EXPR

    T_LESS     shift, and go to state 76
    T_EQLT     shift, and go to state 77
    T_GREATER  shift, and go to state 78
    T_EQGT     shift, and go to state 79

    $default  reduce using rule 63 (LOGIC6)


State 38

   66 LOGIC7: EXPR .
   72 EXPR: EXPR . T_ADD EXPR2
   73     | EXPR . T_SUB EXPR2

    T_ADD  shift, and go to state 80
    T_SUB  shift, and go to state 81

    $default  reduce using rule 66 (LOGIC7)


State 39

   71 EXPR: EXPR2 .
   75 EXPR2: EXPR2 . T_MULT EXPR3
   76      | EXPR2 . T_DIV EXPR3
   77      | EXPR2 . T_MOD EXPR3

    T_MULT  shift, and go to state 82
    T_DIV   shift, and go to state 83
    T_MOD   shift, and go to state 84

    $default  reduce using rule 71 (EXPR)


State 40

   74 EXPR2: EXPR3 .

    $default  reduce using rule 74 (EXPR2)


State 41

   78 EXPR3: VALUE_WITH_FUNC .

    $default  reduce using rule 78 (EXPR3)


State 42

   81 VALUE_WITH_FUNC: VALUE .
   86 FUNC_EVOKE: VALUE . T_LBRACKET ARGUMENT_LIST_CALL T_RBRACKET

    T_LBRACKET  shift, and go to state 55

    $default  reduce using rule 81 (VALUE_WITH_FUNC)


State 43

   80 VALUE_WITH_FUNC: FUNC_EVOKE .

    $default  reduce using rule 80 (VALUE_WITH_FUNC)


State 44

   47 IF: T_IF T_LBRACKET . LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   48   | T_IF T_LBRACKET . LOGIC T_RBRACKET STATEMENT
   49   | T_IF T_LBRACKET . LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET T_ELSE T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   50   | T_IF T_LBRACKET . LOGIC T_RBRACKET STATEMENT T_ELSE T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   51   | T_IF T_LBRACKET . LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET T_ELSE STATEMENT
   52   | T_IF T_LBRACKET . LOGIC T_RBRACKET STATEMENT T_ELSE STATEMENT

    T_LBRACKET  shift, and go to state 29
    T_SUB       shift, and go to state 10
    T_NUMBER    shift, and go to state 11
    T_VARIABLE  shift, and go to state 30

    LOGIC            go to state 85
    LOGIC2           go to state 32
    LOGIC3           go to state 33
    LOGIC4           go to state 34
    LOGIC5           go to state 35
    LOGIC6           go to state 36
    LOGIC7           go to state 37
    EXPR             go to state 38
    EXPR2            go to state 39
    EXPR3            go to state 40
    VALUE_WITH_FUNC  go to state 41
    VALUE            go to state 42
    FUNC_EVOKE       go to state 43


State 45

   45 CONTROL: T_WHILE T_LBRACKET . LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET

    T_LBRACKET  shift, and go to state 29
    T_SUB       shift, and go to state 10
    T_NUMBER    shift, and go to state 11
    T_VARIABLE  shift, and go to state 30

    LOGIC            go to state 86
    LOGIC2           go to state 32
    LOGIC3           go to state 33
    LOGIC4           go to state 34
    LOGIC5           go to state 35
    LOGIC6           go to state 36
    LOGIC7           go to state 37
    EXPR             go to state 38
    EXPR2            go to state 39
    EXPR3            go to state 40
    VALUE_WITH_FUNC  go to state 41
    VALUE            go to state 42
    FUNC_EVOKE       go to state 43


State 46

   46 CONTROL: T_FOR T_LBRACKET . LOGIC T_SEMICOLON EXPR T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET

    T_LBRACKET  shift, and go to state 29
    T_SUB       shift, and go to state 10
    T_NUMBER    shift, and go to state 11
    T_VARIABLE  shift, and go to state 30

    LOGIC            go to state 87
    LOGIC2           go to state 32
    LOGIC3           go to state 33
    LOGIC4           go to state 34
    LOGIC5           go to state 35
    LOGIC6           go to state 36
    LOGIC7           go to state 37
    EXPR             go to state 38
    EXPR2            go to state 39
    EXPR3            go to state 40
    VALUE_WITH_FUNC  go to state 41
    VALUE            go to state 42
    FUNC_EVOKE       go to state 43


State 47

   83 VALUE: T_SUB T_NUMBER .

    $default  reduce using rule 83 (VALUE)


State 48

   27 ASSIGN: VAR_DECLARATION T_ASSIGN . EXPR T_SEMICOLON

    T_LBRACKET  shift, and go to state 29
    T_SUB       shift, and go to state 10
    T_NUMBER    shift, and go to state 11
    T_VARIABLE  shift, and go to state 30

    EXPR             go to state 88
    EXPR2            go to state 39
    EXPR3            go to state 40
    VALUE_WITH_FUNC  go to state 41
    VALUE            go to state 42
    FUNC_EVOKE       go to state 43


State 49

   29 ASSIGN: VAR_DECLARATION T_ADDASSIGN . EXPR T_SEMICOLON

    T_LBRACKET  shift, and go to state 29
    T_SUB       shift, and go to state 10
    T_NUMBER    shift, and go to state 11
    T_VARIABLE  shift, and go to state 30

    EXPR             go to state 89
    EXPR2            go to state 39
    EXPR3            go to state 40
    VALUE_WITH_FUNC  go to state 41
    VALUE            go to state 42
    FUNC_EVOKE       go to state 43


State 50

   31 ASSIGN: VAR_DECLARATION T_SUBASSIGN . EXPR T_SEMICOLON

    T_LBRACKET  shift, and go to state 29
    T_SUB       shift, and go to state 10
    T_NUMBER    shift, and go to state 11
    T_VARIABLE  shift, and go to state 30

    EXPR             go to state 90
    EXPR2            go to state 39
    EXPR3            go to state 40
    VALUE_WITH_FUNC  go to state 41
    VALUE            go to state 42
    FUNC_EVOKE       go to state 43


State 51

   33 ASSIGN: VAR_DECLARATION T_MULTASSIGN . EXPR T_SEMICOLON

    T_LBRACKET  shift, and go to state 29
    T_SUB       shift, and go to state 10
    T_NUMBER    shift, and go to state 11
    T_VARIABLE  shift, and go to state 30

    EXPR             go to state 91
    EXPR2            go to state 39
    EXPR3            go to state 40
    VALUE_WITH_FUNC  go to state 41
    VALUE            go to state 42
    FUNC_EVOKE       go to state 43


State 52

   35 ASSIGN: VAR_DECLARATION T_DIVASSIGN . EXPR T_SEMICOLON

    T_LBRACKET  shift, and go to state 29
    T_SUB       shift, and go to state 10
    T_NUMBER    shift, and go to state 11
    T_VARIABLE  shift, and go to state 30

    EXPR             go to state 92
    EXPR2            go to state 39
    EXPR3            go to state 40
    VALUE_WITH_FUNC  go to state 41
    VALUE            go to state 42
    FUNC_EVOKE       go to state 43


State 53

   37 ASSIGN: VAR_DECLARATION T_MODASSIGN . EXPR T_SEMICOLON

    T_LBRACKET  shift, and go to state 29
    T_SUB       shift, and go to state 10
    T_NUMBER    shift, and go to state 11
    T_VARIABLE  shift, and go to state 30

    EXPR             go to state 93
    EXPR2            go to state 39
    EXPR3            go to state 40
    VALUE_WITH_FUNC  go to state 41
    VALUE            go to state 42
    FUNC_EVOKE       go to state 43


State 54

   12 FUNC_DECLARATION: VAR_DECLARATION T_LBRACKET . ARGUMENT_LIST_DEC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET

    T_INT       shift, and go to state 4
    T_VOID      shift, and go to state 5
    T_VARIABLE  shift, and go to state 26

    $default  reduce using rule 17 (ARGUMENT_LIST_DEC)

    VAR_DECLARATION    go to state 94
    ARGUMENT_LIST_DEC  go to state 95
    ARGUMENT_DEC       go to state 96
    VALUE_FOR_STORE    go to state 97


State 55

   86 FUNC_EVOKE: VALUE T_LBRACKET . ARGUMENT_LIST_CALL T_RBRACKET

    T_SUB       shift, and go to state 10
    T_NUMBER    shift, and go to state 11
    T_VARIABLE  shift, and go to state 30

    $default  reduce using rule 20 (ARGUMENT_LIST_CALL)

    ARGUMENT_LIST_CALL  go to state 98
    ARGUMENT_CALL       go to state 99
    VALUE               go to state 100


State 56

   39 ASSIGN: VALUE T_INCREMENT . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 101


State 57

   40 ASSIGN: VALUE T_DECREMENT . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 102


State 58

   28 ASSIGN: VALUE_FOR_STORE T_ASSIGN . EXPR T_SEMICOLON

    T_LBRACKET  shift, and go to state 29
    T_SUB       shift, and go to state 10
    T_NUMBER    shift, and go to state 11
    T_VARIABLE  shift, and go to state 30

    EXPR             go to state 103
    EXPR2            go to state 39
    EXPR3            go to state 40
    VALUE_WITH_FUNC  go to state 41
    VALUE            go to state 42
    FUNC_EVOKE       go to state 43


State 59

   30 ASSIGN: VALUE_FOR_STORE T_ADDASSIGN . EXPR T_SEMICOLON

    T_LBRACKET  shift, and go to state 29
    T_SUB       shift, and go to state 10
    T_NUMBER    shift, and go to state 11
    T_VARIABLE  shift, and go to state 30

    EXPR             go to state 104
    EXPR2            go to state 39
    EXPR3            go to state 40
    VALUE_WITH_FUNC  go to state 41
    VALUE            go to state 42
    FUNC_EVOKE       go to state 43


State 60

   32 ASSIGN: VALUE_FOR_STORE T_SUBASSIGN . EXPR T_SEMICOLON

    T_LBRACKET  shift, and go to state 29
    T_SUB       shift, and go to state 10
    T_NUMBER    shift, and go to state 11
    T_VARIABLE  shift, and go to state 30

    EXPR             go to state 105
    EXPR2            go to state 39
    EXPR3            go to state 40
    VALUE_WITH_FUNC  go to state 41
    VALUE            go to state 42
    FUNC_EVOKE       go to state 43


State 61

   34 ASSIGN: VALUE_FOR_STORE T_MULTASSIGN . EXPR T_SEMICOLON

    T_LBRACKET  shift, and go to state 29
    T_SUB       shift, and go to state 10
    T_NUMBER    shift, and go to state 11
    T_VARIABLE  shift, and go to state 30

    EXPR             go to state 106
    EXPR2            go to state 39
    EXPR3            go to state 40
    VALUE_WITH_FUNC  go to state 41
    VALUE            go to state 42
    FUNC_EVOKE       go to state 43


State 62

   36 ASSIGN: VALUE_FOR_STORE T_DIVASSIGN . EXPR T_SEMICOLON

    T_LBRACKET  shift, and go to state 29
    T_SUB       shift, and go to state 10
    T_NUMBER    shift, and go to state 11
    T_VARIABLE  shift, and go to state 30

    EXPR             go to state 107
    EXPR2            go to state 39
    EXPR3            go to state 40
    VALUE_WITH_FUNC  go to state 41
    VALUE            go to state 42
    FUNC_EVOKE       go to state 43


State 63

   38 ASSIGN: VALUE_FOR_STORE T_MODASSIGN . EXPR T_SEMICOLON

    T_LBRACKET  shift, and go to state 29
    T_SUB       shift, and go to state 10
    T_NUMBER    shift, and go to state 11
    T_VARIABLE  shift, and go to state 30

    EXPR             go to state 108
    EXPR2            go to state 39
    EXPR3            go to state 40
    VALUE_WITH_FUNC  go to state 41
    VALUE            go to state 42
    FUNC_EVOKE       go to state 43


State 64

   42 JUMP: FUNC_EVOKE T_SEMICOLON .

    $default  reduce using rule 42 (JUMP)


State 65

   14 VAR_DECLARATION: T_INT VALUE_FOR_STORE T_SEMICOLON .

    $default  reduce using rule 14 (VAR_DECLARATION)


State 66

   16 VAR_DECLARATION: T_VOID VALUE_FOR_STORE T_SEMICOLON .

    $default  reduce using rule 16 (VAR_DECLARATION)


State 67

   54 LOGIC: LOGIC . T_OR LOGIC2
   79 EXPR3: T_LBRACKET LOGIC . T_RBRACKET

    T_RBRACKET  shift, and go to state 109
    T_OR        shift, and go to state 69


State 68

   43 RETURN: T_RETURN LOGIC T_SEMICOLON .

    $default  reduce using rule 43 (RETURN)


State 69

   54 LOGIC: LOGIC T_OR . LOGIC2

    T_LBRACKET  shift, and go to state 29
    T_SUB       shift, and go to state 10
    T_NUMBER    shift, and go to state 11
    T_VARIABLE  shift, and go to state 30

    LOGIC2           go to state 110
    LOGIC3           go to state 33
    LOGIC4           go to state 34
    LOGIC5           go to state 35
    LOGIC6           go to state 36
    LOGIC7           go to state 37
    EXPR             go to state 38
    EXPR2            go to state 39
    EXPR3            go to state 40
    VALUE_WITH_FUNC  go to state 41
    VALUE            go to state 42
    FUNC_EVOKE       go to state 43


State 70

   56 LOGIC2: LOGIC2 T_AND . LOGIC3

    T_LBRACKET  shift, and go to state 29
    T_SUB       shift, and go to state 10
    T_NUMBER    shift, and go to state 11
    T_VARIABLE  shift, and go to state 30

    LOGIC3           go to state 111
    LOGIC4           go to state 34
    LOGIC5           go to state 35
    LOGIC6           go to state 36
    LOGIC7           go to state 37
    EXPR             go to state 38
    EXPR2            go to state 39
    EXPR3            go to state 40
    VALUE_WITH_FUNC  go to state 41
    VALUE            go to state 42
    FUNC_EVOKE       go to state 43


State 71

   58 LOGIC3: LOGIC3 T_BITOR . LOGIC4

    T_LBRACKET  shift, and go to state 29
    T_SUB       shift, and go to state 10
    T_NUMBER    shift, and go to state 11
    T_VARIABLE  shift, and go to state 30

    LOGIC4           go to state 112
    LOGIC5           go to state 35
    LOGIC6           go to state 36
    LOGIC7           go to state 37
    EXPR             go to state 38
    EXPR2            go to state 39
    EXPR3            go to state 40
    VALUE_WITH_FUNC  go to state 41
    VALUE            go to state 42
    FUNC_EVOKE       go to state 43


State 72

   60 LOGIC4: LOGIC4 T_BITXOR . LOGIC5

    T_LBRACKET  shift, and go to state 29
    T_SUB       shift, and go to state 10
    T_NUMBER    shift, and go to state 11
    T_VARIABLE  shift, and go to state 30

    LOGIC5           go to state 113
    LOGIC6           go to state 36
    LOGIC7           go to state 37
    EXPR             go to state 38
    EXPR2            go to state 39
    EXPR3            go to state 40
    VALUE_WITH_FUNC  go to state 41
    VALUE            go to state 42
    FUNC_EVOKE       go to state 43


State 73

   62 LOGIC5: LOGIC5 T_BITAND . LOGIC6

    T_LBRACKET  shift, and go to state 29
    T_SUB       shift, and go to state 10
    T_NUMBER    shift, and go to state 11
    T_VARIABLE  shift, and go to state 30

    LOGIC6           go to state 114
    LOGIC7           go to state 37
    EXPR             go to state 38
    EXPR2            go to state 39
    EXPR3            go to state 40
    VALUE_WITH_FUNC  go to state 41
    VALUE            go to state 42
    FUNC_EVOKE       go to state 43


State 74

   64 LOGIC6: LOGIC6 T_EQUAL . LOGIC7

    T_LBRACKET  shift, and go to state 29
    T_SUB       shift, and go to state 10
    T_NUMBER    shift, and go to state 11
    T_VARIABLE  shift, and go to state 30

    LOGIC7           go to state 115
    EXPR             go to state 38
    EXPR2            go to state 39
    EXPR3            go to state 40
    VALUE_WITH_FUNC  go to state 41
    VALUE            go to state 42
    FUNC_EVOKE       go to state 43


State 75

   65 LOGIC6: LOGIC6 T_NOTEQUAL . LOGIC7

    T_LBRACKET  shift, and go to state 29
    T_SUB       shift, and go to state 10
    T_NUMBER    shift, and go to state 11
    T_VARIABLE  shift, and go to state 30

    LOGIC7           go to state 116
    EXPR             go to state 38
    EXPR2            go to state 39
    EXPR3            go to state 40
    VALUE_WITH_FUNC  go to state 41
    VALUE            go to state 42
    FUNC_EVOKE       go to state 43


State 76

   69 LOGIC7: LOGIC7 T_LESS . EXPR

    T_LBRACKET  shift, and go to state 29
    T_SUB       shift, and go to state 10
    T_NUMBER    shift, and go to state 11
    T_VARIABLE  shift, and go to state 30

    EXPR             go to state 117
    EXPR2            go to state 39
    EXPR3            go to state 40
    VALUE_WITH_FUNC  go to state 41
    VALUE            go to state 42
    FUNC_EVOKE       go to state 43


State 77

   70 LOGIC7: LOGIC7 T_EQLT . EXPR

    T_LBRACKET  shift, and go to state 29
    T_SUB       shift, and go to state 10
    T_NUMBER    shift, and go to state 11
    T_VARIABLE  shift, and go to state 30

    EXPR             go to state 118
    EXPR2            go to state 39
    EXPR3            go to state 40
    VALUE_WITH_FUNC  go to state 41
    VALUE            go to state 42
    FUNC_EVOKE       go to state 43


State 78

   67 LOGIC7: LOGIC7 T_GREATER . EXPR

    T_LBRACKET  shift, and go to state 29
    T_SUB       shift, and go to state 10
    T_NUMBER    shift, and go to state 11
    T_VARIABLE  shift, and go to state 30

    EXPR             go to state 119
    EXPR2            go to state 39
    EXPR3            go to state 40
    VALUE_WITH_FUNC  go to state 41
    VALUE            go to state 42
    FUNC_EVOKE       go to state 43


State 79

   68 LOGIC7: LOGIC7 T_EQGT . EXPR

    T_LBRACKET  shift, and go to state 29
    T_SUB       shift, and go to state 10
    T_NUMBER    shift, and go to state 11
    T_VARIABLE  shift, and go to state 30

    EXPR             go to state 120
    EXPR2            go to state 39
    EXPR3            go to state 40
    VALUE_WITH_FUNC  go to state 41
    VALUE            go to state 42
    FUNC_EVOKE       go to state 43


State 80

   72 EXPR: EXPR T_ADD . EXPR2

    T_LBRACKET  shift, and go to state 29
    T_SUB       shift, and go to state 10
    T_NUMBER    shift, and go to state 11
    T_VARIABLE  shift, and go to state 30

    EXPR2            go to state 121
    EXPR3            go to state 40
    VALUE_WITH_FUNC  go to state 41
    VALUE            go to state 42
    FUNC_EVOKE       go to state 43


State 81

   73 EXPR: EXPR T_SUB . EXPR2

    T_LBRACKET  shift, and go to state 29
    T_SUB       shift, and go to state 10
    T_NUMBER    shift, and go to state 11
    T_VARIABLE  shift, and go to state 30

    EXPR2            go to state 122
    EXPR3            go to state 40
    VALUE_WITH_FUNC  go to state 41
    VALUE            go to state 42
    FUNC_EVOKE       go to state 43


State 82

   75 EXPR2: EXPR2 T_MULT . EXPR3

    T_LBRACKET  shift, and go to state 29
    T_SUB       shift, and go to state 10
    T_NUMBER    shift, and go to state 11
    T_VARIABLE  shift, and go to state 30

    EXPR3            go to state 123
    VALUE_WITH_FUNC  go to state 41
    VALUE            go to state 42
    FUNC_EVOKE       go to state 43


State 83

   76 EXPR2: EXPR2 T_DIV . EXPR3

    T_LBRACKET  shift, and go to state 29
    T_SUB       shift, and go to state 10
    T_NUMBER    shift, and go to state 11
    T_VARIABLE  shift, and go to state 30

    EXPR3            go to state 124
    VALUE_WITH_FUNC  go to state 41
    VALUE            go to state 42
    FUNC_EVOKE       go to state 43


State 84

   77 EXPR2: EXPR2 T_MOD . EXPR3

    T_LBRACKET  shift, and go to state 29
    T_SUB       shift, and go to state 10
    T_NUMBER    shift, and go to state 11
    T_VARIABLE  shift, and go to state 30

    EXPR3            go to state 125
    VALUE_WITH_FUNC  go to state 41
    VALUE            go to state 42
    FUNC_EVOKE       go to state 43


State 85

   47 IF: T_IF T_LBRACKET LOGIC . T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   48   | T_IF T_LBRACKET LOGIC . T_RBRACKET STATEMENT
   49   | T_IF T_LBRACKET LOGIC . T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET T_ELSE T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   50   | T_IF T_LBRACKET LOGIC . T_RBRACKET STATEMENT T_ELSE T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   51   | T_IF T_LBRACKET LOGIC . T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET T_ELSE STATEMENT
   52   | T_IF T_LBRACKET LOGIC . T_RBRACKET STATEMENT T_ELSE STATEMENT
   54 LOGIC: LOGIC . T_OR LOGIC2

    T_RBRACKET  shift, and go to state 126
    T_OR        shift, and go to state 69


State 86

   45 CONTROL: T_WHILE T_LBRACKET LOGIC . T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   54 LOGIC: LOGIC . T_OR LOGIC2

    T_RBRACKET  shift, and go to state 127
    T_OR        shift, and go to state 69


State 87

   46 CONTROL: T_FOR T_LBRACKET LOGIC . T_SEMICOLON EXPR T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   54 LOGIC: LOGIC . T_OR LOGIC2

    T_SEMICOLON  shift, and go to state 128
    T_OR         shift, and go to state 69


State 88

   27 ASSIGN: VAR_DECLARATION T_ASSIGN EXPR . T_SEMICOLON
   72 EXPR: EXPR . T_ADD EXPR2
   73     | EXPR . T_SUB EXPR2

    T_SEMICOLON  shift, and go to state 129
    T_ADD        shift, and go to state 80
    T_SUB        shift, and go to state 81


State 89

   29 ASSIGN: VAR_DECLARATION T_ADDASSIGN EXPR . T_SEMICOLON
   72 EXPR: EXPR . T_ADD EXPR2
   73     | EXPR . T_SUB EXPR2

    T_SEMICOLON  shift, and go to state 130
    T_ADD        shift, and go to state 80
    T_SUB        shift, and go to state 81


State 90

   31 ASSIGN: VAR_DECLARATION T_SUBASSIGN EXPR . T_SEMICOLON
   72 EXPR: EXPR . T_ADD EXPR2
   73     | EXPR . T_SUB EXPR2

    T_SEMICOLON  shift, and go to state 131
    T_ADD        shift, and go to state 80
    T_SUB        shift, and go to state 81


State 91

   33 ASSIGN: VAR_DECLARATION T_MULTASSIGN EXPR . T_SEMICOLON
   72 EXPR: EXPR . T_ADD EXPR2
   73     | EXPR . T_SUB EXPR2

    T_SEMICOLON  shift, and go to state 132
    T_ADD        shift, and go to state 80
    T_SUB        shift, and go to state 81


State 92

   35 ASSIGN: VAR_DECLARATION T_DIVASSIGN EXPR . T_SEMICOLON
   72 EXPR: EXPR . T_ADD EXPR2
   73     | EXPR . T_SUB EXPR2

    T_SEMICOLON  shift, and go to state 133
    T_ADD        shift, and go to state 80
    T_SUB        shift, and go to state 81


State 93

   37 ASSIGN: VAR_DECLARATION T_MODASSIGN EXPR . T_SEMICOLON
   72 EXPR: EXPR . T_ADD EXPR2
   73     | EXPR . T_SUB EXPR2

    T_SEMICOLON  shift, and go to state 134
    T_ADD        shift, and go to state 80
    T_SUB        shift, and go to state 81


State 94

   23 ARGUMENT_DEC: VAR_DECLARATION .

    $default  reduce using rule 23 (ARGUMENT_DEC)


State 95

   12 FUNC_DECLARATION: VAR_DECLARATION T_LBRACKET ARGUMENT_LIST_DEC . T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   19 ARGUMENT_LIST_DEC: ARGUMENT_LIST_DEC . T_COMMA ARGUMENT_DEC

    T_RBRACKET  shift, and go to state 135
    T_COMMA     shift, and go to state 136


State 96

   18 ARGUMENT_LIST_DEC: ARGUMENT_DEC .

    $default  reduce using rule 18 (ARGUMENT_LIST_DEC)


State 97

   24 ARGUMENT_DEC: VALUE_FOR_STORE .

    $default  reduce using rule 24 (ARGUMENT_DEC)


State 98

   22 ARGUMENT_LIST_CALL: ARGUMENT_LIST_CALL . T_COMMA ARGUMENT_CALL
   86 FUNC_EVOKE: VALUE T_LBRACKET ARGUMENT_LIST_CALL . T_RBRACKET

    T_RBRACKET  shift, and go to state 137
    T_COMMA     shift, and go to state 138


State 99

   21 ARGUMENT_LIST_CALL: ARGUMENT_CALL .

    $default  reduce using rule 21 (ARGUMENT_LIST_CALL)


State 100

   25 ARGUMENT_CALL: VALUE .

    $default  reduce using rule 25 (ARGUMENT_CALL)


State 101

   39 ASSIGN: VALUE T_INCREMENT T_SEMICOLON .

    $default  reduce using rule 39 (ASSIGN)


State 102

   40 ASSIGN: VALUE T_DECREMENT T_SEMICOLON .

    $default  reduce using rule 40 (ASSIGN)


State 103

   28 ASSIGN: VALUE_FOR_STORE T_ASSIGN EXPR . T_SEMICOLON
   72 EXPR: EXPR . T_ADD EXPR2
   73     | EXPR . T_SUB EXPR2

    T_SEMICOLON  shift, and go to state 139
    T_ADD        shift, and go to state 80
    T_SUB        shift, and go to state 81


State 104

   30 ASSIGN: VALUE_FOR_STORE T_ADDASSIGN EXPR . T_SEMICOLON
   72 EXPR: EXPR . T_ADD EXPR2
   73     | EXPR . T_SUB EXPR2

    T_SEMICOLON  shift, and go to state 140
    T_ADD        shift, and go to state 80
    T_SUB        shift, and go to state 81


State 105

   32 ASSIGN: VALUE_FOR_STORE T_SUBASSIGN EXPR . T_SEMICOLON
   72 EXPR: EXPR . T_ADD EXPR2
   73     | EXPR . T_SUB EXPR2

    T_SEMICOLON  shift, and go to state 141
    T_ADD        shift, and go to state 80
    T_SUB        shift, and go to state 81


State 106

   34 ASSIGN: VALUE_FOR_STORE T_MULTASSIGN EXPR . T_SEMICOLON
   72 EXPR: EXPR . T_ADD EXPR2
   73     | EXPR . T_SUB EXPR2

    T_SEMICOLON  shift, and go to state 142
    T_ADD        shift, and go to state 80
    T_SUB        shift, and go to state 81


State 107

   36 ASSIGN: VALUE_FOR_STORE T_DIVASSIGN EXPR . T_SEMICOLON
   72 EXPR: EXPR . T_ADD EXPR2
   73     | EXPR . T_SUB EXPR2

    T_SEMICOLON  shift, and go to state 143
    T_ADD        shift, and go to state 80
    T_SUB        shift, and go to state 81


State 108

   38 ASSIGN: VALUE_FOR_STORE T_MODASSIGN EXPR . T_SEMICOLON
   72 EXPR: EXPR . T_ADD EXPR2
   73     | EXPR . T_SUB EXPR2

    T_SEMICOLON  shift, and go to state 144
    T_ADD        shift, and go to state 80
    T_SUB        shift, and go to state 81


State 109

   79 EXPR3: T_LBRACKET LOGIC T_RBRACKET .

    $default  reduce using rule 79 (EXPR3)


State 110

   54 LOGIC: LOGIC T_OR LOGIC2 .
   56 LOGIC2: LOGIC2 . T_AND LOGIC3

    T_AND  shift, and go to state 70

    $default  reduce using rule 54 (LOGIC)


State 111

   56 LOGIC2: LOGIC2 T_AND LOGIC3 .
   58 LOGIC3: LOGIC3 . T_BITOR LOGIC4

    T_BITOR  shift, and go to state 71

    $default  reduce using rule 56 (LOGIC2)


State 112

   58 LOGIC3: LOGIC3 T_BITOR LOGIC4 .
   60 LOGIC4: LOGIC4 . T_BITXOR LOGIC5

    T_BITXOR  shift, and go to state 72

    $default  reduce using rule 58 (LOGIC3)


State 113

   60 LOGIC4: LOGIC4 T_BITXOR LOGIC5 .
   62 LOGIC5: LOGIC5 . T_BITAND LOGIC6

    T_BITAND  shift, and go to state 73

    $default  reduce using rule 60 (LOGIC4)


State 114

   62 LOGIC5: LOGIC5 T_BITAND LOGIC6 .
   64 LOGIC6: LOGIC6 . T_EQUAL LOGIC7
   65       | LOGIC6 . T_NOTEQUAL LOGIC7

    T_EQUAL     shift, and go to state 74
    T_NOTEQUAL  shift, and go to state 75

    $default  reduce using rule 62 (LOGIC5)


State 115

   64 LOGIC6: LOGIC6 T_EQUAL LOGIC7 .
   67 LOGIC7: LOGIC7 . T_GREATER EXPR
   68       | LOGIC7 . T_EQGT EXPR
   69       | LOGIC7 . T_LESS EXPR
   70       | LOGIC7 . T_EQLT EXPR

    T_LESS     shift, and go to state 76
    T_EQLT     shift, and go to state 77
    T_GREATER  shift, and go to state 78
    T_EQGT     shift, and go to state 79

    $default  reduce using rule 64 (LOGIC6)


State 116

   65 LOGIC6: LOGIC6 T_NOTEQUAL LOGIC7 .
   67 LOGIC7: LOGIC7 . T_GREATER EXPR
   68       | LOGIC7 . T_EQGT EXPR
   69       | LOGIC7 . T_LESS EXPR
   70       | LOGIC7 . T_EQLT EXPR

    T_LESS     shift, and go to state 76
    T_EQLT     shift, and go to state 77
    T_GREATER  shift, and go to state 78
    T_EQGT     shift, and go to state 79

    $default  reduce using rule 65 (LOGIC6)


State 117

   69 LOGIC7: LOGIC7 T_LESS EXPR .
   72 EXPR: EXPR . T_ADD EXPR2
   73     | EXPR . T_SUB EXPR2

    T_ADD  shift, and go to state 80
    T_SUB  shift, and go to state 81

    $default  reduce using rule 69 (LOGIC7)


State 118

   70 LOGIC7: LOGIC7 T_EQLT EXPR .
   72 EXPR: EXPR . T_ADD EXPR2
   73     | EXPR . T_SUB EXPR2

    T_ADD  shift, and go to state 80
    T_SUB  shift, and go to state 81

    $default  reduce using rule 70 (LOGIC7)


State 119

   67 LOGIC7: LOGIC7 T_GREATER EXPR .
   72 EXPR: EXPR . T_ADD EXPR2
   73     | EXPR . T_SUB EXPR2

    T_ADD  shift, and go to state 80
    T_SUB  shift, and go to state 81

    $default  reduce using rule 67 (LOGIC7)


State 120

   68 LOGIC7: LOGIC7 T_EQGT EXPR .
   72 EXPR: EXPR . T_ADD EXPR2
   73     | EXPR . T_SUB EXPR2

    T_ADD  shift, and go to state 80
    T_SUB  shift, and go to state 81

    $default  reduce using rule 68 (LOGIC7)


State 121

   72 EXPR: EXPR T_ADD EXPR2 .
   75 EXPR2: EXPR2 . T_MULT EXPR3
   76      | EXPR2 . T_DIV EXPR3
   77      | EXPR2 . T_MOD EXPR3

    T_MULT  shift, and go to state 82
    T_DIV   shift, and go to state 83
    T_MOD   shift, and go to state 84

    $default  reduce using rule 72 (EXPR)


State 122

   73 EXPR: EXPR T_SUB EXPR2 .
   75 EXPR2: EXPR2 . T_MULT EXPR3
   76      | EXPR2 . T_DIV EXPR3
   77      | EXPR2 . T_MOD EXPR3

    T_MULT  shift, and go to state 82
    T_DIV   shift, and go to state 83
    T_MOD   shift, and go to state 84

    $default  reduce using rule 73 (EXPR)


State 123

   75 EXPR2: EXPR2 T_MULT EXPR3 .

    $default  reduce using rule 75 (EXPR2)


State 124

   76 EXPR2: EXPR2 T_DIV EXPR3 .

    $default  reduce using rule 76 (EXPR2)


State 125

   77 EXPR2: EXPR2 T_MOD EXPR3 .

    $default  reduce using rule 77 (EXPR2)


State 126

   47 IF: T_IF T_LBRACKET LOGIC T_RBRACKET . T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   48   | T_IF T_LBRACKET LOGIC T_RBRACKET . STATEMENT
   49   | T_IF T_LBRACKET LOGIC T_RBRACKET . T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET T_ELSE T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   50   | T_IF T_LBRACKET LOGIC T_RBRACKET . STATEMENT T_ELSE T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   51   | T_IF T_LBRACKET LOGIC T_RBRACKET . T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET T_ELSE STATEMENT
   52   | T_IF T_LBRACKET LOGIC T_RBRACKET . STATEMENT T_ELSE STATEMENT

    T_LCURLBRACKET  shift, and go to state 145
    T_INT           shift, and go to state 4
    T_VOID          shift, and go to state 5
    T_RETURN        shift, and go to state 6
    T_IF            shift, and go to state 7
    T_WHILE         shift, and go to state 8
    T_FOR           shift, and go to state 9
    T_SUB           shift, and go to state 10
    T_NUMBER        shift, and go to state 11
    T_VARIABLE      shift, and go to state 12

    STATEMENT         go to state 146
    DECLARATION       go to state 14
    FUNC_DECLARATION  go to state 15
    VAR_DECLARATION   go to state 16
    ASSIGNMENT        go to state 17
    ASSIGN            go to state 18
    JUMP              go to state 19
    RETURN            go to state 20
    CONTROL           go to state 21
    IF                go to state 22
    VALUE             go to state 23
    VALUE_FOR_STORE   go to state 24
    FUNC_EVOKE        go to state 25


State 127

   45 CONTROL: T_WHILE T_LBRACKET LOGIC T_RBRACKET . T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET

    T_LCURLBRACKET  shift, and go to state 147


State 128

   46 CONTROL: T_FOR T_LBRACKET LOGIC T_SEMICOLON . EXPR T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET

    T_LBRACKET  shift, and go to state 29
    T_SUB       shift, and go to state 10
    T_NUMBER    shift, and go to state 11
    T_VARIABLE  shift, and go to state 30

    EXPR             go to state 148
    EXPR2            go to state 39
    EXPR3            go to state 40
    VALUE_WITH_FUNC  go to state 41
    VALUE            go to state 42
    FUNC_EVOKE       go to state 43


State 129

   27 ASSIGN: VAR_DECLARATION T_ASSIGN EXPR T_SEMICOLON .

    $default  reduce using rule 27 (ASSIGN)


State 130

   29 ASSIGN: VAR_DECLARATION T_ADDASSIGN EXPR T_SEMICOLON .

    $default  reduce using rule 29 (ASSIGN)


State 131

   31 ASSIGN: VAR_DECLARATION T_SUBASSIGN EXPR T_SEMICOLON .

    $default  reduce using rule 31 (ASSIGN)


State 132

   33 ASSIGN: VAR_DECLARATION T_MULTASSIGN EXPR T_SEMICOLON .

    $default  reduce using rule 33 (ASSIGN)


State 133

   35 ASSIGN: VAR_DECLARATION T_DIVASSIGN EXPR T_SEMICOLON .

    $default  reduce using rule 35 (ASSIGN)


State 134

   37 ASSIGN: VAR_DECLARATION T_MODASSIGN EXPR T_SEMICOLON .

    $default  reduce using rule 37 (ASSIGN)


State 135

   12 FUNC_DECLARATION: VAR_DECLARATION T_LBRACKET ARGUMENT_LIST_DEC T_RBRACKET . T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET

    T_LCURLBRACKET  shift, and go to state 149


State 136

   19 ARGUMENT_LIST_DEC: ARGUMENT_LIST_DEC T_COMMA . ARGUMENT_DEC

    T_INT       shift, and go to state 4
    T_VOID      shift, and go to state 5
    T_VARIABLE  shift, and go to state 26

    VAR_DECLARATION  go to state 94
    ARGUMENT_DEC     go to state 150
    VALUE_FOR_STORE  go to state 97


State 137

   86 FUNC_EVOKE: VALUE T_LBRACKET ARGUMENT_LIST_CALL T_RBRACKET .

    $default  reduce using rule 86 (FUNC_EVOKE)


State 138

   22 ARGUMENT_LIST_CALL: ARGUMENT_LIST_CALL T_COMMA . ARGUMENT_CALL

    T_SUB       shift, and go to state 10
    T_NUMBER    shift, and go to state 11
    T_VARIABLE  shift, and go to state 30

    ARGUMENT_CALL  go to state 151
    VALUE          go to state 100


State 139

   28 ASSIGN: VALUE_FOR_STORE T_ASSIGN EXPR T_SEMICOLON .

    $default  reduce using rule 28 (ASSIGN)


State 140

   30 ASSIGN: VALUE_FOR_STORE T_ADDASSIGN EXPR T_SEMICOLON .

    $default  reduce using rule 30 (ASSIGN)


State 141

   32 ASSIGN: VALUE_FOR_STORE T_SUBASSIGN EXPR T_SEMICOLON .

    $default  reduce using rule 32 (ASSIGN)


State 142

   34 ASSIGN: VALUE_FOR_STORE T_MULTASSIGN EXPR T_SEMICOLON .

    $default  reduce using rule 34 (ASSIGN)


State 143

   36 ASSIGN: VALUE_FOR_STORE T_DIVASSIGN EXPR T_SEMICOLON .

    $default  reduce using rule 36 (ASSIGN)


State 144

   38 ASSIGN: VALUE_FOR_STORE T_MODASSIGN EXPR T_SEMICOLON .

    $default  reduce using rule 38 (ASSIGN)


State 145

   47 IF: T_IF T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET . STATEMENT_LIST T_RCURLBRACKET
   49   | T_IF T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET . STATEMENT_LIST T_RCURLBRACKET T_ELSE T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   51   | T_IF T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET . STATEMENT_LIST T_RCURLBRACKET T_ELSE STATEMENT

    $default  reduce using rule 8 (STATEMENT_LIST)

    STATEMENT_LIST  go to state 152


State 146

   48 IF: T_IF T_LBRACKET LOGIC T_RBRACKET STATEMENT .
   50   | T_IF T_LBRACKET LOGIC T_RBRACKET STATEMENT . T_ELSE T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   52   | T_IF T_LBRACKET LOGIC T_RBRACKET STATEMENT . T_ELSE STATEMENT

    T_ELSE  shift, and go to state 153

    T_ELSE    [reduce using rule 48 (IF)]
    $default  reduce using rule 48 (IF)


State 147

   45 CONTROL: T_WHILE T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET . STATEMENT_LIST T_RCURLBRACKET

    $default  reduce using rule 8 (STATEMENT_LIST)

    STATEMENT_LIST  go to state 154


State 148

   46 CONTROL: T_FOR T_LBRACKET LOGIC T_SEMICOLON EXPR . T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   72 EXPR: EXPR . T_ADD EXPR2
   73     | EXPR . T_SUB EXPR2

    T_RBRACKET  shift, and go to state 155
    T_ADD       shift, and go to state 80
    T_SUB       shift, and go to state 81


State 149

   12 FUNC_DECLARATION: VAR_DECLARATION T_LBRACKET ARGUMENT_LIST_DEC T_RBRACKET T_LCURLBRACKET . STATEMENT_LIST T_RCURLBRACKET

    $default  reduce using rule 8 (STATEMENT_LIST)

    STATEMENT_LIST  go to state 156


State 150

   19 ARGUMENT_LIST_DEC: ARGUMENT_LIST_DEC T_COMMA ARGUMENT_DEC .

    $default  reduce using rule 19 (ARGUMENT_LIST_DEC)


State 151

   22 ARGUMENT_LIST_CALL: ARGUMENT_LIST_CALL T_COMMA ARGUMENT_CALL .

    $default  reduce using rule 22 (ARGUMENT_LIST_CALL)


State 152

    9 STATEMENT_LIST: STATEMENT_LIST . STATEMENT
   47 IF: T_IF T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST . T_RCURLBRACKET
   49   | T_IF T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST . T_RCURLBRACKET T_ELSE T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   51   | T_IF T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST . T_RCURLBRACKET T_ELSE STATEMENT

    T_RCURLBRACKET  shift, and go to state 157
    T_INT           shift, and go to state 4
    T_VOID          shift, and go to state 5
    T_RETURN        shift, and go to state 6
    T_IF            shift, and go to state 7
    T_WHILE         shift, and go to state 8
    T_FOR           shift, and go to state 9
    T_SUB           shift, and go to state 10
    T_NUMBER        shift, and go to state 11
    T_VARIABLE      shift, and go to state 12

    STATEMENT         go to state 158
    DECLARATION       go to state 14
    FUNC_DECLARATION  go to state 15
    VAR_DECLARATION   go to state 16
    ASSIGNMENT        go to state 17
    ASSIGN            go to state 18
    JUMP              go to state 19
    RETURN            go to state 20
    CONTROL           go to state 21
    IF                go to state 22
    VALUE             go to state 23
    VALUE_FOR_STORE   go to state 24
    FUNC_EVOKE        go to state 25


State 153

   50 IF: T_IF T_LBRACKET LOGIC T_RBRACKET STATEMENT T_ELSE . T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   52   | T_IF T_LBRACKET LOGIC T_RBRACKET STATEMENT T_ELSE . STATEMENT

    T_LCURLBRACKET  shift, and go to state 159
    T_INT           shift, and go to state 4
    T_VOID          shift, and go to state 5
    T_RETURN        shift, and go to state 6
    T_IF            shift, and go to state 7
    T_WHILE         shift, and go to state 8
    T_FOR           shift, and go to state 9
    T_SUB           shift, and go to state 10
    T_NUMBER        shift, and go to state 11
    T_VARIABLE      shift, and go to state 12

    STATEMENT         go to state 160
    DECLARATION       go to state 14
    FUNC_DECLARATION  go to state 15
    VAR_DECLARATION   go to state 16
    ASSIGNMENT        go to state 17
    ASSIGN            go to state 18
    JUMP              go to state 19
    RETURN            go to state 20
    CONTROL           go to state 21
    IF                go to state 22
    VALUE             go to state 23
    VALUE_FOR_STORE   go to state 24
    FUNC_EVOKE        go to state 25


State 154

    9 STATEMENT_LIST: STATEMENT_LIST . STATEMENT
   45 CONTROL: T_WHILE T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST . T_RCURLBRACKET

    T_RCURLBRACKET  shift, and go to state 161
    T_INT           shift, and go to state 4
    T_VOID          shift, and go to state 5
    T_RETURN        shift, and go to state 6
    T_IF            shift, and go to state 7
    T_WHILE         shift, and go to state 8
    T_FOR           shift, and go to state 9
    T_SUB           shift, and go to state 10
    T_NUMBER        shift, and go to state 11
    T_VARIABLE      shift, and go to state 12

    STATEMENT         go to state 158
    DECLARATION       go to state 14
    FUNC_DECLARATION  go to state 15
    VAR_DECLARATION   go to state 16
    ASSIGNMENT        go to state 17
    ASSIGN            go to state 18
    JUMP              go to state 19
    RETURN            go to state 20
    CONTROL           go to state 21
    IF                go to state 22
    VALUE             go to state 23
    VALUE_FOR_STORE   go to state 24
    FUNC_EVOKE        go to state 25


State 155

   46 CONTROL: T_FOR T_LBRACKET LOGIC T_SEMICOLON EXPR T_RBRACKET . T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET

    T_LCURLBRACKET  shift, and go to state 162


State 156

    9 STATEMENT_LIST: STATEMENT_LIST . STATEMENT
   12 FUNC_DECLARATION: VAR_DECLARATION T_LBRACKET ARGUMENT_LIST_DEC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST . T_RCURLBRACKET

    T_RCURLBRACKET  shift, and go to state 163
    T_INT           shift, and go to state 4
    T_VOID          shift, and go to state 5
    T_RETURN        shift, and go to state 6
    T_IF            shift, and go to state 7
    T_WHILE         shift, and go to state 8
    T_FOR           shift, and go to state 9
    T_SUB           shift, and go to state 10
    T_NUMBER        shift, and go to state 11
    T_VARIABLE      shift, and go to state 12

    STATEMENT         go to state 158
    DECLARATION       go to state 14
    FUNC_DECLARATION  go to state 15
    VAR_DECLARATION   go to state 16
    ASSIGNMENT        go to state 17
    ASSIGN            go to state 18
    JUMP              go to state 19
    RETURN            go to state 20
    CONTROL           go to state 21
    IF                go to state 22
    VALUE             go to state 23
    VALUE_FOR_STORE   go to state 24
    FUNC_EVOKE        go to state 25


State 157

   47 IF: T_IF T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET .
   49   | T_IF T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET . T_ELSE T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   51   | T_IF T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET . T_ELSE STATEMENT

    T_ELSE  shift, and go to state 164

    T_ELSE    [reduce using rule 47 (IF)]
    $default  reduce using rule 47 (IF)


State 158

    9 STATEMENT_LIST: STATEMENT_LIST STATEMENT .

    $default  reduce using rule 9 (STATEMENT_LIST)


State 159

   50 IF: T_IF T_LBRACKET LOGIC T_RBRACKET STATEMENT T_ELSE T_LCURLBRACKET . STATEMENT_LIST T_RCURLBRACKET

    $default  reduce using rule 8 (STATEMENT_LIST)

    STATEMENT_LIST  go to state 165


State 160

   52 IF: T_IF T_LBRACKET LOGIC T_RBRACKET STATEMENT T_ELSE STATEMENT .

    $default  reduce using rule 52 (IF)


State 161

   45 CONTROL: T_WHILE T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET .

    $default  reduce using rule 45 (CONTROL)


State 162

   46 CONTROL: T_FOR T_LBRACKET LOGIC T_SEMICOLON EXPR T_RBRACKET T_LCURLBRACKET . STATEMENT_LIST T_RCURLBRACKET

    $default  reduce using rule 8 (STATEMENT_LIST)

    STATEMENT_LIST  go to state 166


State 163

   12 FUNC_DECLARATION: VAR_DECLARATION T_LBRACKET ARGUMENT_LIST_DEC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET .

    $default  reduce using rule 12 (FUNC_DECLARATION)


State 164

   49 IF: T_IF T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET T_ELSE . T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   51   | T_IF T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET T_ELSE . STATEMENT

    T_LCURLBRACKET  shift, and go to state 167
    T_INT           shift, and go to state 4
    T_VOID          shift, and go to state 5
    T_RETURN        shift, and go to state 6
    T_IF            shift, and go to state 7
    T_WHILE         shift, and go to state 8
    T_FOR           shift, and go to state 9
    T_SUB           shift, and go to state 10
    T_NUMBER        shift, and go to state 11
    T_VARIABLE      shift, and go to state 12

    STATEMENT         go to state 168
    DECLARATION       go to state 14
    FUNC_DECLARATION  go to state 15
    VAR_DECLARATION   go to state 16
    ASSIGNMENT        go to state 17
    ASSIGN            go to state 18
    JUMP              go to state 19
    RETURN            go to state 20
    CONTROL           go to state 21
    IF                go to state 22
    VALUE             go to state 23
    VALUE_FOR_STORE   go to state 24
    FUNC_EVOKE        go to state 25


State 165

    9 STATEMENT_LIST: STATEMENT_LIST . STATEMENT
   50 IF: T_IF T_LBRACKET LOGIC T_RBRACKET STATEMENT T_ELSE T_LCURLBRACKET STATEMENT_LIST . T_RCURLBRACKET

    T_RCURLBRACKET  shift, and go to state 169
    T_INT           shift, and go to state 4
    T_VOID          shift, and go to state 5
    T_RETURN        shift, and go to state 6
    T_IF            shift, and go to state 7
    T_WHILE         shift, and go to state 8
    T_FOR           shift, and go to state 9
    T_SUB           shift, and go to state 10
    T_NUMBER        shift, and go to state 11
    T_VARIABLE      shift, and go to state 12

    STATEMENT         go to state 158
    DECLARATION       go to state 14
    FUNC_DECLARATION  go to state 15
    VAR_DECLARATION   go to state 16
    ASSIGNMENT        go to state 17
    ASSIGN            go to state 18
    JUMP              go to state 19
    RETURN            go to state 20
    CONTROL           go to state 21
    IF                go to state 22
    VALUE             go to state 23
    VALUE_FOR_STORE   go to state 24
    FUNC_EVOKE        go to state 25


State 166

    9 STATEMENT_LIST: STATEMENT_LIST . STATEMENT
   46 CONTROL: T_FOR T_LBRACKET LOGIC T_SEMICOLON EXPR T_RBRACKET T_LCURLBRACKET STATEMENT_LIST . T_RCURLBRACKET

    T_RCURLBRACKET  shift, and go to state 170
    T_INT           shift, and go to state 4
    T_VOID          shift, and go to state 5
    T_RETURN        shift, and go to state 6
    T_IF            shift, and go to state 7
    T_WHILE         shift, and go to state 8
    T_FOR           shift, and go to state 9
    T_SUB           shift, and go to state 10
    T_NUMBER        shift, and go to state 11
    T_VARIABLE      shift, and go to state 12

    STATEMENT         go to state 158
    DECLARATION       go to state 14
    FUNC_DECLARATION  go to state 15
    VAR_DECLARATION   go to state 16
    ASSIGNMENT        go to state 17
    ASSIGN            go to state 18
    JUMP              go to state 19
    RETURN            go to state 20
    CONTROL           go to state 21
    IF                go to state 22
    VALUE             go to state 23
    VALUE_FOR_STORE   go to state 24
    FUNC_EVOKE        go to state 25


State 167

   49 IF: T_IF T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET T_ELSE T_LCURLBRACKET . STATEMENT_LIST T_RCURLBRACKET

    $default  reduce using rule 8 (STATEMENT_LIST)

    STATEMENT_LIST  go to state 171


State 168

   51 IF: T_IF T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET T_ELSE STATEMENT .

    $default  reduce using rule 51 (IF)


State 169

   50 IF: T_IF T_LBRACKET LOGIC T_RBRACKET STATEMENT T_ELSE T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET .

    $default  reduce using rule 50 (IF)


State 170

   46 CONTROL: T_FOR T_LBRACKET LOGIC T_SEMICOLON EXPR T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET .

    $default  reduce using rule 46 (CONTROL)


State 171

    9 STATEMENT_LIST: STATEMENT_LIST . STATEMENT
   49 IF: T_IF T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET T_ELSE T_LCURLBRACKET STATEMENT_LIST . T_RCURLBRACKET

    T_RCURLBRACKET  shift, and go to state 172
    T_INT           shift, and go to state 4
    T_VOID          shift, and go to state 5
    T_RETURN        shift, and go to state 6
    T_IF            shift, and go to state 7
    T_WHILE         shift, and go to state 8
    T_FOR           shift, and go to state 9
    T_SUB           shift, and go to state 10
    T_NUMBER        shift, and go to state 11
    T_VARIABLE      shift, and go to state 12

    STATEMENT         go to state 158
    DECLARATION       go to state 14
    FUNC_DECLARATION  go to state 15
    VAR_DECLARATION   go to state 16
    ASSIGNMENT        go to state 17
    ASSIGN            go to state 18
    JUMP              go to state 19
    RETURN            go to state 20
    CONTROL           go to state 21
    IF                go to state 22
    VALUE             go to state 23
    VALUE_FOR_STORE   go to state 24
    FUNC_EVOKE        go to state 25


State 172

   49 IF: T_IF T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET T_ELSE T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET .

    $default  reduce using rule 49 (IF)
