Terminals unused in grammar

   T_COLON


State 165 conflicts: 1 shift/reduce
State 178 conflicts: 1 shift/reduce


Grammar

    0 $accept: ROOT $end

    1 ROOT: PROGRAM

    2 PROGRAM: %empty
    3        | PROGRAM STATEMENT

    4 STATEMENT: DECLARATION
    5          | ASSIGNMENT
    6          | JUMP
    7          | CONTROL

    8 STATEMENT_LIST: %empty
    9               | STATEMENT_LIST STATEMENT

   10 DECLARATION: FUNC_DECLARATION
   11            | VAR_DECLARATION

   12 FUNC_DECLARATION: VAR_DECLARATION T_LBRACKET ARGUMENT_LIST_DEC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET

   13 VAR_DECLARATION: T_INT VALUE_FOR_STORE
   14                | T_INT VALUE_FOR_STORE T_SEMICOLON
   15                | T_INT ARRAY_FOR_STORE
   16                | T_INT ARRAY_FOR_STORE T_SEMICOLON
   17                | T_VOID VALUE_FOR_STORE
   18                | T_VOID VALUE_FOR_STORE T_SEMICOLON

   19 ARGUMENT_LIST_DEC: %empty
   20                  | ARGUMENT_DEC
   21                  | ARGUMENT_LIST_DEC T_COMMA ARGUMENT_DEC

   22 ARGUMENT_LIST_CALL: %empty
   23                   | ARGUMENT_CALL
   24                   | ARGUMENT_LIST_CALL T_COMMA ARGUMENT_CALL

   25 ARGUMENT_DEC: VAR_DECLARATION
   26             | VALUE_FOR_STORE

   27 ARGUMENT_CALL: VALUE

   28 ASSIGNMENT: ASSIGN

   29 ASSIGN: VAR_DECLARATION T_ASSIGN EXPR T_SEMICOLON
   30       | VALUE_FOR_STORE T_ASSIGN EXPR T_SEMICOLON
   31       | VAR_DECLARATION T_ADDASSIGN EXPR T_SEMICOLON
   32       | VALUE_FOR_STORE T_ADDASSIGN EXPR T_SEMICOLON
   33       | VAR_DECLARATION T_SUBASSIGN EXPR T_SEMICOLON
   34       | VALUE_FOR_STORE T_SUBASSIGN EXPR T_SEMICOLON
   35       | VAR_DECLARATION T_MULTASSIGN EXPR T_SEMICOLON
   36       | VALUE_FOR_STORE T_MULTASSIGN EXPR T_SEMICOLON
   37       | VAR_DECLARATION T_DIVASSIGN EXPR T_SEMICOLON
   38       | VALUE_FOR_STORE T_DIVASSIGN EXPR T_SEMICOLON
   39       | VAR_DECLARATION T_MODASSIGN EXPR T_SEMICOLON
   40       | VALUE_FOR_STORE T_MODASSIGN EXPR T_SEMICOLON
   41       | VALUE T_INCREMENT T_SEMICOLON
   42       | VALUE T_DECREMENT T_SEMICOLON

   43 JUMP: RETURN
   44     | FUNC_EVOKE T_SEMICOLON
   45     | T_LABEL
   46     | T_GOTO T_VARIABLE T_SEMICOLON

   47 RETURN: T_RETURN LOGIC T_SEMICOLON

   48 CONTROL: IF
   49        | T_WHILE T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   50        | T_FOR T_LBRACKET LOGIC T_SEMICOLON EXPR T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   51        | T_DO T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET T_WHILE T_LBRACKET LOGIC T_RBRACKET T_SEMICOLON

   52 IF: T_IF T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   53   | T_IF T_LBRACKET LOGIC T_RBRACKET STATEMENT
   54   | T_IF T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET T_ELSE T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   55   | T_IF T_LBRACKET LOGIC T_RBRACKET STATEMENT T_ELSE T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   56   | T_IF T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET T_ELSE STATEMENT
   57   | T_IF T_LBRACKET LOGIC T_RBRACKET STATEMENT T_ELSE STATEMENT

   58 LOGIC: LOGIC2
   59      | LOGIC T_OR LOGIC2

   60 LOGIC2: LOGIC3
   61       | LOGIC2 T_AND LOGIC3

   62 LOGIC3: LOGIC4
   63       | LOGIC3 T_BITOR LOGIC4

   64 LOGIC4: LOGIC5
   65       | LOGIC4 T_BITXOR LOGIC5

   66 LOGIC5: LOGIC6
   67       | LOGIC5 T_BITAND LOGIC6

   68 LOGIC6: LOGIC7
   69       | LOGIC6 T_EQUAL LOGIC7
   70       | LOGIC6 T_NOTEQUAL LOGIC7

   71 LOGIC7: EXPR
   72       | LOGIC7 T_GREATER EXPR
   73       | LOGIC7 T_EQGT EXPR
   74       | LOGIC7 T_LESS EXPR
   75       | LOGIC7 T_EQLT EXPR

   76 EXPR: EXPR2
   77     | EXPR T_ADD EXPR2
   78     | EXPR T_SUB EXPR2

   79 EXPR2: EXPR3
   80      | EXPR2 T_MULT EXPR3
   81      | EXPR2 T_DIV EXPR3
   82      | EXPR2 T_MOD EXPR3

   83 EXPR3: VALUE_WITH_FUNC
   84      | T_LBRACKET LOGIC T_RBRACKET

   85 VALUE_WITH_FUNC: FUNC_EVOKE
   86                | VALUE

   87 VALUE: ARRAY
   88      | T_NUMBER
   89      | T_SUB T_NUMBER
   90      | T_VARIABLE

   91 ARRAY: T_VARIABLE T_LSQR T_NUMBER T_RSQR

   92 VALUE_FOR_STORE: T_VARIABLE

   93 ARRAY_FOR_STORE: T_VARIABLE T_LSQR T_NUMBER T_RSQR

   94 FUNC_EVOKE: VALUE T_LBRACKET ARGUMENT_LIST_CALL T_RBRACKET


Terminals, with rules where they appear

$end (0) 0
error (256)
T_ASSIGN (258) 29 30
T_ADDASSIGN (259) 31 32
T_SUBASSIGN (260) 33 34
T_MULTASSIGN (261) 35 36
T_DIVASSIGN (262) 37 38
T_MODASSIGN (263) 39 40
T_LBRACKET (264) 12 49 50 51 52 53 54 55 56 57 84 94
T_RBRACKET (265) 12 49 50 51 52 53 54 55 56 57 84 94
T_LCURLBRACKET (266) 12 49 50 51 52 54 55 56
T_RCURLBRACKET (267) 12 49 50 51 52 54 55 56
T_LSQR (268) 91 93
T_RSQR (269) 91 93
T_SEMICOLON (270) 14 16 18 29 30 31 32 33 34 35 36 37 38 39 40 41 42
    44 46 47 50 51
T_COLON (271)
T_COMMA (272) 21 24
T_INT (273) 13 14 15 16
T_VOID (274) 17 18
T_RETURN (275) 47
T_GOTO (276) 46
T_IF (277) 52 53 54 55 56 57
T_ELSE (278) 54 55 56 57
T_WHILE (279) 49 51
T_FOR (280) 50
T_DO (281) 51
T_AND (282) 61
T_OR (283) 59
T_BITAND (284) 67
T_BITOR (285) 63
T_BITXOR (286) 65
T_ADD (287) 77
T_SUB (288) 78 89
T_MULT (289) 80
T_DIV (290) 81
T_MOD (291) 82
T_INCREMENT (292) 41
T_DECREMENT (293) 42
T_EQUAL (294) 69
T_NOTEQUAL (295) 70
T_LESS (296) 74
T_EQLT (297) 75
T_GREATER (298) 72
T_EQGT (299) 73
T_NUMBER (300) 88 89 91 93
T_VARIABLE (301) 46 90 91 92 93
T_LABEL (302) 45


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
ROOT (49)
    on left: 1, on right: 0
PROGRAM (50)
    on left: 2 3, on right: 1 3
STATEMENT (51)
    on left: 4 5 6 7, on right: 3 9 53 55 56 57
STATEMENT_LIST (52)
    on left: 8 9, on right: 9 12 49 50 51 52 54 55 56
DECLARATION (53)
    on left: 10 11, on right: 4
FUNC_DECLARATION (54)
    on left: 12, on right: 10
VAR_DECLARATION (55)
    on left: 13 14 15 16 17 18, on right: 11 12 25 29 31 33 35 37 39
ARGUMENT_LIST_DEC (56)
    on left: 19 20 21, on right: 12 21
ARGUMENT_LIST_CALL (57)
    on left: 22 23 24, on right: 24 94
ARGUMENT_DEC (58)
    on left: 25 26, on right: 20 21
ARGUMENT_CALL (59)
    on left: 27, on right: 23 24
ASSIGNMENT (60)
    on left: 28, on right: 5
ASSIGN (61)
    on left: 29 30 31 32 33 34 35 36 37 38 39 40 41 42, on right: 28
JUMP (62)
    on left: 43 44 45 46, on right: 6
RETURN (63)
    on left: 47, on right: 43
CONTROL (64)
    on left: 48 49 50 51, on right: 7
IF (65)
    on left: 52 53 54 55 56 57, on right: 48
LOGIC (66)
    on left: 58 59, on right: 47 49 50 51 52 53 54 55 56 57 59 84
LOGIC2 (67)
    on left: 60 61, on right: 58 59 61
LOGIC3 (68)
    on left: 62 63, on right: 60 61 63
LOGIC4 (69)
    on left: 64 65, on right: 62 63 65
LOGIC5 (70)
    on left: 66 67, on right: 64 65 67
LOGIC6 (71)
    on left: 68 69 70, on right: 66 67 69 70
LOGIC7 (72)
    on left: 71 72 73 74 75, on right: 68 69 70 72 73 74 75
EXPR (73)
    on left: 76 77 78, on right: 29 30 31 32 33 34 35 36 37 38 39 40
    50 71 72 73 74 75 77 78
EXPR2 (74)
    on left: 79 80 81 82, on right: 76 77 78 80 81 82
EXPR3 (75)
    on left: 83 84, on right: 79 80 81 82
VALUE_WITH_FUNC (76)
    on left: 85 86, on right: 83
VALUE (77)
    on left: 87 88 89 90, on right: 27 41 42 86 94
ARRAY (78)
    on left: 91, on right: 87
VALUE_FOR_STORE (79)
    on left: 92, on right: 13 14 17 18 26 30 32 34 36 38 40
ARRAY_FOR_STORE (80)
    on left: 93, on right: 15 16
FUNC_EVOKE (81)
    on left: 94, on right: 44 85


State 0

    0 $accept: . ROOT $end

    $default  reduce using rule 2 (PROGRAM)

    ROOT     go to state 1
    PROGRAM  go to state 2


State 1

    0 $accept: ROOT . $end

    $end  shift, and go to state 3


State 2

    1 ROOT: PROGRAM .
    3 PROGRAM: PROGRAM . STATEMENT

    T_INT       shift, and go to state 4
    T_VOID      shift, and go to state 5
    T_RETURN    shift, and go to state 6
    T_GOTO      shift, and go to state 7
    T_IF        shift, and go to state 8
    T_WHILE     shift, and go to state 9
    T_FOR       shift, and go to state 10
    T_DO        shift, and go to state 11
    T_SUB       shift, and go to state 12
    T_NUMBER    shift, and go to state 13
    T_VARIABLE  shift, and go to state 14
    T_LABEL     shift, and go to state 15

    $default  reduce using rule 1 (ROOT)

    STATEMENT         go to state 16
    DECLARATION       go to state 17
    FUNC_DECLARATION  go to state 18
    VAR_DECLARATION   go to state 19
    ASSIGNMENT        go to state 20
    ASSIGN            go to state 21
    JUMP              go to state 22
    RETURN            go to state 23
    CONTROL           go to state 24
    IF                go to state 25
    VALUE             go to state 26
    ARRAY             go to state 27
    VALUE_FOR_STORE   go to state 28
    FUNC_EVOKE        go to state 29


State 3

    0 $accept: ROOT $end .

    $default  accept


State 4

   13 VAR_DECLARATION: T_INT . VALUE_FOR_STORE
   14                | T_INT . VALUE_FOR_STORE T_SEMICOLON
   15                | T_INT . ARRAY_FOR_STORE
   16                | T_INT . ARRAY_FOR_STORE T_SEMICOLON

    T_VARIABLE  shift, and go to state 30

    VALUE_FOR_STORE  go to state 31
    ARRAY_FOR_STORE  go to state 32


State 5

   17 VAR_DECLARATION: T_VOID . VALUE_FOR_STORE
   18                | T_VOID . VALUE_FOR_STORE T_SEMICOLON

    T_VARIABLE  shift, and go to state 33

    VALUE_FOR_STORE  go to state 34


State 6

   47 RETURN: T_RETURN . LOGIC T_SEMICOLON

    T_LBRACKET  shift, and go to state 35
    T_SUB       shift, and go to state 12
    T_NUMBER    shift, and go to state 13
    T_VARIABLE  shift, and go to state 36

    LOGIC            go to state 37
    LOGIC2           go to state 38
    LOGIC3           go to state 39
    LOGIC4           go to state 40
    LOGIC5           go to state 41
    LOGIC6           go to state 42
    LOGIC7           go to state 43
    EXPR             go to state 44
    EXPR2            go to state 45
    EXPR3            go to state 46
    VALUE_WITH_FUNC  go to state 47
    VALUE            go to state 48
    ARRAY            go to state 27
    FUNC_EVOKE       go to state 49


State 7

   46 JUMP: T_GOTO . T_VARIABLE T_SEMICOLON

    T_VARIABLE  shift, and go to state 50


State 8

   52 IF: T_IF . T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   53   | T_IF . T_LBRACKET LOGIC T_RBRACKET STATEMENT
   54   | T_IF . T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET T_ELSE T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   55   | T_IF . T_LBRACKET LOGIC T_RBRACKET STATEMENT T_ELSE T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   56   | T_IF . T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET T_ELSE STATEMENT
   57   | T_IF . T_LBRACKET LOGIC T_RBRACKET STATEMENT T_ELSE STATEMENT

    T_LBRACKET  shift, and go to state 51


State 9

   49 CONTROL: T_WHILE . T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET

    T_LBRACKET  shift, and go to state 52


State 10

   50 CONTROL: T_FOR . T_LBRACKET LOGIC T_SEMICOLON EXPR T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET

    T_LBRACKET  shift, and go to state 53


State 11

   51 CONTROL: T_DO . T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET T_WHILE T_LBRACKET LOGIC T_RBRACKET T_SEMICOLON

    T_LCURLBRACKET  shift, and go to state 54


State 12

   89 VALUE: T_SUB . T_NUMBER

    T_NUMBER  shift, and go to state 55


State 13

   88 VALUE: T_NUMBER .

    $default  reduce using rule 88 (VALUE)


State 14

   90 VALUE: T_VARIABLE .
   91 ARRAY: T_VARIABLE . T_LSQR T_NUMBER T_RSQR
   92 VALUE_FOR_STORE: T_VARIABLE .

    T_LSQR  shift, and go to state 56

    T_LBRACKET   reduce using rule 90 (VALUE)
    T_INCREMENT  reduce using rule 90 (VALUE)
    T_DECREMENT  reduce using rule 90 (VALUE)
    $default     reduce using rule 92 (VALUE_FOR_STORE)


State 15

   45 JUMP: T_LABEL .

    $default  reduce using rule 45 (JUMP)


State 16

    3 PROGRAM: PROGRAM STATEMENT .

    $default  reduce using rule 3 (PROGRAM)


State 17

    4 STATEMENT: DECLARATION .

    $default  reduce using rule 4 (STATEMENT)


State 18

   10 DECLARATION: FUNC_DECLARATION .

    $default  reduce using rule 10 (DECLARATION)


State 19

   11 DECLARATION: VAR_DECLARATION .
   12 FUNC_DECLARATION: VAR_DECLARATION . T_LBRACKET ARGUMENT_LIST_DEC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   29 ASSIGN: VAR_DECLARATION . T_ASSIGN EXPR T_SEMICOLON
   31       | VAR_DECLARATION . T_ADDASSIGN EXPR T_SEMICOLON
   33       | VAR_DECLARATION . T_SUBASSIGN EXPR T_SEMICOLON
   35       | VAR_DECLARATION . T_MULTASSIGN EXPR T_SEMICOLON
   37       | VAR_DECLARATION . T_DIVASSIGN EXPR T_SEMICOLON
   39       | VAR_DECLARATION . T_MODASSIGN EXPR T_SEMICOLON

    T_ASSIGN      shift, and go to state 57
    T_ADDASSIGN   shift, and go to state 58
    T_SUBASSIGN   shift, and go to state 59
    T_MULTASSIGN  shift, and go to state 60
    T_DIVASSIGN   shift, and go to state 61
    T_MODASSIGN   shift, and go to state 62
    T_LBRACKET    shift, and go to state 63

    $default  reduce using rule 11 (DECLARATION)


State 20

    5 STATEMENT: ASSIGNMENT .

    $default  reduce using rule 5 (STATEMENT)


State 21

   28 ASSIGNMENT: ASSIGN .

    $default  reduce using rule 28 (ASSIGNMENT)


State 22

    6 STATEMENT: JUMP .

    $default  reduce using rule 6 (STATEMENT)


State 23

   43 JUMP: RETURN .

    $default  reduce using rule 43 (JUMP)


State 24

    7 STATEMENT: CONTROL .

    $default  reduce using rule 7 (STATEMENT)


State 25

   48 CONTROL: IF .

    $default  reduce using rule 48 (CONTROL)


State 26

   41 ASSIGN: VALUE . T_INCREMENT T_SEMICOLON
   42       | VALUE . T_DECREMENT T_SEMICOLON
   94 FUNC_EVOKE: VALUE . T_LBRACKET ARGUMENT_LIST_CALL T_RBRACKET

    T_LBRACKET   shift, and go to state 64
    T_INCREMENT  shift, and go to state 65
    T_DECREMENT  shift, and go to state 66


State 27

   87 VALUE: ARRAY .

    $default  reduce using rule 87 (VALUE)


State 28

   30 ASSIGN: VALUE_FOR_STORE . T_ASSIGN EXPR T_SEMICOLON
   32       | VALUE_FOR_STORE . T_ADDASSIGN EXPR T_SEMICOLON
   34       | VALUE_FOR_STORE . T_SUBASSIGN EXPR T_SEMICOLON
   36       | VALUE_FOR_STORE . T_MULTASSIGN EXPR T_SEMICOLON
   38       | VALUE_FOR_STORE . T_DIVASSIGN EXPR T_SEMICOLON
   40       | VALUE_FOR_STORE . T_MODASSIGN EXPR T_SEMICOLON

    T_ASSIGN      shift, and go to state 67
    T_ADDASSIGN   shift, and go to state 68
    T_SUBASSIGN   shift, and go to state 69
    T_MULTASSIGN  shift, and go to state 70
    T_DIVASSIGN   shift, and go to state 71
    T_MODASSIGN   shift, and go to state 72


State 29

   44 JUMP: FUNC_EVOKE . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 73


State 30

   92 VALUE_FOR_STORE: T_VARIABLE .
   93 ARRAY_FOR_STORE: T_VARIABLE . T_LSQR T_NUMBER T_RSQR

    T_LSQR  shift, and go to state 74

    $default  reduce using rule 92 (VALUE_FOR_STORE)


State 31

   13 VAR_DECLARATION: T_INT VALUE_FOR_STORE .
   14                | T_INT VALUE_FOR_STORE . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 75

    $default  reduce using rule 13 (VAR_DECLARATION)


State 32

   15 VAR_DECLARATION: T_INT ARRAY_FOR_STORE .
   16                | T_INT ARRAY_FOR_STORE . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 76

    $default  reduce using rule 15 (VAR_DECLARATION)


State 33

   92 VALUE_FOR_STORE: T_VARIABLE .

    $default  reduce using rule 92 (VALUE_FOR_STORE)


State 34

   17 VAR_DECLARATION: T_VOID VALUE_FOR_STORE .
   18                | T_VOID VALUE_FOR_STORE . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 77

    $default  reduce using rule 17 (VAR_DECLARATION)


State 35

   84 EXPR3: T_LBRACKET . LOGIC T_RBRACKET

    T_LBRACKET  shift, and go to state 35
    T_SUB       shift, and go to state 12
    T_NUMBER    shift, and go to state 13
    T_VARIABLE  shift, and go to state 36

    LOGIC            go to state 78
    LOGIC2           go to state 38
    LOGIC3           go to state 39
    LOGIC4           go to state 40
    LOGIC5           go to state 41
    LOGIC6           go to state 42
    LOGIC7           go to state 43
    EXPR             go to state 44
    EXPR2            go to state 45
    EXPR3            go to state 46
    VALUE_WITH_FUNC  go to state 47
    VALUE            go to state 48
    ARRAY            go to state 27
    FUNC_EVOKE       go to state 49


State 36

   90 VALUE: T_VARIABLE .
   91 ARRAY: T_VARIABLE . T_LSQR T_NUMBER T_RSQR

    T_LSQR  shift, and go to state 56

    $default  reduce using rule 90 (VALUE)


State 37

   47 RETURN: T_RETURN LOGIC . T_SEMICOLON
   59 LOGIC: LOGIC . T_OR LOGIC2

    T_SEMICOLON  shift, and go to state 79
    T_OR         shift, and go to state 80


State 38

   58 LOGIC: LOGIC2 .
   61 LOGIC2: LOGIC2 . T_AND LOGIC3

    T_AND  shift, and go to state 81

    $default  reduce using rule 58 (LOGIC)


State 39

   60 LOGIC2: LOGIC3 .
   63 LOGIC3: LOGIC3 . T_BITOR LOGIC4

    T_BITOR  shift, and go to state 82

    $default  reduce using rule 60 (LOGIC2)


State 40

   62 LOGIC3: LOGIC4 .
   65 LOGIC4: LOGIC4 . T_BITXOR LOGIC5

    T_BITXOR  shift, and go to state 83

    $default  reduce using rule 62 (LOGIC3)


State 41

   64 LOGIC4: LOGIC5 .
   67 LOGIC5: LOGIC5 . T_BITAND LOGIC6

    T_BITAND  shift, and go to state 84

    $default  reduce using rule 64 (LOGIC4)


State 42

   66 LOGIC5: LOGIC6 .
   69 LOGIC6: LOGIC6 . T_EQUAL LOGIC7
   70       | LOGIC6 . T_NOTEQUAL LOGIC7

    T_EQUAL     shift, and go to state 85
    T_NOTEQUAL  shift, and go to state 86

    $default  reduce using rule 66 (LOGIC5)


State 43

   68 LOGIC6: LOGIC7 .
   72 LOGIC7: LOGIC7 . T_GREATER EXPR
   73       | LOGIC7 . T_EQGT EXPR
   74       | LOGIC7 . T_LESS EXPR
   75       | LOGIC7 . T_EQLT EXPR

    T_LESS     shift, and go to state 87
    T_EQLT     shift, and go to state 88
    T_GREATER  shift, and go to state 89
    T_EQGT     shift, and go to state 90

    $default  reduce using rule 68 (LOGIC6)


State 44

   71 LOGIC7: EXPR .
   77 EXPR: EXPR . T_ADD EXPR2
   78     | EXPR . T_SUB EXPR2

    T_ADD  shift, and go to state 91
    T_SUB  shift, and go to state 92

    $default  reduce using rule 71 (LOGIC7)


State 45

   76 EXPR: EXPR2 .
   80 EXPR2: EXPR2 . T_MULT EXPR3
   81      | EXPR2 . T_DIV EXPR3
   82      | EXPR2 . T_MOD EXPR3

    T_MULT  shift, and go to state 93
    T_DIV   shift, and go to state 94
    T_MOD   shift, and go to state 95

    $default  reduce using rule 76 (EXPR)


State 46

   79 EXPR2: EXPR3 .

    $default  reduce using rule 79 (EXPR2)


State 47

   83 EXPR3: VALUE_WITH_FUNC .

    $default  reduce using rule 83 (EXPR3)


State 48

   86 VALUE_WITH_FUNC: VALUE .
   94 FUNC_EVOKE: VALUE . T_LBRACKET ARGUMENT_LIST_CALL T_RBRACKET

    T_LBRACKET  shift, and go to state 64

    $default  reduce using rule 86 (VALUE_WITH_FUNC)


State 49

   85 VALUE_WITH_FUNC: FUNC_EVOKE .

    $default  reduce using rule 85 (VALUE_WITH_FUNC)


State 50

   46 JUMP: T_GOTO T_VARIABLE . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 96


State 51

   52 IF: T_IF T_LBRACKET . LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   53   | T_IF T_LBRACKET . LOGIC T_RBRACKET STATEMENT
   54   | T_IF T_LBRACKET . LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET T_ELSE T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   55   | T_IF T_LBRACKET . LOGIC T_RBRACKET STATEMENT T_ELSE T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   56   | T_IF T_LBRACKET . LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET T_ELSE STATEMENT
   57   | T_IF T_LBRACKET . LOGIC T_RBRACKET STATEMENT T_ELSE STATEMENT

    T_LBRACKET  shift, and go to state 35
    T_SUB       shift, and go to state 12
    T_NUMBER    shift, and go to state 13
    T_VARIABLE  shift, and go to state 36

    LOGIC            go to state 97
    LOGIC2           go to state 38
    LOGIC3           go to state 39
    LOGIC4           go to state 40
    LOGIC5           go to state 41
    LOGIC6           go to state 42
    LOGIC7           go to state 43
    EXPR             go to state 44
    EXPR2            go to state 45
    EXPR3            go to state 46
    VALUE_WITH_FUNC  go to state 47
    VALUE            go to state 48
    ARRAY            go to state 27
    FUNC_EVOKE       go to state 49


State 52

   49 CONTROL: T_WHILE T_LBRACKET . LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET

    T_LBRACKET  shift, and go to state 35
    T_SUB       shift, and go to state 12
    T_NUMBER    shift, and go to state 13
    T_VARIABLE  shift, and go to state 36

    LOGIC            go to state 98
    LOGIC2           go to state 38
    LOGIC3           go to state 39
    LOGIC4           go to state 40
    LOGIC5           go to state 41
    LOGIC6           go to state 42
    LOGIC7           go to state 43
    EXPR             go to state 44
    EXPR2            go to state 45
    EXPR3            go to state 46
    VALUE_WITH_FUNC  go to state 47
    VALUE            go to state 48
    ARRAY            go to state 27
    FUNC_EVOKE       go to state 49


State 53

   50 CONTROL: T_FOR T_LBRACKET . LOGIC T_SEMICOLON EXPR T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET

    T_LBRACKET  shift, and go to state 35
    T_SUB       shift, and go to state 12
    T_NUMBER    shift, and go to state 13
    T_VARIABLE  shift, and go to state 36

    LOGIC            go to state 99
    LOGIC2           go to state 38
    LOGIC3           go to state 39
    LOGIC4           go to state 40
    LOGIC5           go to state 41
    LOGIC6           go to state 42
    LOGIC7           go to state 43
    EXPR             go to state 44
    EXPR2            go to state 45
    EXPR3            go to state 46
    VALUE_WITH_FUNC  go to state 47
    VALUE            go to state 48
    ARRAY            go to state 27
    FUNC_EVOKE       go to state 49


State 54

   51 CONTROL: T_DO T_LCURLBRACKET . STATEMENT_LIST T_RCURLBRACKET T_WHILE T_LBRACKET LOGIC T_RBRACKET T_SEMICOLON

    $default  reduce using rule 8 (STATEMENT_LIST)

    STATEMENT_LIST  go to state 100


State 55

   89 VALUE: T_SUB T_NUMBER .

    $default  reduce using rule 89 (VALUE)


State 56

   91 ARRAY: T_VARIABLE T_LSQR . T_NUMBER T_RSQR

    T_NUMBER  shift, and go to state 101


State 57

   29 ASSIGN: VAR_DECLARATION T_ASSIGN . EXPR T_SEMICOLON

    T_LBRACKET  shift, and go to state 35
    T_SUB       shift, and go to state 12
    T_NUMBER    shift, and go to state 13
    T_VARIABLE  shift, and go to state 36

    EXPR             go to state 102
    EXPR2            go to state 45
    EXPR3            go to state 46
    VALUE_WITH_FUNC  go to state 47
    VALUE            go to state 48
    ARRAY            go to state 27
    FUNC_EVOKE       go to state 49


State 58

   31 ASSIGN: VAR_DECLARATION T_ADDASSIGN . EXPR T_SEMICOLON

    T_LBRACKET  shift, and go to state 35
    T_SUB       shift, and go to state 12
    T_NUMBER    shift, and go to state 13
    T_VARIABLE  shift, and go to state 36

    EXPR             go to state 103
    EXPR2            go to state 45
    EXPR3            go to state 46
    VALUE_WITH_FUNC  go to state 47
    VALUE            go to state 48
    ARRAY            go to state 27
    FUNC_EVOKE       go to state 49


State 59

   33 ASSIGN: VAR_DECLARATION T_SUBASSIGN . EXPR T_SEMICOLON

    T_LBRACKET  shift, and go to state 35
    T_SUB       shift, and go to state 12
    T_NUMBER    shift, and go to state 13
    T_VARIABLE  shift, and go to state 36

    EXPR             go to state 104
    EXPR2            go to state 45
    EXPR3            go to state 46
    VALUE_WITH_FUNC  go to state 47
    VALUE            go to state 48
    ARRAY            go to state 27
    FUNC_EVOKE       go to state 49


State 60

   35 ASSIGN: VAR_DECLARATION T_MULTASSIGN . EXPR T_SEMICOLON

    T_LBRACKET  shift, and go to state 35
    T_SUB       shift, and go to state 12
    T_NUMBER    shift, and go to state 13
    T_VARIABLE  shift, and go to state 36

    EXPR             go to state 105
    EXPR2            go to state 45
    EXPR3            go to state 46
    VALUE_WITH_FUNC  go to state 47
    VALUE            go to state 48
    ARRAY            go to state 27
    FUNC_EVOKE       go to state 49


State 61

   37 ASSIGN: VAR_DECLARATION T_DIVASSIGN . EXPR T_SEMICOLON

    T_LBRACKET  shift, and go to state 35
    T_SUB       shift, and go to state 12
    T_NUMBER    shift, and go to state 13
    T_VARIABLE  shift, and go to state 36

    EXPR             go to state 106
    EXPR2            go to state 45
    EXPR3            go to state 46
    VALUE_WITH_FUNC  go to state 47
    VALUE            go to state 48
    ARRAY            go to state 27
    FUNC_EVOKE       go to state 49


State 62

   39 ASSIGN: VAR_DECLARATION T_MODASSIGN . EXPR T_SEMICOLON

    T_LBRACKET  shift, and go to state 35
    T_SUB       shift, and go to state 12
    T_NUMBER    shift, and go to state 13
    T_VARIABLE  shift, and go to state 36

    EXPR             go to state 107
    EXPR2            go to state 45
    EXPR3            go to state 46
    VALUE_WITH_FUNC  go to state 47
    VALUE            go to state 48
    ARRAY            go to state 27
    FUNC_EVOKE       go to state 49


State 63

   12 FUNC_DECLARATION: VAR_DECLARATION T_LBRACKET . ARGUMENT_LIST_DEC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET

    T_INT       shift, and go to state 4
    T_VOID      shift, and go to state 5
    T_VARIABLE  shift, and go to state 33

    $default  reduce using rule 19 (ARGUMENT_LIST_DEC)

    VAR_DECLARATION    go to state 108
    ARGUMENT_LIST_DEC  go to state 109
    ARGUMENT_DEC       go to state 110
    VALUE_FOR_STORE    go to state 111


State 64

   94 FUNC_EVOKE: VALUE T_LBRACKET . ARGUMENT_LIST_CALL T_RBRACKET

    T_SUB       shift, and go to state 12
    T_NUMBER    shift, and go to state 13
    T_VARIABLE  shift, and go to state 36

    $default  reduce using rule 22 (ARGUMENT_LIST_CALL)

    ARGUMENT_LIST_CALL  go to state 112
    ARGUMENT_CALL       go to state 113
    VALUE               go to state 114
    ARRAY               go to state 27


State 65

   41 ASSIGN: VALUE T_INCREMENT . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 115


State 66

   42 ASSIGN: VALUE T_DECREMENT . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 116


State 67

   30 ASSIGN: VALUE_FOR_STORE T_ASSIGN . EXPR T_SEMICOLON

    T_LBRACKET  shift, and go to state 35
    T_SUB       shift, and go to state 12
    T_NUMBER    shift, and go to state 13
    T_VARIABLE  shift, and go to state 36

    EXPR             go to state 117
    EXPR2            go to state 45
    EXPR3            go to state 46
    VALUE_WITH_FUNC  go to state 47
    VALUE            go to state 48
    ARRAY            go to state 27
    FUNC_EVOKE       go to state 49


State 68

   32 ASSIGN: VALUE_FOR_STORE T_ADDASSIGN . EXPR T_SEMICOLON

    T_LBRACKET  shift, and go to state 35
    T_SUB       shift, and go to state 12
    T_NUMBER    shift, and go to state 13
    T_VARIABLE  shift, and go to state 36

    EXPR             go to state 118
    EXPR2            go to state 45
    EXPR3            go to state 46
    VALUE_WITH_FUNC  go to state 47
    VALUE            go to state 48
    ARRAY            go to state 27
    FUNC_EVOKE       go to state 49


State 69

   34 ASSIGN: VALUE_FOR_STORE T_SUBASSIGN . EXPR T_SEMICOLON

    T_LBRACKET  shift, and go to state 35
    T_SUB       shift, and go to state 12
    T_NUMBER    shift, and go to state 13
    T_VARIABLE  shift, and go to state 36

    EXPR             go to state 119
    EXPR2            go to state 45
    EXPR3            go to state 46
    VALUE_WITH_FUNC  go to state 47
    VALUE            go to state 48
    ARRAY            go to state 27
    FUNC_EVOKE       go to state 49


State 70

   36 ASSIGN: VALUE_FOR_STORE T_MULTASSIGN . EXPR T_SEMICOLON

    T_LBRACKET  shift, and go to state 35
    T_SUB       shift, and go to state 12
    T_NUMBER    shift, and go to state 13
    T_VARIABLE  shift, and go to state 36

    EXPR             go to state 120
    EXPR2            go to state 45
    EXPR3            go to state 46
    VALUE_WITH_FUNC  go to state 47
    VALUE            go to state 48
    ARRAY            go to state 27
    FUNC_EVOKE       go to state 49


State 71

   38 ASSIGN: VALUE_FOR_STORE T_DIVASSIGN . EXPR T_SEMICOLON

    T_LBRACKET  shift, and go to state 35
    T_SUB       shift, and go to state 12
    T_NUMBER    shift, and go to state 13
    T_VARIABLE  shift, and go to state 36

    EXPR             go to state 121
    EXPR2            go to state 45
    EXPR3            go to state 46
    VALUE_WITH_FUNC  go to state 47
    VALUE            go to state 48
    ARRAY            go to state 27
    FUNC_EVOKE       go to state 49


State 72

   40 ASSIGN: VALUE_FOR_STORE T_MODASSIGN . EXPR T_SEMICOLON

    T_LBRACKET  shift, and go to state 35
    T_SUB       shift, and go to state 12
    T_NUMBER    shift, and go to state 13
    T_VARIABLE  shift, and go to state 36

    EXPR             go to state 122
    EXPR2            go to state 45
    EXPR3            go to state 46
    VALUE_WITH_FUNC  go to state 47
    VALUE            go to state 48
    ARRAY            go to state 27
    FUNC_EVOKE       go to state 49


State 73

   44 JUMP: FUNC_EVOKE T_SEMICOLON .

    $default  reduce using rule 44 (JUMP)


State 74

   93 ARRAY_FOR_STORE: T_VARIABLE T_LSQR . T_NUMBER T_RSQR

    T_NUMBER  shift, and go to state 123


State 75

   14 VAR_DECLARATION: T_INT VALUE_FOR_STORE T_SEMICOLON .

    $default  reduce using rule 14 (VAR_DECLARATION)


State 76

   16 VAR_DECLARATION: T_INT ARRAY_FOR_STORE T_SEMICOLON .

    $default  reduce using rule 16 (VAR_DECLARATION)


State 77

   18 VAR_DECLARATION: T_VOID VALUE_FOR_STORE T_SEMICOLON .

    $default  reduce using rule 18 (VAR_DECLARATION)


State 78

   59 LOGIC: LOGIC . T_OR LOGIC2
   84 EXPR3: T_LBRACKET LOGIC . T_RBRACKET

    T_RBRACKET  shift, and go to state 124
    T_OR        shift, and go to state 80


State 79

   47 RETURN: T_RETURN LOGIC T_SEMICOLON .

    $default  reduce using rule 47 (RETURN)


State 80

   59 LOGIC: LOGIC T_OR . LOGIC2

    T_LBRACKET  shift, and go to state 35
    T_SUB       shift, and go to state 12
    T_NUMBER    shift, and go to state 13
    T_VARIABLE  shift, and go to state 36

    LOGIC2           go to state 125
    LOGIC3           go to state 39
    LOGIC4           go to state 40
    LOGIC5           go to state 41
    LOGIC6           go to state 42
    LOGIC7           go to state 43
    EXPR             go to state 44
    EXPR2            go to state 45
    EXPR3            go to state 46
    VALUE_WITH_FUNC  go to state 47
    VALUE            go to state 48
    ARRAY            go to state 27
    FUNC_EVOKE       go to state 49


State 81

   61 LOGIC2: LOGIC2 T_AND . LOGIC3

    T_LBRACKET  shift, and go to state 35
    T_SUB       shift, and go to state 12
    T_NUMBER    shift, and go to state 13
    T_VARIABLE  shift, and go to state 36

    LOGIC3           go to state 126
    LOGIC4           go to state 40
    LOGIC5           go to state 41
    LOGIC6           go to state 42
    LOGIC7           go to state 43
    EXPR             go to state 44
    EXPR2            go to state 45
    EXPR3            go to state 46
    VALUE_WITH_FUNC  go to state 47
    VALUE            go to state 48
    ARRAY            go to state 27
    FUNC_EVOKE       go to state 49


State 82

   63 LOGIC3: LOGIC3 T_BITOR . LOGIC4

    T_LBRACKET  shift, and go to state 35
    T_SUB       shift, and go to state 12
    T_NUMBER    shift, and go to state 13
    T_VARIABLE  shift, and go to state 36

    LOGIC4           go to state 127
    LOGIC5           go to state 41
    LOGIC6           go to state 42
    LOGIC7           go to state 43
    EXPR             go to state 44
    EXPR2            go to state 45
    EXPR3            go to state 46
    VALUE_WITH_FUNC  go to state 47
    VALUE            go to state 48
    ARRAY            go to state 27
    FUNC_EVOKE       go to state 49


State 83

   65 LOGIC4: LOGIC4 T_BITXOR . LOGIC5

    T_LBRACKET  shift, and go to state 35
    T_SUB       shift, and go to state 12
    T_NUMBER    shift, and go to state 13
    T_VARIABLE  shift, and go to state 36

    LOGIC5           go to state 128
    LOGIC6           go to state 42
    LOGIC7           go to state 43
    EXPR             go to state 44
    EXPR2            go to state 45
    EXPR3            go to state 46
    VALUE_WITH_FUNC  go to state 47
    VALUE            go to state 48
    ARRAY            go to state 27
    FUNC_EVOKE       go to state 49


State 84

   67 LOGIC5: LOGIC5 T_BITAND . LOGIC6

    T_LBRACKET  shift, and go to state 35
    T_SUB       shift, and go to state 12
    T_NUMBER    shift, and go to state 13
    T_VARIABLE  shift, and go to state 36

    LOGIC6           go to state 129
    LOGIC7           go to state 43
    EXPR             go to state 44
    EXPR2            go to state 45
    EXPR3            go to state 46
    VALUE_WITH_FUNC  go to state 47
    VALUE            go to state 48
    ARRAY            go to state 27
    FUNC_EVOKE       go to state 49


State 85

   69 LOGIC6: LOGIC6 T_EQUAL . LOGIC7

    T_LBRACKET  shift, and go to state 35
    T_SUB       shift, and go to state 12
    T_NUMBER    shift, and go to state 13
    T_VARIABLE  shift, and go to state 36

    LOGIC7           go to state 130
    EXPR             go to state 44
    EXPR2            go to state 45
    EXPR3            go to state 46
    VALUE_WITH_FUNC  go to state 47
    VALUE            go to state 48
    ARRAY            go to state 27
    FUNC_EVOKE       go to state 49


State 86

   70 LOGIC6: LOGIC6 T_NOTEQUAL . LOGIC7

    T_LBRACKET  shift, and go to state 35
    T_SUB       shift, and go to state 12
    T_NUMBER    shift, and go to state 13
    T_VARIABLE  shift, and go to state 36

    LOGIC7           go to state 131
    EXPR             go to state 44
    EXPR2            go to state 45
    EXPR3            go to state 46
    VALUE_WITH_FUNC  go to state 47
    VALUE            go to state 48
    ARRAY            go to state 27
    FUNC_EVOKE       go to state 49


State 87

   74 LOGIC7: LOGIC7 T_LESS . EXPR

    T_LBRACKET  shift, and go to state 35
    T_SUB       shift, and go to state 12
    T_NUMBER    shift, and go to state 13
    T_VARIABLE  shift, and go to state 36

    EXPR             go to state 132
    EXPR2            go to state 45
    EXPR3            go to state 46
    VALUE_WITH_FUNC  go to state 47
    VALUE            go to state 48
    ARRAY            go to state 27
    FUNC_EVOKE       go to state 49


State 88

   75 LOGIC7: LOGIC7 T_EQLT . EXPR

    T_LBRACKET  shift, and go to state 35
    T_SUB       shift, and go to state 12
    T_NUMBER    shift, and go to state 13
    T_VARIABLE  shift, and go to state 36

    EXPR             go to state 133
    EXPR2            go to state 45
    EXPR3            go to state 46
    VALUE_WITH_FUNC  go to state 47
    VALUE            go to state 48
    ARRAY            go to state 27
    FUNC_EVOKE       go to state 49


State 89

   72 LOGIC7: LOGIC7 T_GREATER . EXPR

    T_LBRACKET  shift, and go to state 35
    T_SUB       shift, and go to state 12
    T_NUMBER    shift, and go to state 13
    T_VARIABLE  shift, and go to state 36

    EXPR             go to state 134
    EXPR2            go to state 45
    EXPR3            go to state 46
    VALUE_WITH_FUNC  go to state 47
    VALUE            go to state 48
    ARRAY            go to state 27
    FUNC_EVOKE       go to state 49


State 90

   73 LOGIC7: LOGIC7 T_EQGT . EXPR

    T_LBRACKET  shift, and go to state 35
    T_SUB       shift, and go to state 12
    T_NUMBER    shift, and go to state 13
    T_VARIABLE  shift, and go to state 36

    EXPR             go to state 135
    EXPR2            go to state 45
    EXPR3            go to state 46
    VALUE_WITH_FUNC  go to state 47
    VALUE            go to state 48
    ARRAY            go to state 27
    FUNC_EVOKE       go to state 49


State 91

   77 EXPR: EXPR T_ADD . EXPR2

    T_LBRACKET  shift, and go to state 35
    T_SUB       shift, and go to state 12
    T_NUMBER    shift, and go to state 13
    T_VARIABLE  shift, and go to state 36

    EXPR2            go to state 136
    EXPR3            go to state 46
    VALUE_WITH_FUNC  go to state 47
    VALUE            go to state 48
    ARRAY            go to state 27
    FUNC_EVOKE       go to state 49


State 92

   78 EXPR: EXPR T_SUB . EXPR2

    T_LBRACKET  shift, and go to state 35
    T_SUB       shift, and go to state 12
    T_NUMBER    shift, and go to state 13
    T_VARIABLE  shift, and go to state 36

    EXPR2            go to state 137
    EXPR3            go to state 46
    VALUE_WITH_FUNC  go to state 47
    VALUE            go to state 48
    ARRAY            go to state 27
    FUNC_EVOKE       go to state 49


State 93

   80 EXPR2: EXPR2 T_MULT . EXPR3

    T_LBRACKET  shift, and go to state 35
    T_SUB       shift, and go to state 12
    T_NUMBER    shift, and go to state 13
    T_VARIABLE  shift, and go to state 36

    EXPR3            go to state 138
    VALUE_WITH_FUNC  go to state 47
    VALUE            go to state 48
    ARRAY            go to state 27
    FUNC_EVOKE       go to state 49


State 94

   81 EXPR2: EXPR2 T_DIV . EXPR3

    T_LBRACKET  shift, and go to state 35
    T_SUB       shift, and go to state 12
    T_NUMBER    shift, and go to state 13
    T_VARIABLE  shift, and go to state 36

    EXPR3            go to state 139
    VALUE_WITH_FUNC  go to state 47
    VALUE            go to state 48
    ARRAY            go to state 27
    FUNC_EVOKE       go to state 49


State 95

   82 EXPR2: EXPR2 T_MOD . EXPR3

    T_LBRACKET  shift, and go to state 35
    T_SUB       shift, and go to state 12
    T_NUMBER    shift, and go to state 13
    T_VARIABLE  shift, and go to state 36

    EXPR3            go to state 140
    VALUE_WITH_FUNC  go to state 47
    VALUE            go to state 48
    ARRAY            go to state 27
    FUNC_EVOKE       go to state 49


State 96

   46 JUMP: T_GOTO T_VARIABLE T_SEMICOLON .

    $default  reduce using rule 46 (JUMP)


State 97

   52 IF: T_IF T_LBRACKET LOGIC . T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   53   | T_IF T_LBRACKET LOGIC . T_RBRACKET STATEMENT
   54   | T_IF T_LBRACKET LOGIC . T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET T_ELSE T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   55   | T_IF T_LBRACKET LOGIC . T_RBRACKET STATEMENT T_ELSE T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   56   | T_IF T_LBRACKET LOGIC . T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET T_ELSE STATEMENT
   57   | T_IF T_LBRACKET LOGIC . T_RBRACKET STATEMENT T_ELSE STATEMENT
   59 LOGIC: LOGIC . T_OR LOGIC2

    T_RBRACKET  shift, and go to state 141
    T_OR        shift, and go to state 80


State 98

   49 CONTROL: T_WHILE T_LBRACKET LOGIC . T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   59 LOGIC: LOGIC . T_OR LOGIC2

    T_RBRACKET  shift, and go to state 142
    T_OR        shift, and go to state 80


State 99

   50 CONTROL: T_FOR T_LBRACKET LOGIC . T_SEMICOLON EXPR T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   59 LOGIC: LOGIC . T_OR LOGIC2

    T_SEMICOLON  shift, and go to state 143
    T_OR         shift, and go to state 80


State 100

    9 STATEMENT_LIST: STATEMENT_LIST . STATEMENT
   51 CONTROL: T_DO T_LCURLBRACKET STATEMENT_LIST . T_RCURLBRACKET T_WHILE T_LBRACKET LOGIC T_RBRACKET T_SEMICOLON

    T_RCURLBRACKET  shift, and go to state 144
    T_INT           shift, and go to state 4
    T_VOID          shift, and go to state 5
    T_RETURN        shift, and go to state 6
    T_GOTO          shift, and go to state 7
    T_IF            shift, and go to state 8
    T_WHILE         shift, and go to state 9
    T_FOR           shift, and go to state 10
    T_DO            shift, and go to state 11
    T_SUB           shift, and go to state 12
    T_NUMBER        shift, and go to state 13
    T_VARIABLE      shift, and go to state 14
    T_LABEL         shift, and go to state 15

    STATEMENT         go to state 145
    DECLARATION       go to state 17
    FUNC_DECLARATION  go to state 18
    VAR_DECLARATION   go to state 19
    ASSIGNMENT        go to state 20
    ASSIGN            go to state 21
    JUMP              go to state 22
    RETURN            go to state 23
    CONTROL           go to state 24
    IF                go to state 25
    VALUE             go to state 26
    ARRAY             go to state 27
    VALUE_FOR_STORE   go to state 28
    FUNC_EVOKE        go to state 29


State 101

   91 ARRAY: T_VARIABLE T_LSQR T_NUMBER . T_RSQR

    T_RSQR  shift, and go to state 146


State 102

   29 ASSIGN: VAR_DECLARATION T_ASSIGN EXPR . T_SEMICOLON
   77 EXPR: EXPR . T_ADD EXPR2
   78     | EXPR . T_SUB EXPR2

    T_SEMICOLON  shift, and go to state 147
    T_ADD        shift, and go to state 91
    T_SUB        shift, and go to state 92


State 103

   31 ASSIGN: VAR_DECLARATION T_ADDASSIGN EXPR . T_SEMICOLON
   77 EXPR: EXPR . T_ADD EXPR2
   78     | EXPR . T_SUB EXPR2

    T_SEMICOLON  shift, and go to state 148
    T_ADD        shift, and go to state 91
    T_SUB        shift, and go to state 92


State 104

   33 ASSIGN: VAR_DECLARATION T_SUBASSIGN EXPR . T_SEMICOLON
   77 EXPR: EXPR . T_ADD EXPR2
   78     | EXPR . T_SUB EXPR2

    T_SEMICOLON  shift, and go to state 149
    T_ADD        shift, and go to state 91
    T_SUB        shift, and go to state 92


State 105

   35 ASSIGN: VAR_DECLARATION T_MULTASSIGN EXPR . T_SEMICOLON
   77 EXPR: EXPR . T_ADD EXPR2
   78     | EXPR . T_SUB EXPR2

    T_SEMICOLON  shift, and go to state 150
    T_ADD        shift, and go to state 91
    T_SUB        shift, and go to state 92


State 106

   37 ASSIGN: VAR_DECLARATION T_DIVASSIGN EXPR . T_SEMICOLON
   77 EXPR: EXPR . T_ADD EXPR2
   78     | EXPR . T_SUB EXPR2

    T_SEMICOLON  shift, and go to state 151
    T_ADD        shift, and go to state 91
    T_SUB        shift, and go to state 92


State 107

   39 ASSIGN: VAR_DECLARATION T_MODASSIGN EXPR . T_SEMICOLON
   77 EXPR: EXPR . T_ADD EXPR2
   78     | EXPR . T_SUB EXPR2

    T_SEMICOLON  shift, and go to state 152
    T_ADD        shift, and go to state 91
    T_SUB        shift, and go to state 92


State 108

   25 ARGUMENT_DEC: VAR_DECLARATION .

    $default  reduce using rule 25 (ARGUMENT_DEC)


State 109

   12 FUNC_DECLARATION: VAR_DECLARATION T_LBRACKET ARGUMENT_LIST_DEC . T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   21 ARGUMENT_LIST_DEC: ARGUMENT_LIST_DEC . T_COMMA ARGUMENT_DEC

    T_RBRACKET  shift, and go to state 153
    T_COMMA     shift, and go to state 154


State 110

   20 ARGUMENT_LIST_DEC: ARGUMENT_DEC .

    $default  reduce using rule 20 (ARGUMENT_LIST_DEC)


State 111

   26 ARGUMENT_DEC: VALUE_FOR_STORE .

    $default  reduce using rule 26 (ARGUMENT_DEC)


State 112

   24 ARGUMENT_LIST_CALL: ARGUMENT_LIST_CALL . T_COMMA ARGUMENT_CALL
   94 FUNC_EVOKE: VALUE T_LBRACKET ARGUMENT_LIST_CALL . T_RBRACKET

    T_RBRACKET  shift, and go to state 155
    T_COMMA     shift, and go to state 156


State 113

   23 ARGUMENT_LIST_CALL: ARGUMENT_CALL .

    $default  reduce using rule 23 (ARGUMENT_LIST_CALL)


State 114

   27 ARGUMENT_CALL: VALUE .

    $default  reduce using rule 27 (ARGUMENT_CALL)


State 115

   41 ASSIGN: VALUE T_INCREMENT T_SEMICOLON .

    $default  reduce using rule 41 (ASSIGN)


State 116

   42 ASSIGN: VALUE T_DECREMENT T_SEMICOLON .

    $default  reduce using rule 42 (ASSIGN)


State 117

   30 ASSIGN: VALUE_FOR_STORE T_ASSIGN EXPR . T_SEMICOLON
   77 EXPR: EXPR . T_ADD EXPR2
   78     | EXPR . T_SUB EXPR2

    T_SEMICOLON  shift, and go to state 157
    T_ADD        shift, and go to state 91
    T_SUB        shift, and go to state 92


State 118

   32 ASSIGN: VALUE_FOR_STORE T_ADDASSIGN EXPR . T_SEMICOLON
   77 EXPR: EXPR . T_ADD EXPR2
   78     | EXPR . T_SUB EXPR2

    T_SEMICOLON  shift, and go to state 158
    T_ADD        shift, and go to state 91
    T_SUB        shift, and go to state 92


State 119

   34 ASSIGN: VALUE_FOR_STORE T_SUBASSIGN EXPR . T_SEMICOLON
   77 EXPR: EXPR . T_ADD EXPR2
   78     | EXPR . T_SUB EXPR2

    T_SEMICOLON  shift, and go to state 159
    T_ADD        shift, and go to state 91
    T_SUB        shift, and go to state 92


State 120

   36 ASSIGN: VALUE_FOR_STORE T_MULTASSIGN EXPR . T_SEMICOLON
   77 EXPR: EXPR . T_ADD EXPR2
   78     | EXPR . T_SUB EXPR2

    T_SEMICOLON  shift, and go to state 160
    T_ADD        shift, and go to state 91
    T_SUB        shift, and go to state 92


State 121

   38 ASSIGN: VALUE_FOR_STORE T_DIVASSIGN EXPR . T_SEMICOLON
   77 EXPR: EXPR . T_ADD EXPR2
   78     | EXPR . T_SUB EXPR2

    T_SEMICOLON  shift, and go to state 161
    T_ADD        shift, and go to state 91
    T_SUB        shift, and go to state 92


State 122

   40 ASSIGN: VALUE_FOR_STORE T_MODASSIGN EXPR . T_SEMICOLON
   77 EXPR: EXPR . T_ADD EXPR2
   78     | EXPR . T_SUB EXPR2

    T_SEMICOLON  shift, and go to state 162
    T_ADD        shift, and go to state 91
    T_SUB        shift, and go to state 92


State 123

   93 ARRAY_FOR_STORE: T_VARIABLE T_LSQR T_NUMBER . T_RSQR

    T_RSQR  shift, and go to state 163


State 124

   84 EXPR3: T_LBRACKET LOGIC T_RBRACKET .

    $default  reduce using rule 84 (EXPR3)


State 125

   59 LOGIC: LOGIC T_OR LOGIC2 .
   61 LOGIC2: LOGIC2 . T_AND LOGIC3

    T_AND  shift, and go to state 81

    $default  reduce using rule 59 (LOGIC)


State 126

   61 LOGIC2: LOGIC2 T_AND LOGIC3 .
   63 LOGIC3: LOGIC3 . T_BITOR LOGIC4

    T_BITOR  shift, and go to state 82

    $default  reduce using rule 61 (LOGIC2)


State 127

   63 LOGIC3: LOGIC3 T_BITOR LOGIC4 .
   65 LOGIC4: LOGIC4 . T_BITXOR LOGIC5

    T_BITXOR  shift, and go to state 83

    $default  reduce using rule 63 (LOGIC3)


State 128

   65 LOGIC4: LOGIC4 T_BITXOR LOGIC5 .
   67 LOGIC5: LOGIC5 . T_BITAND LOGIC6

    T_BITAND  shift, and go to state 84

    $default  reduce using rule 65 (LOGIC4)


State 129

   67 LOGIC5: LOGIC5 T_BITAND LOGIC6 .
   69 LOGIC6: LOGIC6 . T_EQUAL LOGIC7
   70       | LOGIC6 . T_NOTEQUAL LOGIC7

    T_EQUAL     shift, and go to state 85
    T_NOTEQUAL  shift, and go to state 86

    $default  reduce using rule 67 (LOGIC5)


State 130

   69 LOGIC6: LOGIC6 T_EQUAL LOGIC7 .
   72 LOGIC7: LOGIC7 . T_GREATER EXPR
   73       | LOGIC7 . T_EQGT EXPR
   74       | LOGIC7 . T_LESS EXPR
   75       | LOGIC7 . T_EQLT EXPR

    T_LESS     shift, and go to state 87
    T_EQLT     shift, and go to state 88
    T_GREATER  shift, and go to state 89
    T_EQGT     shift, and go to state 90

    $default  reduce using rule 69 (LOGIC6)


State 131

   70 LOGIC6: LOGIC6 T_NOTEQUAL LOGIC7 .
   72 LOGIC7: LOGIC7 . T_GREATER EXPR
   73       | LOGIC7 . T_EQGT EXPR
   74       | LOGIC7 . T_LESS EXPR
   75       | LOGIC7 . T_EQLT EXPR

    T_LESS     shift, and go to state 87
    T_EQLT     shift, and go to state 88
    T_GREATER  shift, and go to state 89
    T_EQGT     shift, and go to state 90

    $default  reduce using rule 70 (LOGIC6)


State 132

   74 LOGIC7: LOGIC7 T_LESS EXPR .
   77 EXPR: EXPR . T_ADD EXPR2
   78     | EXPR . T_SUB EXPR2

    T_ADD  shift, and go to state 91
    T_SUB  shift, and go to state 92

    $default  reduce using rule 74 (LOGIC7)


State 133

   75 LOGIC7: LOGIC7 T_EQLT EXPR .
   77 EXPR: EXPR . T_ADD EXPR2
   78     | EXPR . T_SUB EXPR2

    T_ADD  shift, and go to state 91
    T_SUB  shift, and go to state 92

    $default  reduce using rule 75 (LOGIC7)


State 134

   72 LOGIC7: LOGIC7 T_GREATER EXPR .
   77 EXPR: EXPR . T_ADD EXPR2
   78     | EXPR . T_SUB EXPR2

    T_ADD  shift, and go to state 91
    T_SUB  shift, and go to state 92

    $default  reduce using rule 72 (LOGIC7)


State 135

   73 LOGIC7: LOGIC7 T_EQGT EXPR .
   77 EXPR: EXPR . T_ADD EXPR2
   78     | EXPR . T_SUB EXPR2

    T_ADD  shift, and go to state 91
    T_SUB  shift, and go to state 92

    $default  reduce using rule 73 (LOGIC7)


State 136

   77 EXPR: EXPR T_ADD EXPR2 .
   80 EXPR2: EXPR2 . T_MULT EXPR3
   81      | EXPR2 . T_DIV EXPR3
   82      | EXPR2 . T_MOD EXPR3

    T_MULT  shift, and go to state 93
    T_DIV   shift, and go to state 94
    T_MOD   shift, and go to state 95

    $default  reduce using rule 77 (EXPR)


State 137

   78 EXPR: EXPR T_SUB EXPR2 .
   80 EXPR2: EXPR2 . T_MULT EXPR3
   81      | EXPR2 . T_DIV EXPR3
   82      | EXPR2 . T_MOD EXPR3

    T_MULT  shift, and go to state 93
    T_DIV   shift, and go to state 94
    T_MOD   shift, and go to state 95

    $default  reduce using rule 78 (EXPR)


State 138

   80 EXPR2: EXPR2 T_MULT EXPR3 .

    $default  reduce using rule 80 (EXPR2)


State 139

   81 EXPR2: EXPR2 T_DIV EXPR3 .

    $default  reduce using rule 81 (EXPR2)


State 140

   82 EXPR2: EXPR2 T_MOD EXPR3 .

    $default  reduce using rule 82 (EXPR2)


State 141

   52 IF: T_IF T_LBRACKET LOGIC T_RBRACKET . T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   53   | T_IF T_LBRACKET LOGIC T_RBRACKET . STATEMENT
   54   | T_IF T_LBRACKET LOGIC T_RBRACKET . T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET T_ELSE T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   55   | T_IF T_LBRACKET LOGIC T_RBRACKET . STATEMENT T_ELSE T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   56   | T_IF T_LBRACKET LOGIC T_RBRACKET . T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET T_ELSE STATEMENT
   57   | T_IF T_LBRACKET LOGIC T_RBRACKET . STATEMENT T_ELSE STATEMENT

    T_LCURLBRACKET  shift, and go to state 164
    T_INT           shift, and go to state 4
    T_VOID          shift, and go to state 5
    T_RETURN        shift, and go to state 6
    T_GOTO          shift, and go to state 7
    T_IF            shift, and go to state 8
    T_WHILE         shift, and go to state 9
    T_FOR           shift, and go to state 10
    T_DO            shift, and go to state 11
    T_SUB           shift, and go to state 12
    T_NUMBER        shift, and go to state 13
    T_VARIABLE      shift, and go to state 14
    T_LABEL         shift, and go to state 15

    STATEMENT         go to state 165
    DECLARATION       go to state 17
    FUNC_DECLARATION  go to state 18
    VAR_DECLARATION   go to state 19
    ASSIGNMENT        go to state 20
    ASSIGN            go to state 21
    JUMP              go to state 22
    RETURN            go to state 23
    CONTROL           go to state 24
    IF                go to state 25
    VALUE             go to state 26
    ARRAY             go to state 27
    VALUE_FOR_STORE   go to state 28
    FUNC_EVOKE        go to state 29


State 142

   49 CONTROL: T_WHILE T_LBRACKET LOGIC T_RBRACKET . T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET

    T_LCURLBRACKET  shift, and go to state 166


State 143

   50 CONTROL: T_FOR T_LBRACKET LOGIC T_SEMICOLON . EXPR T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET

    T_LBRACKET  shift, and go to state 35
    T_SUB       shift, and go to state 12
    T_NUMBER    shift, and go to state 13
    T_VARIABLE  shift, and go to state 36

    EXPR             go to state 167
    EXPR2            go to state 45
    EXPR3            go to state 46
    VALUE_WITH_FUNC  go to state 47
    VALUE            go to state 48
    ARRAY            go to state 27
    FUNC_EVOKE       go to state 49


State 144

   51 CONTROL: T_DO T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET . T_WHILE T_LBRACKET LOGIC T_RBRACKET T_SEMICOLON

    T_WHILE  shift, and go to state 168


State 145

    9 STATEMENT_LIST: STATEMENT_LIST STATEMENT .

    $default  reduce using rule 9 (STATEMENT_LIST)


State 146

   91 ARRAY: T_VARIABLE T_LSQR T_NUMBER T_RSQR .

    $default  reduce using rule 91 (ARRAY)


State 147

   29 ASSIGN: VAR_DECLARATION T_ASSIGN EXPR T_SEMICOLON .

    $default  reduce using rule 29 (ASSIGN)


State 148

   31 ASSIGN: VAR_DECLARATION T_ADDASSIGN EXPR T_SEMICOLON .

    $default  reduce using rule 31 (ASSIGN)


State 149

   33 ASSIGN: VAR_DECLARATION T_SUBASSIGN EXPR T_SEMICOLON .

    $default  reduce using rule 33 (ASSIGN)


State 150

   35 ASSIGN: VAR_DECLARATION T_MULTASSIGN EXPR T_SEMICOLON .

    $default  reduce using rule 35 (ASSIGN)


State 151

   37 ASSIGN: VAR_DECLARATION T_DIVASSIGN EXPR T_SEMICOLON .

    $default  reduce using rule 37 (ASSIGN)


State 152

   39 ASSIGN: VAR_DECLARATION T_MODASSIGN EXPR T_SEMICOLON .

    $default  reduce using rule 39 (ASSIGN)


State 153

   12 FUNC_DECLARATION: VAR_DECLARATION T_LBRACKET ARGUMENT_LIST_DEC T_RBRACKET . T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET

    T_LCURLBRACKET  shift, and go to state 169


State 154

   21 ARGUMENT_LIST_DEC: ARGUMENT_LIST_DEC T_COMMA . ARGUMENT_DEC

    T_INT       shift, and go to state 4
    T_VOID      shift, and go to state 5
    T_VARIABLE  shift, and go to state 33

    VAR_DECLARATION  go to state 108
    ARGUMENT_DEC     go to state 170
    VALUE_FOR_STORE  go to state 111


State 155

   94 FUNC_EVOKE: VALUE T_LBRACKET ARGUMENT_LIST_CALL T_RBRACKET .

    $default  reduce using rule 94 (FUNC_EVOKE)


State 156

   24 ARGUMENT_LIST_CALL: ARGUMENT_LIST_CALL T_COMMA . ARGUMENT_CALL

    T_SUB       shift, and go to state 12
    T_NUMBER    shift, and go to state 13
    T_VARIABLE  shift, and go to state 36

    ARGUMENT_CALL  go to state 171
    VALUE          go to state 114
    ARRAY          go to state 27


State 157

   30 ASSIGN: VALUE_FOR_STORE T_ASSIGN EXPR T_SEMICOLON .

    $default  reduce using rule 30 (ASSIGN)


State 158

   32 ASSIGN: VALUE_FOR_STORE T_ADDASSIGN EXPR T_SEMICOLON .

    $default  reduce using rule 32 (ASSIGN)


State 159

   34 ASSIGN: VALUE_FOR_STORE T_SUBASSIGN EXPR T_SEMICOLON .

    $default  reduce using rule 34 (ASSIGN)


State 160

   36 ASSIGN: VALUE_FOR_STORE T_MULTASSIGN EXPR T_SEMICOLON .

    $default  reduce using rule 36 (ASSIGN)


State 161

   38 ASSIGN: VALUE_FOR_STORE T_DIVASSIGN EXPR T_SEMICOLON .

    $default  reduce using rule 38 (ASSIGN)


State 162

   40 ASSIGN: VALUE_FOR_STORE T_MODASSIGN EXPR T_SEMICOLON .

    $default  reduce using rule 40 (ASSIGN)


State 163

   93 ARRAY_FOR_STORE: T_VARIABLE T_LSQR T_NUMBER T_RSQR .

    $default  reduce using rule 93 (ARRAY_FOR_STORE)


State 164

   52 IF: T_IF T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET . STATEMENT_LIST T_RCURLBRACKET
   54   | T_IF T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET . STATEMENT_LIST T_RCURLBRACKET T_ELSE T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   56   | T_IF T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET . STATEMENT_LIST T_RCURLBRACKET T_ELSE STATEMENT

    $default  reduce using rule 8 (STATEMENT_LIST)

    STATEMENT_LIST  go to state 172


State 165

   53 IF: T_IF T_LBRACKET LOGIC T_RBRACKET STATEMENT .
   55   | T_IF T_LBRACKET LOGIC T_RBRACKET STATEMENT . T_ELSE T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   57   | T_IF T_LBRACKET LOGIC T_RBRACKET STATEMENT . T_ELSE STATEMENT

    T_ELSE  shift, and go to state 173

    T_ELSE    [reduce using rule 53 (IF)]
    $default  reduce using rule 53 (IF)


State 166

   49 CONTROL: T_WHILE T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET . STATEMENT_LIST T_RCURLBRACKET

    $default  reduce using rule 8 (STATEMENT_LIST)

    STATEMENT_LIST  go to state 174


State 167

   50 CONTROL: T_FOR T_LBRACKET LOGIC T_SEMICOLON EXPR . T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   77 EXPR: EXPR . T_ADD EXPR2
   78     | EXPR . T_SUB EXPR2

    T_RBRACKET  shift, and go to state 175
    T_ADD       shift, and go to state 91
    T_SUB       shift, and go to state 92


State 168

   51 CONTROL: T_DO T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET T_WHILE . T_LBRACKET LOGIC T_RBRACKET T_SEMICOLON

    T_LBRACKET  shift, and go to state 176


State 169

   12 FUNC_DECLARATION: VAR_DECLARATION T_LBRACKET ARGUMENT_LIST_DEC T_RBRACKET T_LCURLBRACKET . STATEMENT_LIST T_RCURLBRACKET

    $default  reduce using rule 8 (STATEMENT_LIST)

    STATEMENT_LIST  go to state 177


State 170

   21 ARGUMENT_LIST_DEC: ARGUMENT_LIST_DEC T_COMMA ARGUMENT_DEC .

    $default  reduce using rule 21 (ARGUMENT_LIST_DEC)


State 171

   24 ARGUMENT_LIST_CALL: ARGUMENT_LIST_CALL T_COMMA ARGUMENT_CALL .

    $default  reduce using rule 24 (ARGUMENT_LIST_CALL)


State 172

    9 STATEMENT_LIST: STATEMENT_LIST . STATEMENT
   52 IF: T_IF T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST . T_RCURLBRACKET
   54   | T_IF T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST . T_RCURLBRACKET T_ELSE T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   56   | T_IF T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST . T_RCURLBRACKET T_ELSE STATEMENT

    T_RCURLBRACKET  shift, and go to state 178
    T_INT           shift, and go to state 4
    T_VOID          shift, and go to state 5
    T_RETURN        shift, and go to state 6
    T_GOTO          shift, and go to state 7
    T_IF            shift, and go to state 8
    T_WHILE         shift, and go to state 9
    T_FOR           shift, and go to state 10
    T_DO            shift, and go to state 11
    T_SUB           shift, and go to state 12
    T_NUMBER        shift, and go to state 13
    T_VARIABLE      shift, and go to state 14
    T_LABEL         shift, and go to state 15

    STATEMENT         go to state 145
    DECLARATION       go to state 17
    FUNC_DECLARATION  go to state 18
    VAR_DECLARATION   go to state 19
    ASSIGNMENT        go to state 20
    ASSIGN            go to state 21
    JUMP              go to state 22
    RETURN            go to state 23
    CONTROL           go to state 24
    IF                go to state 25
    VALUE             go to state 26
    ARRAY             go to state 27
    VALUE_FOR_STORE   go to state 28
    FUNC_EVOKE        go to state 29


State 173

   55 IF: T_IF T_LBRACKET LOGIC T_RBRACKET STATEMENT T_ELSE . T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   57   | T_IF T_LBRACKET LOGIC T_RBRACKET STATEMENT T_ELSE . STATEMENT

    T_LCURLBRACKET  shift, and go to state 179
    T_INT           shift, and go to state 4
    T_VOID          shift, and go to state 5
    T_RETURN        shift, and go to state 6
    T_GOTO          shift, and go to state 7
    T_IF            shift, and go to state 8
    T_WHILE         shift, and go to state 9
    T_FOR           shift, and go to state 10
    T_DO            shift, and go to state 11
    T_SUB           shift, and go to state 12
    T_NUMBER        shift, and go to state 13
    T_VARIABLE      shift, and go to state 14
    T_LABEL         shift, and go to state 15

    STATEMENT         go to state 180
    DECLARATION       go to state 17
    FUNC_DECLARATION  go to state 18
    VAR_DECLARATION   go to state 19
    ASSIGNMENT        go to state 20
    ASSIGN            go to state 21
    JUMP              go to state 22
    RETURN            go to state 23
    CONTROL           go to state 24
    IF                go to state 25
    VALUE             go to state 26
    ARRAY             go to state 27
    VALUE_FOR_STORE   go to state 28
    FUNC_EVOKE        go to state 29


State 174

    9 STATEMENT_LIST: STATEMENT_LIST . STATEMENT
   49 CONTROL: T_WHILE T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST . T_RCURLBRACKET

    T_RCURLBRACKET  shift, and go to state 181
    T_INT           shift, and go to state 4
    T_VOID          shift, and go to state 5
    T_RETURN        shift, and go to state 6
    T_GOTO          shift, and go to state 7
    T_IF            shift, and go to state 8
    T_WHILE         shift, and go to state 9
    T_FOR           shift, and go to state 10
    T_DO            shift, and go to state 11
    T_SUB           shift, and go to state 12
    T_NUMBER        shift, and go to state 13
    T_VARIABLE      shift, and go to state 14
    T_LABEL         shift, and go to state 15

    STATEMENT         go to state 145
    DECLARATION       go to state 17
    FUNC_DECLARATION  go to state 18
    VAR_DECLARATION   go to state 19
    ASSIGNMENT        go to state 20
    ASSIGN            go to state 21
    JUMP              go to state 22
    RETURN            go to state 23
    CONTROL           go to state 24
    IF                go to state 25
    VALUE             go to state 26
    ARRAY             go to state 27
    VALUE_FOR_STORE   go to state 28
    FUNC_EVOKE        go to state 29


State 175

   50 CONTROL: T_FOR T_LBRACKET LOGIC T_SEMICOLON EXPR T_RBRACKET . T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET

    T_LCURLBRACKET  shift, and go to state 182


State 176

   51 CONTROL: T_DO T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET T_WHILE T_LBRACKET . LOGIC T_RBRACKET T_SEMICOLON

    T_LBRACKET  shift, and go to state 35
    T_SUB       shift, and go to state 12
    T_NUMBER    shift, and go to state 13
    T_VARIABLE  shift, and go to state 36

    LOGIC            go to state 183
    LOGIC2           go to state 38
    LOGIC3           go to state 39
    LOGIC4           go to state 40
    LOGIC5           go to state 41
    LOGIC6           go to state 42
    LOGIC7           go to state 43
    EXPR             go to state 44
    EXPR2            go to state 45
    EXPR3            go to state 46
    VALUE_WITH_FUNC  go to state 47
    VALUE            go to state 48
    ARRAY            go to state 27
    FUNC_EVOKE       go to state 49


State 177

    9 STATEMENT_LIST: STATEMENT_LIST . STATEMENT
   12 FUNC_DECLARATION: VAR_DECLARATION T_LBRACKET ARGUMENT_LIST_DEC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST . T_RCURLBRACKET

    T_RCURLBRACKET  shift, and go to state 184
    T_INT           shift, and go to state 4
    T_VOID          shift, and go to state 5
    T_RETURN        shift, and go to state 6
    T_GOTO          shift, and go to state 7
    T_IF            shift, and go to state 8
    T_WHILE         shift, and go to state 9
    T_FOR           shift, and go to state 10
    T_DO            shift, and go to state 11
    T_SUB           shift, and go to state 12
    T_NUMBER        shift, and go to state 13
    T_VARIABLE      shift, and go to state 14
    T_LABEL         shift, and go to state 15

    STATEMENT         go to state 145
    DECLARATION       go to state 17
    FUNC_DECLARATION  go to state 18
    VAR_DECLARATION   go to state 19
    ASSIGNMENT        go to state 20
    ASSIGN            go to state 21
    JUMP              go to state 22
    RETURN            go to state 23
    CONTROL           go to state 24
    IF                go to state 25
    VALUE             go to state 26
    ARRAY             go to state 27
    VALUE_FOR_STORE   go to state 28
    FUNC_EVOKE        go to state 29


State 178

   52 IF: T_IF T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET .
   54   | T_IF T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET . T_ELSE T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   56   | T_IF T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET . T_ELSE STATEMENT

    T_ELSE  shift, and go to state 185

    T_ELSE    [reduce using rule 52 (IF)]
    $default  reduce using rule 52 (IF)


State 179

   55 IF: T_IF T_LBRACKET LOGIC T_RBRACKET STATEMENT T_ELSE T_LCURLBRACKET . STATEMENT_LIST T_RCURLBRACKET

    $default  reduce using rule 8 (STATEMENT_LIST)

    STATEMENT_LIST  go to state 186


State 180

   57 IF: T_IF T_LBRACKET LOGIC T_RBRACKET STATEMENT T_ELSE STATEMENT .

    $default  reduce using rule 57 (IF)


State 181

   49 CONTROL: T_WHILE T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET .

    $default  reduce using rule 49 (CONTROL)


State 182

   50 CONTROL: T_FOR T_LBRACKET LOGIC T_SEMICOLON EXPR T_RBRACKET T_LCURLBRACKET . STATEMENT_LIST T_RCURLBRACKET

    $default  reduce using rule 8 (STATEMENT_LIST)

    STATEMENT_LIST  go to state 187


State 183

   51 CONTROL: T_DO T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET T_WHILE T_LBRACKET LOGIC . T_RBRACKET T_SEMICOLON
   59 LOGIC: LOGIC . T_OR LOGIC2

    T_RBRACKET  shift, and go to state 188
    T_OR        shift, and go to state 80


State 184

   12 FUNC_DECLARATION: VAR_DECLARATION T_LBRACKET ARGUMENT_LIST_DEC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET .

    $default  reduce using rule 12 (FUNC_DECLARATION)


State 185

   54 IF: T_IF T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET T_ELSE . T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   56   | T_IF T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET T_ELSE . STATEMENT

    T_LCURLBRACKET  shift, and go to state 189
    T_INT           shift, and go to state 4
    T_VOID          shift, and go to state 5
    T_RETURN        shift, and go to state 6
    T_GOTO          shift, and go to state 7
    T_IF            shift, and go to state 8
    T_WHILE         shift, and go to state 9
    T_FOR           shift, and go to state 10
    T_DO            shift, and go to state 11
    T_SUB           shift, and go to state 12
    T_NUMBER        shift, and go to state 13
    T_VARIABLE      shift, and go to state 14
    T_LABEL         shift, and go to state 15

    STATEMENT         go to state 190
    DECLARATION       go to state 17
    FUNC_DECLARATION  go to state 18
    VAR_DECLARATION   go to state 19
    ASSIGNMENT        go to state 20
    ASSIGN            go to state 21
    JUMP              go to state 22
    RETURN            go to state 23
    CONTROL           go to state 24
    IF                go to state 25
    VALUE             go to state 26
    ARRAY             go to state 27
    VALUE_FOR_STORE   go to state 28
    FUNC_EVOKE        go to state 29


State 186

    9 STATEMENT_LIST: STATEMENT_LIST . STATEMENT
   55 IF: T_IF T_LBRACKET LOGIC T_RBRACKET STATEMENT T_ELSE T_LCURLBRACKET STATEMENT_LIST . T_RCURLBRACKET

    T_RCURLBRACKET  shift, and go to state 191
    T_INT           shift, and go to state 4
    T_VOID          shift, and go to state 5
    T_RETURN        shift, and go to state 6
    T_GOTO          shift, and go to state 7
    T_IF            shift, and go to state 8
    T_WHILE         shift, and go to state 9
    T_FOR           shift, and go to state 10
    T_DO            shift, and go to state 11
    T_SUB           shift, and go to state 12
    T_NUMBER        shift, and go to state 13
    T_VARIABLE      shift, and go to state 14
    T_LABEL         shift, and go to state 15

    STATEMENT         go to state 145
    DECLARATION       go to state 17
    FUNC_DECLARATION  go to state 18
    VAR_DECLARATION   go to state 19
    ASSIGNMENT        go to state 20
    ASSIGN            go to state 21
    JUMP              go to state 22
    RETURN            go to state 23
    CONTROL           go to state 24
    IF                go to state 25
    VALUE             go to state 26
    ARRAY             go to state 27
    VALUE_FOR_STORE   go to state 28
    FUNC_EVOKE        go to state 29


State 187

    9 STATEMENT_LIST: STATEMENT_LIST . STATEMENT
   50 CONTROL: T_FOR T_LBRACKET LOGIC T_SEMICOLON EXPR T_RBRACKET T_LCURLBRACKET STATEMENT_LIST . T_RCURLBRACKET

    T_RCURLBRACKET  shift, and go to state 192
    T_INT           shift, and go to state 4
    T_VOID          shift, and go to state 5
    T_RETURN        shift, and go to state 6
    T_GOTO          shift, and go to state 7
    T_IF            shift, and go to state 8
    T_WHILE         shift, and go to state 9
    T_FOR           shift, and go to state 10
    T_DO            shift, and go to state 11
    T_SUB           shift, and go to state 12
    T_NUMBER        shift, and go to state 13
    T_VARIABLE      shift, and go to state 14
    T_LABEL         shift, and go to state 15

    STATEMENT         go to state 145
    DECLARATION       go to state 17
    FUNC_DECLARATION  go to state 18
    VAR_DECLARATION   go to state 19
    ASSIGNMENT        go to state 20
    ASSIGN            go to state 21
    JUMP              go to state 22
    RETURN            go to state 23
    CONTROL           go to state 24
    IF                go to state 25
    VALUE             go to state 26
    ARRAY             go to state 27
    VALUE_FOR_STORE   go to state 28
    FUNC_EVOKE        go to state 29


State 188

   51 CONTROL: T_DO T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET T_WHILE T_LBRACKET LOGIC T_RBRACKET . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 193


State 189

   54 IF: T_IF T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET T_ELSE T_LCURLBRACKET . STATEMENT_LIST T_RCURLBRACKET

    $default  reduce using rule 8 (STATEMENT_LIST)

    STATEMENT_LIST  go to state 194


State 190

   56 IF: T_IF T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET T_ELSE STATEMENT .

    $default  reduce using rule 56 (IF)


State 191

   55 IF: T_IF T_LBRACKET LOGIC T_RBRACKET STATEMENT T_ELSE T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET .

    $default  reduce using rule 55 (IF)


State 192

   50 CONTROL: T_FOR T_LBRACKET LOGIC T_SEMICOLON EXPR T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET .

    $default  reduce using rule 50 (CONTROL)


State 193

   51 CONTROL: T_DO T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET T_WHILE T_LBRACKET LOGIC T_RBRACKET T_SEMICOLON .

    $default  reduce using rule 51 (CONTROL)


State 194

    9 STATEMENT_LIST: STATEMENT_LIST . STATEMENT
   54 IF: T_IF T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET T_ELSE T_LCURLBRACKET STATEMENT_LIST . T_RCURLBRACKET

    T_RCURLBRACKET  shift, and go to state 195
    T_INT           shift, and go to state 4
    T_VOID          shift, and go to state 5
    T_RETURN        shift, and go to state 6
    T_GOTO          shift, and go to state 7
    T_IF            shift, and go to state 8
    T_WHILE         shift, and go to state 9
    T_FOR           shift, and go to state 10
    T_DO            shift, and go to state 11
    T_SUB           shift, and go to state 12
    T_NUMBER        shift, and go to state 13
    T_VARIABLE      shift, and go to state 14
    T_LABEL         shift, and go to state 15

    STATEMENT         go to state 145
    DECLARATION       go to state 17
    FUNC_DECLARATION  go to state 18
    VAR_DECLARATION   go to state 19
    ASSIGNMENT        go to state 20
    ASSIGN            go to state 21
    JUMP              go to state 22
    RETURN            go to state 23
    CONTROL           go to state 24
    IF                go to state 25
    VALUE             go to state 26
    ARRAY             go to state 27
    VALUE_FOR_STORE   go to state 28
    FUNC_EVOKE        go to state 29


State 195

   54 IF: T_IF T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET T_ELSE T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET .

    $default  reduce using rule 54 (IF)
