Terminals unused in grammar

   T_COLON


State 52 conflicts: 1 shift/reduce
State 104 conflicts: 1 shift/reduce
State 113 conflicts: 1 shift/reduce


Grammar

    0 $accept: ROOT $end

    1 ROOT: PROGRAM

    2 PROGRAM: %empty
    3        | PROGRAM STATEMENT

    4 STATEMENT: DECLARATION
    5          | ASSIGNMENT
    6          | JUMP
    7          | CONTROL

    8 STATEMENT_LIST: %empty
    9               | STATEMENT_LIST STATEMENT

   10 DECLARATION: FUNC_DECLARATION
   11            | VAR_DECLARATION

   12 FUNC_DECLARATION: VAR_DECLARATION T_LBRACKET ARGUMENT_LIST_DEC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET

   13 VAR_DECLARATION: T_INT VALUE_FOR_STORE
   14                | T_INT VALUE_FOR_STORE T_SEMICOLON
   15                | T_VOID VALUE_FOR_STORE
   16                | T_VOID VALUE_FOR_STORE T_SEMICOLON

   17 ARGUMENT_LIST_DEC: %empty
   18                  | ARGUMENT_DEC
   19                  | ARGUMENT_LIST_DEC T_COMMA ARGUMENT_DEC

   20 ARGUMENT_LIST_CALL: %empty
   21                   | ARGUMENT_CALL
   22                   | ARGUMENT_LIST_CALL T_COMMA ARGUMENT_CALL

   23 ARGUMENT_DEC: VAR_DECLARATION
   24             | VALUE_FOR_STORE

   25 ARGUMENT_CALL: VALUE

   26 ASSIGNMENT: ASSIGN

   27 ASSIGN: VAR_DECLARATION T_ASSIGN EXPR T_SEMICOLON
   28       | VALUE_FOR_STORE T_ASSIGN EXPR T_SEMICOLON

   29 JUMP: RETURN
   30     | FUNC_EVOKE T_SEMICOLON

   31 RETURN: T_RETURN LOGIC T_SEMICOLON

   32 CONTROL: IF
   33        | T_WHILE T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET

   34 IF: T_IF T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   35   | T_IF T_LBRACKET LOGIC T_RBRACKET STATEMENT
   36   | T_IF T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET T_ELSE T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   37   | T_IF T_LBRACKET LOGIC T_RBRACKET STATEMENT T_ELSE T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   38   | T_IF T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET T_ELSE STATEMENT
   39   | T_IF T_LBRACKET LOGIC T_RBRACKET STATEMENT T_ELSE STATEMENT

   40 LOGIC: LOGIC2
   41      | LOGIC T_OR LOGIC2

   42 LOGIC2: LOGIC3
   43       | LOGIC2 T_AND LOGIC3

   44 LOGIC3: LOGIC4
   45       | LOGIC3 T_EQUAL LOGIC4
   46       | LOGIC3 T_NOTEQUAL LOGIC4

   47 LOGIC4: LOGIC5
   48       | LOGIC4 T_GREATER LOGIC5
   49       | LOGIC4 T_EQGT LOGIC5
   50       | LOGIC4 T_LESS LOGIC5
   51       | LOGIC4 T_EQLT LOGIC5

   52 LOGIC5: EXPR
   53       | T_LBRACKET LOGIC T_RBRACKET

   54 EXPR: EXPR2
   55     | EXPR T_ADD EXPR2
   56     | EXPR T_SUB EXPR2

   57 EXPR2: EXPR3
   58      | EXPR2 T_MULT EXPR3
   59      | EXPR2 T_DIV EXPR3
   60      | EXPR2 T_MOD EXPR3

   61 EXPR3: VALUE_WITH_FUNC
   62      | T_LBRACKET EXPR T_RBRACKET

   63 VALUE_WITH_FUNC: VALUE
   64                | FUNC_EVOKE

   65 VALUE: T_NUMBER
   66      | T_SUB T_NUMBER
   67      | T_VARIABLE

   68 VALUE_FOR_STORE: T_VARIABLE

   69 FUNC_EVOKE: VALUE T_LBRACKET ARGUMENT_LIST_CALL T_RBRACKET


Terminals, with rules where they appear

$end (0) 0
error (256)
T_ASSIGN (258) 27 28
T_LBRACKET (259) 12 33 34 35 36 37 38 39 53 62 69
T_RBRACKET (260) 12 33 34 35 36 37 38 39 53 62 69
T_LCURLBRACKET (261) 12 33 34 36 37 38
T_RCURLBRACKET (262) 12 33 34 36 37 38
T_SEMICOLON (263) 14 16 27 28 30 31
T_COLON (264)
T_COMMA (265) 19 22
T_INT (266) 13 14
T_VOID (267) 15 16
T_RETURN (268) 31
T_IF (269) 34 35 36 37 38 39
T_ELSE (270) 36 37 38 39
T_WHILE (271) 33
T_AND (272) 43
T_OR (273) 41
T_ADD (274) 55
T_SUB (275) 56 66
T_MULT (276) 58
T_DIV (277) 59
T_MOD (278) 60
T_EQUAL (279) 45
T_NOTEQUAL (280) 46
T_LESS (281) 50
T_EQLT (282) 51
T_GREATER (283) 48
T_EQGT (284) 49
T_NUMBER (285) 65 66
T_VARIABLE (286) 67 68


Nonterminals, with rules where they appear

$accept (32)
    on left: 0
ROOT (33)
    on left: 1, on right: 0
PROGRAM (34)
    on left: 2 3, on right: 1 3
STATEMENT (35)
    on left: 4 5 6 7, on right: 3 9 35 37 38 39
STATEMENT_LIST (36)
    on left: 8 9, on right: 9 12 33 34 36 37 38
DECLARATION (37)
    on left: 10 11, on right: 4
FUNC_DECLARATION (38)
    on left: 12, on right: 10
VAR_DECLARATION (39)
    on left: 13 14 15 16, on right: 11 12 23 27
ARGUMENT_LIST_DEC (40)
    on left: 17 18 19, on right: 12 19
ARGUMENT_LIST_CALL (41)
    on left: 20 21 22, on right: 22 69
ARGUMENT_DEC (42)
    on left: 23 24, on right: 18 19
ARGUMENT_CALL (43)
    on left: 25, on right: 21 22
ASSIGNMENT (44)
    on left: 26, on right: 5
ASSIGN (45)
    on left: 27 28, on right: 26
JUMP (46)
    on left: 29 30, on right: 6
RETURN (47)
    on left: 31, on right: 29
CONTROL (48)
    on left: 32 33, on right: 7
IF (49)
    on left: 34 35 36 37 38 39, on right: 32
LOGIC (50)
    on left: 40 41, on right: 31 33 34 35 36 37 38 39 41 53
LOGIC2 (51)
    on left: 42 43, on right: 40 41 43
LOGIC3 (52)
    on left: 44 45 46, on right: 42 43 45 46
LOGIC4 (53)
    on left: 47 48 49 50 51, on right: 44 45 46 48 49 50 51
LOGIC5 (54)
    on left: 52 53, on right: 47 48 49 50 51
EXPR (55)
    on left: 54 55 56, on right: 27 28 52 55 56 62
EXPR2 (56)
    on left: 57 58 59 60, on right: 54 55 56 58 59 60
EXPR3 (57)
    on left: 61 62, on right: 57 58 59 60
VALUE_WITH_FUNC (58)
    on left: 63 64, on right: 61
VALUE (59)
    on left: 65 66 67, on right: 25 63 69
VALUE_FOR_STORE (60)
    on left: 68, on right: 13 14 15 16 24 28
FUNC_EVOKE (61)
    on left: 69, on right: 30 64


State 0

    0 $accept: . ROOT $end

    $default  reduce using rule 2 (PROGRAM)

    ROOT     go to state 1
    PROGRAM  go to state 2


State 1

    0 $accept: ROOT . $end

    $end  shift, and go to state 3


State 2

    1 ROOT: PROGRAM .
    3 PROGRAM: PROGRAM . STATEMENT

    T_INT       shift, and go to state 4
    T_VOID      shift, and go to state 5
    T_RETURN    shift, and go to state 6
    T_IF        shift, and go to state 7
    T_WHILE     shift, and go to state 8
    T_SUB       shift, and go to state 9
    T_NUMBER    shift, and go to state 10
    T_VARIABLE  shift, and go to state 11

    $default  reduce using rule 1 (ROOT)

    STATEMENT         go to state 12
    DECLARATION       go to state 13
    FUNC_DECLARATION  go to state 14
    VAR_DECLARATION   go to state 15
    ASSIGNMENT        go to state 16
    ASSIGN            go to state 17
    JUMP              go to state 18
    RETURN            go to state 19
    CONTROL           go to state 20
    IF                go to state 21
    VALUE             go to state 22
    VALUE_FOR_STORE   go to state 23
    FUNC_EVOKE        go to state 24


State 3

    0 $accept: ROOT $end .

    $default  accept


State 4

   13 VAR_DECLARATION: T_INT . VALUE_FOR_STORE
   14                | T_INT . VALUE_FOR_STORE T_SEMICOLON

    T_VARIABLE  shift, and go to state 25

    VALUE_FOR_STORE  go to state 26


State 5

   15 VAR_DECLARATION: T_VOID . VALUE_FOR_STORE
   16                | T_VOID . VALUE_FOR_STORE T_SEMICOLON

    T_VARIABLE  shift, and go to state 25

    VALUE_FOR_STORE  go to state 27


State 6

   31 RETURN: T_RETURN . LOGIC T_SEMICOLON

    T_LBRACKET  shift, and go to state 28
    T_SUB       shift, and go to state 9
    T_NUMBER    shift, and go to state 10
    T_VARIABLE  shift, and go to state 29

    LOGIC            go to state 30
    LOGIC2           go to state 31
    LOGIC3           go to state 32
    LOGIC4           go to state 33
    LOGIC5           go to state 34
    EXPR             go to state 35
    EXPR2            go to state 36
    EXPR3            go to state 37
    VALUE_WITH_FUNC  go to state 38
    VALUE            go to state 39
    FUNC_EVOKE       go to state 40


State 7

   34 IF: T_IF . T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   35   | T_IF . T_LBRACKET LOGIC T_RBRACKET STATEMENT
   36   | T_IF . T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET T_ELSE T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   37   | T_IF . T_LBRACKET LOGIC T_RBRACKET STATEMENT T_ELSE T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   38   | T_IF . T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET T_ELSE STATEMENT
   39   | T_IF . T_LBRACKET LOGIC T_RBRACKET STATEMENT T_ELSE STATEMENT

    T_LBRACKET  shift, and go to state 41


State 8

   33 CONTROL: T_WHILE . T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET

    T_LBRACKET  shift, and go to state 42


State 9

   66 VALUE: T_SUB . T_NUMBER

    T_NUMBER  shift, and go to state 43


State 10

   65 VALUE: T_NUMBER .

    $default  reduce using rule 65 (VALUE)


State 11

   67 VALUE: T_VARIABLE .
   68 VALUE_FOR_STORE: T_VARIABLE .

    T_ASSIGN  reduce using rule 68 (VALUE_FOR_STORE)
    $default  reduce using rule 67 (VALUE)


State 12

    3 PROGRAM: PROGRAM STATEMENT .

    $default  reduce using rule 3 (PROGRAM)


State 13

    4 STATEMENT: DECLARATION .

    $default  reduce using rule 4 (STATEMENT)


State 14

   10 DECLARATION: FUNC_DECLARATION .

    $default  reduce using rule 10 (DECLARATION)


State 15

   11 DECLARATION: VAR_DECLARATION .
   12 FUNC_DECLARATION: VAR_DECLARATION . T_LBRACKET ARGUMENT_LIST_DEC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   27 ASSIGN: VAR_DECLARATION . T_ASSIGN EXPR T_SEMICOLON

    T_ASSIGN    shift, and go to state 44
    T_LBRACKET  shift, and go to state 45

    $default  reduce using rule 11 (DECLARATION)


State 16

    5 STATEMENT: ASSIGNMENT .

    $default  reduce using rule 5 (STATEMENT)


State 17

   26 ASSIGNMENT: ASSIGN .

    $default  reduce using rule 26 (ASSIGNMENT)


State 18

    6 STATEMENT: JUMP .

    $default  reduce using rule 6 (STATEMENT)


State 19

   29 JUMP: RETURN .

    $default  reduce using rule 29 (JUMP)


State 20

    7 STATEMENT: CONTROL .

    $default  reduce using rule 7 (STATEMENT)


State 21

   32 CONTROL: IF .

    $default  reduce using rule 32 (CONTROL)


State 22

   69 FUNC_EVOKE: VALUE . T_LBRACKET ARGUMENT_LIST_CALL T_RBRACKET

    T_LBRACKET  shift, and go to state 46


State 23

   28 ASSIGN: VALUE_FOR_STORE . T_ASSIGN EXPR T_SEMICOLON

    T_ASSIGN  shift, and go to state 47


State 24

   30 JUMP: FUNC_EVOKE . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 48


State 25

   68 VALUE_FOR_STORE: T_VARIABLE .

    $default  reduce using rule 68 (VALUE_FOR_STORE)


State 26

   13 VAR_DECLARATION: T_INT VALUE_FOR_STORE .
   14                | T_INT VALUE_FOR_STORE . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 49

    $default  reduce using rule 13 (VAR_DECLARATION)


State 27

   15 VAR_DECLARATION: T_VOID VALUE_FOR_STORE .
   16                | T_VOID VALUE_FOR_STORE . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 50

    $default  reduce using rule 15 (VAR_DECLARATION)


State 28

   53 LOGIC5: T_LBRACKET . LOGIC T_RBRACKET
   62 EXPR3: T_LBRACKET . EXPR T_RBRACKET

    T_LBRACKET  shift, and go to state 28
    T_SUB       shift, and go to state 9
    T_NUMBER    shift, and go to state 10
    T_VARIABLE  shift, and go to state 29

    LOGIC            go to state 51
    LOGIC2           go to state 31
    LOGIC3           go to state 32
    LOGIC4           go to state 33
    LOGIC5           go to state 34
    EXPR             go to state 52
    EXPR2            go to state 36
    EXPR3            go to state 37
    VALUE_WITH_FUNC  go to state 38
    VALUE            go to state 39
    FUNC_EVOKE       go to state 40


State 29

   67 VALUE: T_VARIABLE .

    $default  reduce using rule 67 (VALUE)


State 30

   31 RETURN: T_RETURN LOGIC . T_SEMICOLON
   41 LOGIC: LOGIC . T_OR LOGIC2

    T_SEMICOLON  shift, and go to state 53
    T_OR         shift, and go to state 54


State 31

   40 LOGIC: LOGIC2 .
   43 LOGIC2: LOGIC2 . T_AND LOGIC3

    T_AND  shift, and go to state 55

    $default  reduce using rule 40 (LOGIC)


State 32

   42 LOGIC2: LOGIC3 .
   45 LOGIC3: LOGIC3 . T_EQUAL LOGIC4
   46       | LOGIC3 . T_NOTEQUAL LOGIC4

    T_EQUAL     shift, and go to state 56
    T_NOTEQUAL  shift, and go to state 57

    $default  reduce using rule 42 (LOGIC2)


State 33

   44 LOGIC3: LOGIC4 .
   48 LOGIC4: LOGIC4 . T_GREATER LOGIC5
   49       | LOGIC4 . T_EQGT LOGIC5
   50       | LOGIC4 . T_LESS LOGIC5
   51       | LOGIC4 . T_EQLT LOGIC5

    T_LESS     shift, and go to state 58
    T_EQLT     shift, and go to state 59
    T_GREATER  shift, and go to state 60
    T_EQGT     shift, and go to state 61

    $default  reduce using rule 44 (LOGIC3)


State 34

   47 LOGIC4: LOGIC5 .

    $default  reduce using rule 47 (LOGIC4)


State 35

   52 LOGIC5: EXPR .
   55 EXPR: EXPR . T_ADD EXPR2
   56     | EXPR . T_SUB EXPR2

    T_ADD  shift, and go to state 62
    T_SUB  shift, and go to state 63

    $default  reduce using rule 52 (LOGIC5)


State 36

   54 EXPR: EXPR2 .
   58 EXPR2: EXPR2 . T_MULT EXPR3
   59      | EXPR2 . T_DIV EXPR3
   60      | EXPR2 . T_MOD EXPR3

    T_MULT  shift, and go to state 64
    T_DIV   shift, and go to state 65
    T_MOD   shift, and go to state 66

    $default  reduce using rule 54 (EXPR)


State 37

   57 EXPR2: EXPR3 .

    $default  reduce using rule 57 (EXPR2)


State 38

   61 EXPR3: VALUE_WITH_FUNC .

    $default  reduce using rule 61 (EXPR3)


State 39

   63 VALUE_WITH_FUNC: VALUE .
   69 FUNC_EVOKE: VALUE . T_LBRACKET ARGUMENT_LIST_CALL T_RBRACKET

    T_LBRACKET  shift, and go to state 46

    $default  reduce using rule 63 (VALUE_WITH_FUNC)


State 40

   64 VALUE_WITH_FUNC: FUNC_EVOKE .

    $default  reduce using rule 64 (VALUE_WITH_FUNC)


State 41

   34 IF: T_IF T_LBRACKET . LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   35   | T_IF T_LBRACKET . LOGIC T_RBRACKET STATEMENT
   36   | T_IF T_LBRACKET . LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET T_ELSE T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   37   | T_IF T_LBRACKET . LOGIC T_RBRACKET STATEMENT T_ELSE T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   38   | T_IF T_LBRACKET . LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET T_ELSE STATEMENT
   39   | T_IF T_LBRACKET . LOGIC T_RBRACKET STATEMENT T_ELSE STATEMENT

    T_LBRACKET  shift, and go to state 28
    T_SUB       shift, and go to state 9
    T_NUMBER    shift, and go to state 10
    T_VARIABLE  shift, and go to state 29

    LOGIC            go to state 67
    LOGIC2           go to state 31
    LOGIC3           go to state 32
    LOGIC4           go to state 33
    LOGIC5           go to state 34
    EXPR             go to state 35
    EXPR2            go to state 36
    EXPR3            go to state 37
    VALUE_WITH_FUNC  go to state 38
    VALUE            go to state 39
    FUNC_EVOKE       go to state 40


State 42

   33 CONTROL: T_WHILE T_LBRACKET . LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET

    T_LBRACKET  shift, and go to state 28
    T_SUB       shift, and go to state 9
    T_NUMBER    shift, and go to state 10
    T_VARIABLE  shift, and go to state 29

    LOGIC            go to state 68
    LOGIC2           go to state 31
    LOGIC3           go to state 32
    LOGIC4           go to state 33
    LOGIC5           go to state 34
    EXPR             go to state 35
    EXPR2            go to state 36
    EXPR3            go to state 37
    VALUE_WITH_FUNC  go to state 38
    VALUE            go to state 39
    FUNC_EVOKE       go to state 40


State 43

   66 VALUE: T_SUB T_NUMBER .

    $default  reduce using rule 66 (VALUE)


State 44

   27 ASSIGN: VAR_DECLARATION T_ASSIGN . EXPR T_SEMICOLON

    T_LBRACKET  shift, and go to state 69
    T_SUB       shift, and go to state 9
    T_NUMBER    shift, and go to state 10
    T_VARIABLE  shift, and go to state 29

    EXPR             go to state 70
    EXPR2            go to state 36
    EXPR3            go to state 37
    VALUE_WITH_FUNC  go to state 38
    VALUE            go to state 39
    FUNC_EVOKE       go to state 40


State 45

   12 FUNC_DECLARATION: VAR_DECLARATION T_LBRACKET . ARGUMENT_LIST_DEC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET

    T_INT       shift, and go to state 4
    T_VOID      shift, and go to state 5
    T_VARIABLE  shift, and go to state 25

    $default  reduce using rule 17 (ARGUMENT_LIST_DEC)

    VAR_DECLARATION    go to state 71
    ARGUMENT_LIST_DEC  go to state 72
    ARGUMENT_DEC       go to state 73
    VALUE_FOR_STORE    go to state 74


State 46

   69 FUNC_EVOKE: VALUE T_LBRACKET . ARGUMENT_LIST_CALL T_RBRACKET

    T_SUB       shift, and go to state 9
    T_NUMBER    shift, and go to state 10
    T_VARIABLE  shift, and go to state 29

    $default  reduce using rule 20 (ARGUMENT_LIST_CALL)

    ARGUMENT_LIST_CALL  go to state 75
    ARGUMENT_CALL       go to state 76
    VALUE               go to state 77


State 47

   28 ASSIGN: VALUE_FOR_STORE T_ASSIGN . EXPR T_SEMICOLON

    T_LBRACKET  shift, and go to state 69
    T_SUB       shift, and go to state 9
    T_NUMBER    shift, and go to state 10
    T_VARIABLE  shift, and go to state 29

    EXPR             go to state 78
    EXPR2            go to state 36
    EXPR3            go to state 37
    VALUE_WITH_FUNC  go to state 38
    VALUE            go to state 39
    FUNC_EVOKE       go to state 40


State 48

   30 JUMP: FUNC_EVOKE T_SEMICOLON .

    $default  reduce using rule 30 (JUMP)


State 49

   14 VAR_DECLARATION: T_INT VALUE_FOR_STORE T_SEMICOLON .

    $default  reduce using rule 14 (VAR_DECLARATION)


State 50

   16 VAR_DECLARATION: T_VOID VALUE_FOR_STORE T_SEMICOLON .

    $default  reduce using rule 16 (VAR_DECLARATION)


State 51

   41 LOGIC: LOGIC . T_OR LOGIC2
   53 LOGIC5: T_LBRACKET LOGIC . T_RBRACKET

    T_RBRACKET  shift, and go to state 79
    T_OR        shift, and go to state 54


State 52

   52 LOGIC5: EXPR .
   55 EXPR: EXPR . T_ADD EXPR2
   56     | EXPR . T_SUB EXPR2
   62 EXPR3: T_LBRACKET EXPR . T_RBRACKET

    T_RBRACKET  shift, and go to state 80
    T_ADD       shift, and go to state 62
    T_SUB       shift, and go to state 63

    T_RBRACKET  [reduce using rule 52 (LOGIC5)]
    $default    reduce using rule 52 (LOGIC5)


State 53

   31 RETURN: T_RETURN LOGIC T_SEMICOLON .

    $default  reduce using rule 31 (RETURN)


State 54

   41 LOGIC: LOGIC T_OR . LOGIC2

    T_LBRACKET  shift, and go to state 28
    T_SUB       shift, and go to state 9
    T_NUMBER    shift, and go to state 10
    T_VARIABLE  shift, and go to state 29

    LOGIC2           go to state 81
    LOGIC3           go to state 32
    LOGIC4           go to state 33
    LOGIC5           go to state 34
    EXPR             go to state 35
    EXPR2            go to state 36
    EXPR3            go to state 37
    VALUE_WITH_FUNC  go to state 38
    VALUE            go to state 39
    FUNC_EVOKE       go to state 40


State 55

   43 LOGIC2: LOGIC2 T_AND . LOGIC3

    T_LBRACKET  shift, and go to state 28
    T_SUB       shift, and go to state 9
    T_NUMBER    shift, and go to state 10
    T_VARIABLE  shift, and go to state 29

    LOGIC3           go to state 82
    LOGIC4           go to state 33
    LOGIC5           go to state 34
    EXPR             go to state 35
    EXPR2            go to state 36
    EXPR3            go to state 37
    VALUE_WITH_FUNC  go to state 38
    VALUE            go to state 39
    FUNC_EVOKE       go to state 40


State 56

   45 LOGIC3: LOGIC3 T_EQUAL . LOGIC4

    T_LBRACKET  shift, and go to state 28
    T_SUB       shift, and go to state 9
    T_NUMBER    shift, and go to state 10
    T_VARIABLE  shift, and go to state 29

    LOGIC4           go to state 83
    LOGIC5           go to state 34
    EXPR             go to state 35
    EXPR2            go to state 36
    EXPR3            go to state 37
    VALUE_WITH_FUNC  go to state 38
    VALUE            go to state 39
    FUNC_EVOKE       go to state 40


State 57

   46 LOGIC3: LOGIC3 T_NOTEQUAL . LOGIC4

    T_LBRACKET  shift, and go to state 28
    T_SUB       shift, and go to state 9
    T_NUMBER    shift, and go to state 10
    T_VARIABLE  shift, and go to state 29

    LOGIC4           go to state 84
    LOGIC5           go to state 34
    EXPR             go to state 35
    EXPR2            go to state 36
    EXPR3            go to state 37
    VALUE_WITH_FUNC  go to state 38
    VALUE            go to state 39
    FUNC_EVOKE       go to state 40


State 58

   50 LOGIC4: LOGIC4 T_LESS . LOGIC5

    T_LBRACKET  shift, and go to state 28
    T_SUB       shift, and go to state 9
    T_NUMBER    shift, and go to state 10
    T_VARIABLE  shift, and go to state 29

    LOGIC5           go to state 85
    EXPR             go to state 35
    EXPR2            go to state 36
    EXPR3            go to state 37
    VALUE_WITH_FUNC  go to state 38
    VALUE            go to state 39
    FUNC_EVOKE       go to state 40


State 59

   51 LOGIC4: LOGIC4 T_EQLT . LOGIC5

    T_LBRACKET  shift, and go to state 28
    T_SUB       shift, and go to state 9
    T_NUMBER    shift, and go to state 10
    T_VARIABLE  shift, and go to state 29

    LOGIC5           go to state 86
    EXPR             go to state 35
    EXPR2            go to state 36
    EXPR3            go to state 37
    VALUE_WITH_FUNC  go to state 38
    VALUE            go to state 39
    FUNC_EVOKE       go to state 40


State 60

   48 LOGIC4: LOGIC4 T_GREATER . LOGIC5

    T_LBRACKET  shift, and go to state 28
    T_SUB       shift, and go to state 9
    T_NUMBER    shift, and go to state 10
    T_VARIABLE  shift, and go to state 29

    LOGIC5           go to state 87
    EXPR             go to state 35
    EXPR2            go to state 36
    EXPR3            go to state 37
    VALUE_WITH_FUNC  go to state 38
    VALUE            go to state 39
    FUNC_EVOKE       go to state 40


State 61

   49 LOGIC4: LOGIC4 T_EQGT . LOGIC5

    T_LBRACKET  shift, and go to state 28
    T_SUB       shift, and go to state 9
    T_NUMBER    shift, and go to state 10
    T_VARIABLE  shift, and go to state 29

    LOGIC5           go to state 88
    EXPR             go to state 35
    EXPR2            go to state 36
    EXPR3            go to state 37
    VALUE_WITH_FUNC  go to state 38
    VALUE            go to state 39
    FUNC_EVOKE       go to state 40


State 62

   55 EXPR: EXPR T_ADD . EXPR2

    T_LBRACKET  shift, and go to state 69
    T_SUB       shift, and go to state 9
    T_NUMBER    shift, and go to state 10
    T_VARIABLE  shift, and go to state 29

    EXPR2            go to state 89
    EXPR3            go to state 37
    VALUE_WITH_FUNC  go to state 38
    VALUE            go to state 39
    FUNC_EVOKE       go to state 40


State 63

   56 EXPR: EXPR T_SUB . EXPR2

    T_LBRACKET  shift, and go to state 69
    T_SUB       shift, and go to state 9
    T_NUMBER    shift, and go to state 10
    T_VARIABLE  shift, and go to state 29

    EXPR2            go to state 90
    EXPR3            go to state 37
    VALUE_WITH_FUNC  go to state 38
    VALUE            go to state 39
    FUNC_EVOKE       go to state 40


State 64

   58 EXPR2: EXPR2 T_MULT . EXPR3

    T_LBRACKET  shift, and go to state 69
    T_SUB       shift, and go to state 9
    T_NUMBER    shift, and go to state 10
    T_VARIABLE  shift, and go to state 29

    EXPR3            go to state 91
    VALUE_WITH_FUNC  go to state 38
    VALUE            go to state 39
    FUNC_EVOKE       go to state 40


State 65

   59 EXPR2: EXPR2 T_DIV . EXPR3

    T_LBRACKET  shift, and go to state 69
    T_SUB       shift, and go to state 9
    T_NUMBER    shift, and go to state 10
    T_VARIABLE  shift, and go to state 29

    EXPR3            go to state 92
    VALUE_WITH_FUNC  go to state 38
    VALUE            go to state 39
    FUNC_EVOKE       go to state 40


State 66

   60 EXPR2: EXPR2 T_MOD . EXPR3

    T_LBRACKET  shift, and go to state 69
    T_SUB       shift, and go to state 9
    T_NUMBER    shift, and go to state 10
    T_VARIABLE  shift, and go to state 29

    EXPR3            go to state 93
    VALUE_WITH_FUNC  go to state 38
    VALUE            go to state 39
    FUNC_EVOKE       go to state 40


State 67

   34 IF: T_IF T_LBRACKET LOGIC . T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   35   | T_IF T_LBRACKET LOGIC . T_RBRACKET STATEMENT
   36   | T_IF T_LBRACKET LOGIC . T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET T_ELSE T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   37   | T_IF T_LBRACKET LOGIC . T_RBRACKET STATEMENT T_ELSE T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   38   | T_IF T_LBRACKET LOGIC . T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET T_ELSE STATEMENT
   39   | T_IF T_LBRACKET LOGIC . T_RBRACKET STATEMENT T_ELSE STATEMENT
   41 LOGIC: LOGIC . T_OR LOGIC2

    T_RBRACKET  shift, and go to state 94
    T_OR        shift, and go to state 54


State 68

   33 CONTROL: T_WHILE T_LBRACKET LOGIC . T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   41 LOGIC: LOGIC . T_OR LOGIC2

    T_RBRACKET  shift, and go to state 95
    T_OR        shift, and go to state 54


State 69

   62 EXPR3: T_LBRACKET . EXPR T_RBRACKET

    T_LBRACKET  shift, and go to state 69
    T_SUB       shift, and go to state 9
    T_NUMBER    shift, and go to state 10
    T_VARIABLE  shift, and go to state 29

    EXPR             go to state 96
    EXPR2            go to state 36
    EXPR3            go to state 37
    VALUE_WITH_FUNC  go to state 38
    VALUE            go to state 39
    FUNC_EVOKE       go to state 40


State 70

   27 ASSIGN: VAR_DECLARATION T_ASSIGN EXPR . T_SEMICOLON
   55 EXPR: EXPR . T_ADD EXPR2
   56     | EXPR . T_SUB EXPR2

    T_SEMICOLON  shift, and go to state 97
    T_ADD        shift, and go to state 62
    T_SUB        shift, and go to state 63


State 71

   23 ARGUMENT_DEC: VAR_DECLARATION .

    $default  reduce using rule 23 (ARGUMENT_DEC)


State 72

   12 FUNC_DECLARATION: VAR_DECLARATION T_LBRACKET ARGUMENT_LIST_DEC . T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   19 ARGUMENT_LIST_DEC: ARGUMENT_LIST_DEC . T_COMMA ARGUMENT_DEC

    T_RBRACKET  shift, and go to state 98
    T_COMMA     shift, and go to state 99


State 73

   18 ARGUMENT_LIST_DEC: ARGUMENT_DEC .

    $default  reduce using rule 18 (ARGUMENT_LIST_DEC)


State 74

   24 ARGUMENT_DEC: VALUE_FOR_STORE .

    $default  reduce using rule 24 (ARGUMENT_DEC)


State 75

   22 ARGUMENT_LIST_CALL: ARGUMENT_LIST_CALL . T_COMMA ARGUMENT_CALL
   69 FUNC_EVOKE: VALUE T_LBRACKET ARGUMENT_LIST_CALL . T_RBRACKET

    T_RBRACKET  shift, and go to state 100
    T_COMMA     shift, and go to state 101


State 76

   21 ARGUMENT_LIST_CALL: ARGUMENT_CALL .

    $default  reduce using rule 21 (ARGUMENT_LIST_CALL)


State 77

   25 ARGUMENT_CALL: VALUE .

    $default  reduce using rule 25 (ARGUMENT_CALL)


State 78

   28 ASSIGN: VALUE_FOR_STORE T_ASSIGN EXPR . T_SEMICOLON
   55 EXPR: EXPR . T_ADD EXPR2
   56     | EXPR . T_SUB EXPR2

    T_SEMICOLON  shift, and go to state 102
    T_ADD        shift, and go to state 62
    T_SUB        shift, and go to state 63


State 79

   53 LOGIC5: T_LBRACKET LOGIC T_RBRACKET .

    $default  reduce using rule 53 (LOGIC5)


State 80

   62 EXPR3: T_LBRACKET EXPR T_RBRACKET .

    $default  reduce using rule 62 (EXPR3)


State 81

   41 LOGIC: LOGIC T_OR LOGIC2 .
   43 LOGIC2: LOGIC2 . T_AND LOGIC3

    T_AND  shift, and go to state 55

    $default  reduce using rule 41 (LOGIC)


State 82

   43 LOGIC2: LOGIC2 T_AND LOGIC3 .
   45 LOGIC3: LOGIC3 . T_EQUAL LOGIC4
   46       | LOGIC3 . T_NOTEQUAL LOGIC4

    T_EQUAL     shift, and go to state 56
    T_NOTEQUAL  shift, and go to state 57

    $default  reduce using rule 43 (LOGIC2)


State 83

   45 LOGIC3: LOGIC3 T_EQUAL LOGIC4 .
   48 LOGIC4: LOGIC4 . T_GREATER LOGIC5
   49       | LOGIC4 . T_EQGT LOGIC5
   50       | LOGIC4 . T_LESS LOGIC5
   51       | LOGIC4 . T_EQLT LOGIC5

    T_LESS     shift, and go to state 58
    T_EQLT     shift, and go to state 59
    T_GREATER  shift, and go to state 60
    T_EQGT     shift, and go to state 61

    $default  reduce using rule 45 (LOGIC3)


State 84

   46 LOGIC3: LOGIC3 T_NOTEQUAL LOGIC4 .
   48 LOGIC4: LOGIC4 . T_GREATER LOGIC5
   49       | LOGIC4 . T_EQGT LOGIC5
   50       | LOGIC4 . T_LESS LOGIC5
   51       | LOGIC4 . T_EQLT LOGIC5

    T_LESS     shift, and go to state 58
    T_EQLT     shift, and go to state 59
    T_GREATER  shift, and go to state 60
    T_EQGT     shift, and go to state 61

    $default  reduce using rule 46 (LOGIC3)


State 85

   50 LOGIC4: LOGIC4 T_LESS LOGIC5 .

    $default  reduce using rule 50 (LOGIC4)


State 86

   51 LOGIC4: LOGIC4 T_EQLT LOGIC5 .

    $default  reduce using rule 51 (LOGIC4)


State 87

   48 LOGIC4: LOGIC4 T_GREATER LOGIC5 .

    $default  reduce using rule 48 (LOGIC4)


State 88

   49 LOGIC4: LOGIC4 T_EQGT LOGIC5 .

    $default  reduce using rule 49 (LOGIC4)


State 89

   55 EXPR: EXPR T_ADD EXPR2 .
   58 EXPR2: EXPR2 . T_MULT EXPR3
   59      | EXPR2 . T_DIV EXPR3
   60      | EXPR2 . T_MOD EXPR3

    T_MULT  shift, and go to state 64
    T_DIV   shift, and go to state 65
    T_MOD   shift, and go to state 66

    $default  reduce using rule 55 (EXPR)


State 90

   56 EXPR: EXPR T_SUB EXPR2 .
   58 EXPR2: EXPR2 . T_MULT EXPR3
   59      | EXPR2 . T_DIV EXPR3
   60      | EXPR2 . T_MOD EXPR3

    T_MULT  shift, and go to state 64
    T_DIV   shift, and go to state 65
    T_MOD   shift, and go to state 66

    $default  reduce using rule 56 (EXPR)


State 91

   58 EXPR2: EXPR2 T_MULT EXPR3 .

    $default  reduce using rule 58 (EXPR2)


State 92

   59 EXPR2: EXPR2 T_DIV EXPR3 .

    $default  reduce using rule 59 (EXPR2)


State 93

   60 EXPR2: EXPR2 T_MOD EXPR3 .

    $default  reduce using rule 60 (EXPR2)


State 94

   34 IF: T_IF T_LBRACKET LOGIC T_RBRACKET . T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   35   | T_IF T_LBRACKET LOGIC T_RBRACKET . STATEMENT
   36   | T_IF T_LBRACKET LOGIC T_RBRACKET . T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET T_ELSE T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   37   | T_IF T_LBRACKET LOGIC T_RBRACKET . STATEMENT T_ELSE T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   38   | T_IF T_LBRACKET LOGIC T_RBRACKET . T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET T_ELSE STATEMENT
   39   | T_IF T_LBRACKET LOGIC T_RBRACKET . STATEMENT T_ELSE STATEMENT

    T_LCURLBRACKET  shift, and go to state 103
    T_INT           shift, and go to state 4
    T_VOID          shift, and go to state 5
    T_RETURN        shift, and go to state 6
    T_IF            shift, and go to state 7
    T_WHILE         shift, and go to state 8
    T_SUB           shift, and go to state 9
    T_NUMBER        shift, and go to state 10
    T_VARIABLE      shift, and go to state 11

    STATEMENT         go to state 104
    DECLARATION       go to state 13
    FUNC_DECLARATION  go to state 14
    VAR_DECLARATION   go to state 15
    ASSIGNMENT        go to state 16
    ASSIGN            go to state 17
    JUMP              go to state 18
    RETURN            go to state 19
    CONTROL           go to state 20
    IF                go to state 21
    VALUE             go to state 22
    VALUE_FOR_STORE   go to state 23
    FUNC_EVOKE        go to state 24


State 95

   33 CONTROL: T_WHILE T_LBRACKET LOGIC T_RBRACKET . T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET

    T_LCURLBRACKET  shift, and go to state 105


State 96

   55 EXPR: EXPR . T_ADD EXPR2
   56     | EXPR . T_SUB EXPR2
   62 EXPR3: T_LBRACKET EXPR . T_RBRACKET

    T_RBRACKET  shift, and go to state 80
    T_ADD       shift, and go to state 62
    T_SUB       shift, and go to state 63


State 97

   27 ASSIGN: VAR_DECLARATION T_ASSIGN EXPR T_SEMICOLON .

    $default  reduce using rule 27 (ASSIGN)


State 98

   12 FUNC_DECLARATION: VAR_DECLARATION T_LBRACKET ARGUMENT_LIST_DEC T_RBRACKET . T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET

    T_LCURLBRACKET  shift, and go to state 106


State 99

   19 ARGUMENT_LIST_DEC: ARGUMENT_LIST_DEC T_COMMA . ARGUMENT_DEC

    T_INT       shift, and go to state 4
    T_VOID      shift, and go to state 5
    T_VARIABLE  shift, and go to state 25

    VAR_DECLARATION  go to state 71
    ARGUMENT_DEC     go to state 107
    VALUE_FOR_STORE  go to state 74


State 100

   69 FUNC_EVOKE: VALUE T_LBRACKET ARGUMENT_LIST_CALL T_RBRACKET .

    $default  reduce using rule 69 (FUNC_EVOKE)


State 101

   22 ARGUMENT_LIST_CALL: ARGUMENT_LIST_CALL T_COMMA . ARGUMENT_CALL

    T_SUB       shift, and go to state 9
    T_NUMBER    shift, and go to state 10
    T_VARIABLE  shift, and go to state 29

    ARGUMENT_CALL  go to state 108
    VALUE          go to state 77


State 102

   28 ASSIGN: VALUE_FOR_STORE T_ASSIGN EXPR T_SEMICOLON .

    $default  reduce using rule 28 (ASSIGN)


State 103

   34 IF: T_IF T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET . STATEMENT_LIST T_RCURLBRACKET
   36   | T_IF T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET . STATEMENT_LIST T_RCURLBRACKET T_ELSE T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   38   | T_IF T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET . STATEMENT_LIST T_RCURLBRACKET T_ELSE STATEMENT

    $default  reduce using rule 8 (STATEMENT_LIST)

    STATEMENT_LIST  go to state 109


State 104

   35 IF: T_IF T_LBRACKET LOGIC T_RBRACKET STATEMENT .
   37   | T_IF T_LBRACKET LOGIC T_RBRACKET STATEMENT . T_ELSE T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   39   | T_IF T_LBRACKET LOGIC T_RBRACKET STATEMENT . T_ELSE STATEMENT

    T_ELSE  shift, and go to state 110

    T_ELSE    [reduce using rule 35 (IF)]
    $default  reduce using rule 35 (IF)


State 105

   33 CONTROL: T_WHILE T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET . STATEMENT_LIST T_RCURLBRACKET

    $default  reduce using rule 8 (STATEMENT_LIST)

    STATEMENT_LIST  go to state 111


State 106

   12 FUNC_DECLARATION: VAR_DECLARATION T_LBRACKET ARGUMENT_LIST_DEC T_RBRACKET T_LCURLBRACKET . STATEMENT_LIST T_RCURLBRACKET

    $default  reduce using rule 8 (STATEMENT_LIST)

    STATEMENT_LIST  go to state 112


State 107

   19 ARGUMENT_LIST_DEC: ARGUMENT_LIST_DEC T_COMMA ARGUMENT_DEC .

    $default  reduce using rule 19 (ARGUMENT_LIST_DEC)


State 108

   22 ARGUMENT_LIST_CALL: ARGUMENT_LIST_CALL T_COMMA ARGUMENT_CALL .

    $default  reduce using rule 22 (ARGUMENT_LIST_CALL)


State 109

    9 STATEMENT_LIST: STATEMENT_LIST . STATEMENT
   34 IF: T_IF T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST . T_RCURLBRACKET
   36   | T_IF T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST . T_RCURLBRACKET T_ELSE T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   38   | T_IF T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST . T_RCURLBRACKET T_ELSE STATEMENT

    T_RCURLBRACKET  shift, and go to state 113
    T_INT           shift, and go to state 4
    T_VOID          shift, and go to state 5
    T_RETURN        shift, and go to state 6
    T_IF            shift, and go to state 7
    T_WHILE         shift, and go to state 8
    T_SUB           shift, and go to state 9
    T_NUMBER        shift, and go to state 10
    T_VARIABLE      shift, and go to state 11

    STATEMENT         go to state 114
    DECLARATION       go to state 13
    FUNC_DECLARATION  go to state 14
    VAR_DECLARATION   go to state 15
    ASSIGNMENT        go to state 16
    ASSIGN            go to state 17
    JUMP              go to state 18
    RETURN            go to state 19
    CONTROL           go to state 20
    IF                go to state 21
    VALUE             go to state 22
    VALUE_FOR_STORE   go to state 23
    FUNC_EVOKE        go to state 24


State 110

   37 IF: T_IF T_LBRACKET LOGIC T_RBRACKET STATEMENT T_ELSE . T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   39   | T_IF T_LBRACKET LOGIC T_RBRACKET STATEMENT T_ELSE . STATEMENT

    T_LCURLBRACKET  shift, and go to state 115
    T_INT           shift, and go to state 4
    T_VOID          shift, and go to state 5
    T_RETURN        shift, and go to state 6
    T_IF            shift, and go to state 7
    T_WHILE         shift, and go to state 8
    T_SUB           shift, and go to state 9
    T_NUMBER        shift, and go to state 10
    T_VARIABLE      shift, and go to state 11

    STATEMENT         go to state 116
    DECLARATION       go to state 13
    FUNC_DECLARATION  go to state 14
    VAR_DECLARATION   go to state 15
    ASSIGNMENT        go to state 16
    ASSIGN            go to state 17
    JUMP              go to state 18
    RETURN            go to state 19
    CONTROL           go to state 20
    IF                go to state 21
    VALUE             go to state 22
    VALUE_FOR_STORE   go to state 23
    FUNC_EVOKE        go to state 24


State 111

    9 STATEMENT_LIST: STATEMENT_LIST . STATEMENT
   33 CONTROL: T_WHILE T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST . T_RCURLBRACKET

    T_RCURLBRACKET  shift, and go to state 117
    T_INT           shift, and go to state 4
    T_VOID          shift, and go to state 5
    T_RETURN        shift, and go to state 6
    T_IF            shift, and go to state 7
    T_WHILE         shift, and go to state 8
    T_SUB           shift, and go to state 9
    T_NUMBER        shift, and go to state 10
    T_VARIABLE      shift, and go to state 11

    STATEMENT         go to state 114
    DECLARATION       go to state 13
    FUNC_DECLARATION  go to state 14
    VAR_DECLARATION   go to state 15
    ASSIGNMENT        go to state 16
    ASSIGN            go to state 17
    JUMP              go to state 18
    RETURN            go to state 19
    CONTROL           go to state 20
    IF                go to state 21
    VALUE             go to state 22
    VALUE_FOR_STORE   go to state 23
    FUNC_EVOKE        go to state 24


State 112

    9 STATEMENT_LIST: STATEMENT_LIST . STATEMENT
   12 FUNC_DECLARATION: VAR_DECLARATION T_LBRACKET ARGUMENT_LIST_DEC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST . T_RCURLBRACKET

    T_RCURLBRACKET  shift, and go to state 118
    T_INT           shift, and go to state 4
    T_VOID          shift, and go to state 5
    T_RETURN        shift, and go to state 6
    T_IF            shift, and go to state 7
    T_WHILE         shift, and go to state 8
    T_SUB           shift, and go to state 9
    T_NUMBER        shift, and go to state 10
    T_VARIABLE      shift, and go to state 11

    STATEMENT         go to state 114
    DECLARATION       go to state 13
    FUNC_DECLARATION  go to state 14
    VAR_DECLARATION   go to state 15
    ASSIGNMENT        go to state 16
    ASSIGN            go to state 17
    JUMP              go to state 18
    RETURN            go to state 19
    CONTROL           go to state 20
    IF                go to state 21
    VALUE             go to state 22
    VALUE_FOR_STORE   go to state 23
    FUNC_EVOKE        go to state 24


State 113

   34 IF: T_IF T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET .
   36   | T_IF T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET . T_ELSE T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   38   | T_IF T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET . T_ELSE STATEMENT

    T_ELSE  shift, and go to state 119

    T_ELSE    [reduce using rule 34 (IF)]
    $default  reduce using rule 34 (IF)


State 114

    9 STATEMENT_LIST: STATEMENT_LIST STATEMENT .

    $default  reduce using rule 9 (STATEMENT_LIST)


State 115

   37 IF: T_IF T_LBRACKET LOGIC T_RBRACKET STATEMENT T_ELSE T_LCURLBRACKET . STATEMENT_LIST T_RCURLBRACKET

    $default  reduce using rule 8 (STATEMENT_LIST)

    STATEMENT_LIST  go to state 120


State 116

   39 IF: T_IF T_LBRACKET LOGIC T_RBRACKET STATEMENT T_ELSE STATEMENT .

    $default  reduce using rule 39 (IF)


State 117

   33 CONTROL: T_WHILE T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET .

    $default  reduce using rule 33 (CONTROL)


State 118

   12 FUNC_DECLARATION: VAR_DECLARATION T_LBRACKET ARGUMENT_LIST_DEC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET .

    $default  reduce using rule 12 (FUNC_DECLARATION)


State 119

   36 IF: T_IF T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET T_ELSE . T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   38   | T_IF T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET T_ELSE . STATEMENT

    T_LCURLBRACKET  shift, and go to state 121
    T_INT           shift, and go to state 4
    T_VOID          shift, and go to state 5
    T_RETURN        shift, and go to state 6
    T_IF            shift, and go to state 7
    T_WHILE         shift, and go to state 8
    T_SUB           shift, and go to state 9
    T_NUMBER        shift, and go to state 10
    T_VARIABLE      shift, and go to state 11

    STATEMENT         go to state 122
    DECLARATION       go to state 13
    FUNC_DECLARATION  go to state 14
    VAR_DECLARATION   go to state 15
    ASSIGNMENT        go to state 16
    ASSIGN            go to state 17
    JUMP              go to state 18
    RETURN            go to state 19
    CONTROL           go to state 20
    IF                go to state 21
    VALUE             go to state 22
    VALUE_FOR_STORE   go to state 23
    FUNC_EVOKE        go to state 24


State 120

    9 STATEMENT_LIST: STATEMENT_LIST . STATEMENT
   37 IF: T_IF T_LBRACKET LOGIC T_RBRACKET STATEMENT T_ELSE T_LCURLBRACKET STATEMENT_LIST . T_RCURLBRACKET

    T_RCURLBRACKET  shift, and go to state 123
    T_INT           shift, and go to state 4
    T_VOID          shift, and go to state 5
    T_RETURN        shift, and go to state 6
    T_IF            shift, and go to state 7
    T_WHILE         shift, and go to state 8
    T_SUB           shift, and go to state 9
    T_NUMBER        shift, and go to state 10
    T_VARIABLE      shift, and go to state 11

    STATEMENT         go to state 114
    DECLARATION       go to state 13
    FUNC_DECLARATION  go to state 14
    VAR_DECLARATION   go to state 15
    ASSIGNMENT        go to state 16
    ASSIGN            go to state 17
    JUMP              go to state 18
    RETURN            go to state 19
    CONTROL           go to state 20
    IF                go to state 21
    VALUE             go to state 22
    VALUE_FOR_STORE   go to state 23
    FUNC_EVOKE        go to state 24


State 121

   36 IF: T_IF T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET T_ELSE T_LCURLBRACKET . STATEMENT_LIST T_RCURLBRACKET

    $default  reduce using rule 8 (STATEMENT_LIST)

    STATEMENT_LIST  go to state 124


State 122

   38 IF: T_IF T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET T_ELSE STATEMENT .

    $default  reduce using rule 38 (IF)


State 123

   37 IF: T_IF T_LBRACKET LOGIC T_RBRACKET STATEMENT T_ELSE T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET .

    $default  reduce using rule 37 (IF)


State 124

    9 STATEMENT_LIST: STATEMENT_LIST . STATEMENT
   36 IF: T_IF T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET T_ELSE T_LCURLBRACKET STATEMENT_LIST . T_RCURLBRACKET

    T_RCURLBRACKET  shift, and go to state 125
    T_INT           shift, and go to state 4
    T_VOID          shift, and go to state 5
    T_RETURN        shift, and go to state 6
    T_IF            shift, and go to state 7
    T_WHILE         shift, and go to state 8
    T_SUB           shift, and go to state 9
    T_NUMBER        shift, and go to state 10
    T_VARIABLE      shift, and go to state 11

    STATEMENT         go to state 114
    DECLARATION       go to state 13
    FUNC_DECLARATION  go to state 14
    VAR_DECLARATION   go to state 15
    ASSIGNMENT        go to state 16
    ASSIGN            go to state 17
    JUMP              go to state 18
    RETURN            go to state 19
    CONTROL           go to state 20
    IF                go to state 21
    VALUE             go to state 22
    VALUE_FOR_STORE   go to state 23
    FUNC_EVOKE        go to state 24


State 125

   36 IF: T_IF T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET T_ELSE T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET .

    $default  reduce using rule 36 (IF)
