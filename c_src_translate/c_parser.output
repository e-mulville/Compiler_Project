Terminals unused in grammar

   T_COLON


State 21 conflicts: 1 shift/reduce
State 50 conflicts: 1 shift/reduce


Grammar

    0 $accept: ROOT $end

    1 ROOT: PROGRAM

    2 PROGRAM: %empty
    3        | PROGRAM STATEMENT

    4 STATEMENT: DECLARATION
    5          | ASSIGNMENT
    6          | JUMP
    7          | CONTROL

    8 STATEMENT_LIST: %empty
    9               | STATEMENT_LIST STATEMENT

   10 DECLARATION: FUNC_DECLARATION
   11            | VAR_DECLARATION

   12 FUNC_DECLARATION: VAR_DECLARATION T_LBRACKET ARGUMENT_LIST T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET

   13 VAR_DECLARATION: T_INT VALUE
   14                | T_INT VALUE T_SEMICOLON
   15                | T_VOID VALUE
   16                | T_VOID VALUE T_SEMICOLON

   17 ARGUMENT_LIST: %empty
   18              | ARGUMENT
   19              | ARGUMENT_LIST T_COMMA ARGUMENT

   20 ARGUMENT: VAR_DECLARATION
   21         | VALUE

   22 ASSIGNMENT: ASSIGN

   23 ASSIGN: VAR_DECLARATION T_ASSIGN EXPR T_SEMICOLON
   24       | VALUE T_ASSIGN EXPR T_SEMICOLON

   25 JUMP: RETURN
   26     | FUNC_EVOKE T_SEMICOLON

   27 RETURN: T_RETURN LOGIC T_SEMICOLON

   28 CONTROL: IF
   29        | IF T_ELSE T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   30        | IF T_ELSE STATEMENT
   31        | T_WHILE T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET

   32 IF: T_IF T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   33   | T_IF T_LBRACKET LOGIC T_RBRACKET STATEMENT

   34 LOGIC: LOGIC2
   35      | LOGIC T_OR LOGIC2

   36 LOGIC2: LOGIC3
   37       | LOGIC2 T_AND LOGIC3

   38 LOGIC3: LOGIC4
   39       | LOGIC3 T_EQUAL LOGIC4
   40       | LOGIC3 T_NOTEQUAL LOGIC4

   41 LOGIC4: LOGIC5
   42       | LOGIC4 T_GREATER LOGIC5
   43       | LOGIC4 T_EQGT LOGIC5
   44       | LOGIC4 T_LESS LOGIC5
   45       | LOGIC4 T_EQLT LOGIC5

   46 LOGIC5: EXPR
   47       | T_LBRACKET LOGIC T_RBRACKET

   48 EXPR: EXPR2
   49     | EXPR T_ADD EXPR2
   50     | EXPR T_SUB EXPR2

   51 EXPR2: EXPR3
   52      | EXPR2 T_MULT EXPR3
   53      | EXPR2 T_DIV EXPR3
   54      | EXPR2 T_MOD EXPR3

   55 EXPR3: VALUE_WITH_FUNC
   56      | T_LBRACKET EXPR T_RBRACKET

   57 VALUE_WITH_FUNC: VALUE
   58                | FUNC_EVOKE

   59 VALUE: T_NUMBER
   60      | T_SUB T_NUMBER
   61      | T_VARIABLE

   62 FUNC_EVOKE: VALUE T_LBRACKET ARGUMENT_LIST T_RBRACKET


Terminals, with rules where they appear

$end (0) 0
error (256)
T_ASSIGN (258) 23 24
T_LBRACKET (259) 12 31 32 33 47 56 62
T_RBRACKET (260) 12 31 32 33 47 56 62
T_LCURLBRACKET (261) 12 29 31 32
T_RCURLBRACKET (262) 12 29 31 32
T_SEMICOLON (263) 14 16 23 24 26 27
T_COLON (264)
T_COMMA (265) 19
T_INT (266) 13 14
T_VOID (267) 15 16
T_RETURN (268) 27
T_IF (269) 32 33
T_ELSE (270) 29 30
T_WHILE (271) 31
T_AND (272) 37
T_OR (273) 35
T_ADD (274) 49
T_SUB (275) 50 60
T_MULT (276) 52
T_DIV (277) 53
T_MOD (278) 54
T_EQUAL (279) 39
T_NOTEQUAL (280) 40
T_LESS (281) 44
T_EQLT (282) 45
T_GREATER (283) 42
T_EQGT (284) 43
T_NUMBER (285) 59 60
T_VARIABLE (286) 61


Nonterminals, with rules where they appear

$accept (32)
    on left: 0
ROOT (33)
    on left: 1, on right: 0
PROGRAM (34)
    on left: 2 3, on right: 1 3
STATEMENT (35)
    on left: 4 5 6 7, on right: 3 9 30 33
STATEMENT_LIST (36)
    on left: 8 9, on right: 9 12 29 31 32
DECLARATION (37)
    on left: 10 11, on right: 4
FUNC_DECLARATION (38)
    on left: 12, on right: 10
VAR_DECLARATION (39)
    on left: 13 14 15 16, on right: 11 12 20 23
ARGUMENT_LIST (40)
    on left: 17 18 19, on right: 12 19 62
ARGUMENT (41)
    on left: 20 21, on right: 18 19
ASSIGNMENT (42)
    on left: 22, on right: 5
ASSIGN (43)
    on left: 23 24, on right: 22
JUMP (44)
    on left: 25 26, on right: 6
RETURN (45)
    on left: 27, on right: 25
CONTROL (46)
    on left: 28 29 30 31, on right: 7
IF (47)
    on left: 32 33, on right: 28 29 30
LOGIC (48)
    on left: 34 35, on right: 27 31 32 33 35 47
LOGIC2 (49)
    on left: 36 37, on right: 34 35 37
LOGIC3 (50)
    on left: 38 39 40, on right: 36 37 39 40
LOGIC4 (51)
    on left: 41 42 43 44 45, on right: 38 39 40 42 43 44 45
LOGIC5 (52)
    on left: 46 47, on right: 41 42 43 44 45
EXPR (53)
    on left: 48 49 50, on right: 23 24 46 49 50 56
EXPR2 (54)
    on left: 51 52 53 54, on right: 48 49 50 52 53 54
EXPR3 (55)
    on left: 55 56, on right: 51 52 53 54
VALUE_WITH_FUNC (56)
    on left: 57 58, on right: 55
VALUE (57)
    on left: 59 60 61, on right: 13 14 15 16 21 24 57 62
FUNC_EVOKE (58)
    on left: 62, on right: 26 58


State 0

    0 $accept: . ROOT $end

    $default  reduce using rule 2 (PROGRAM)

    ROOT     go to state 1
    PROGRAM  go to state 2


State 1

    0 $accept: ROOT . $end

    $end  shift, and go to state 3


State 2

    1 ROOT: PROGRAM .
    3 PROGRAM: PROGRAM . STATEMENT

    T_INT       shift, and go to state 4
    T_VOID      shift, and go to state 5
    T_RETURN    shift, and go to state 6
    T_IF        shift, and go to state 7
    T_WHILE     shift, and go to state 8
    T_SUB       shift, and go to state 9
    T_NUMBER    shift, and go to state 10
    T_VARIABLE  shift, and go to state 11

    $default  reduce using rule 1 (ROOT)

    STATEMENT         go to state 12
    DECLARATION       go to state 13
    FUNC_DECLARATION  go to state 14
    VAR_DECLARATION   go to state 15
    ASSIGNMENT        go to state 16
    ASSIGN            go to state 17
    JUMP              go to state 18
    RETURN            go to state 19
    CONTROL           go to state 20
    IF                go to state 21
    VALUE             go to state 22
    FUNC_EVOKE        go to state 23


State 3

    0 $accept: ROOT $end .

    $default  accept


State 4

   13 VAR_DECLARATION: T_INT . VALUE
   14                | T_INT . VALUE T_SEMICOLON

    T_SUB       shift, and go to state 9
    T_NUMBER    shift, and go to state 10
    T_VARIABLE  shift, and go to state 11

    VALUE  go to state 24


State 5

   15 VAR_DECLARATION: T_VOID . VALUE
   16                | T_VOID . VALUE T_SEMICOLON

    T_SUB       shift, and go to state 9
    T_NUMBER    shift, and go to state 10
    T_VARIABLE  shift, and go to state 11

    VALUE  go to state 25


State 6

   27 RETURN: T_RETURN . LOGIC T_SEMICOLON

    T_LBRACKET  shift, and go to state 26
    T_SUB       shift, and go to state 9
    T_NUMBER    shift, and go to state 10
    T_VARIABLE  shift, and go to state 11

    LOGIC            go to state 27
    LOGIC2           go to state 28
    LOGIC3           go to state 29
    LOGIC4           go to state 30
    LOGIC5           go to state 31
    EXPR             go to state 32
    EXPR2            go to state 33
    EXPR3            go to state 34
    VALUE_WITH_FUNC  go to state 35
    VALUE            go to state 36
    FUNC_EVOKE       go to state 37


State 7

   32 IF: T_IF . T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   33   | T_IF . T_LBRACKET LOGIC T_RBRACKET STATEMENT

    T_LBRACKET  shift, and go to state 38


State 8

   31 CONTROL: T_WHILE . T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET

    T_LBRACKET  shift, and go to state 39


State 9

   60 VALUE: T_SUB . T_NUMBER

    T_NUMBER  shift, and go to state 40


State 10

   59 VALUE: T_NUMBER .

    $default  reduce using rule 59 (VALUE)


State 11

   61 VALUE: T_VARIABLE .

    $default  reduce using rule 61 (VALUE)


State 12

    3 PROGRAM: PROGRAM STATEMENT .

    $default  reduce using rule 3 (PROGRAM)


State 13

    4 STATEMENT: DECLARATION .

    $default  reduce using rule 4 (STATEMENT)


State 14

   10 DECLARATION: FUNC_DECLARATION .

    $default  reduce using rule 10 (DECLARATION)


State 15

   11 DECLARATION: VAR_DECLARATION .
   12 FUNC_DECLARATION: VAR_DECLARATION . T_LBRACKET ARGUMENT_LIST T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   23 ASSIGN: VAR_DECLARATION . T_ASSIGN EXPR T_SEMICOLON

    T_ASSIGN    shift, and go to state 41
    T_LBRACKET  shift, and go to state 42

    $default  reduce using rule 11 (DECLARATION)


State 16

    5 STATEMENT: ASSIGNMENT .

    $default  reduce using rule 5 (STATEMENT)


State 17

   22 ASSIGNMENT: ASSIGN .

    $default  reduce using rule 22 (ASSIGNMENT)


State 18

    6 STATEMENT: JUMP .

    $default  reduce using rule 6 (STATEMENT)


State 19

   25 JUMP: RETURN .

    $default  reduce using rule 25 (JUMP)


State 20

    7 STATEMENT: CONTROL .

    $default  reduce using rule 7 (STATEMENT)


State 21

   28 CONTROL: IF .
   29        | IF . T_ELSE T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   30        | IF . T_ELSE STATEMENT

    T_ELSE  shift, and go to state 43

    T_ELSE    [reduce using rule 28 (CONTROL)]
    $default  reduce using rule 28 (CONTROL)


State 22

   24 ASSIGN: VALUE . T_ASSIGN EXPR T_SEMICOLON
   62 FUNC_EVOKE: VALUE . T_LBRACKET ARGUMENT_LIST T_RBRACKET

    T_ASSIGN    shift, and go to state 44
    T_LBRACKET  shift, and go to state 45


State 23

   26 JUMP: FUNC_EVOKE . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 46


State 24

   13 VAR_DECLARATION: T_INT VALUE .
   14                | T_INT VALUE . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 47

    $default  reduce using rule 13 (VAR_DECLARATION)


State 25

   15 VAR_DECLARATION: T_VOID VALUE .
   16                | T_VOID VALUE . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 48

    $default  reduce using rule 15 (VAR_DECLARATION)


State 26

   47 LOGIC5: T_LBRACKET . LOGIC T_RBRACKET
   56 EXPR3: T_LBRACKET . EXPR T_RBRACKET

    T_LBRACKET  shift, and go to state 26
    T_SUB       shift, and go to state 9
    T_NUMBER    shift, and go to state 10
    T_VARIABLE  shift, and go to state 11

    LOGIC            go to state 49
    LOGIC2           go to state 28
    LOGIC3           go to state 29
    LOGIC4           go to state 30
    LOGIC5           go to state 31
    EXPR             go to state 50
    EXPR2            go to state 33
    EXPR3            go to state 34
    VALUE_WITH_FUNC  go to state 35
    VALUE            go to state 36
    FUNC_EVOKE       go to state 37


State 27

   27 RETURN: T_RETURN LOGIC . T_SEMICOLON
   35 LOGIC: LOGIC . T_OR LOGIC2

    T_SEMICOLON  shift, and go to state 51
    T_OR         shift, and go to state 52


State 28

   34 LOGIC: LOGIC2 .
   37 LOGIC2: LOGIC2 . T_AND LOGIC3

    T_AND  shift, and go to state 53

    $default  reduce using rule 34 (LOGIC)


State 29

   36 LOGIC2: LOGIC3 .
   39 LOGIC3: LOGIC3 . T_EQUAL LOGIC4
   40       | LOGIC3 . T_NOTEQUAL LOGIC4

    T_EQUAL     shift, and go to state 54
    T_NOTEQUAL  shift, and go to state 55

    $default  reduce using rule 36 (LOGIC2)


State 30

   38 LOGIC3: LOGIC4 .
   42 LOGIC4: LOGIC4 . T_GREATER LOGIC5
   43       | LOGIC4 . T_EQGT LOGIC5
   44       | LOGIC4 . T_LESS LOGIC5
   45       | LOGIC4 . T_EQLT LOGIC5

    T_LESS     shift, and go to state 56
    T_EQLT     shift, and go to state 57
    T_GREATER  shift, and go to state 58
    T_EQGT     shift, and go to state 59

    $default  reduce using rule 38 (LOGIC3)


State 31

   41 LOGIC4: LOGIC5 .

    $default  reduce using rule 41 (LOGIC4)


State 32

   46 LOGIC5: EXPR .
   49 EXPR: EXPR . T_ADD EXPR2
   50     | EXPR . T_SUB EXPR2

    T_ADD  shift, and go to state 60
    T_SUB  shift, and go to state 61

    $default  reduce using rule 46 (LOGIC5)


State 33

   48 EXPR: EXPR2 .
   52 EXPR2: EXPR2 . T_MULT EXPR3
   53      | EXPR2 . T_DIV EXPR3
   54      | EXPR2 . T_MOD EXPR3

    T_MULT  shift, and go to state 62
    T_DIV   shift, and go to state 63
    T_MOD   shift, and go to state 64

    $default  reduce using rule 48 (EXPR)


State 34

   51 EXPR2: EXPR3 .

    $default  reduce using rule 51 (EXPR2)


State 35

   55 EXPR3: VALUE_WITH_FUNC .

    $default  reduce using rule 55 (EXPR3)


State 36

   57 VALUE_WITH_FUNC: VALUE .
   62 FUNC_EVOKE: VALUE . T_LBRACKET ARGUMENT_LIST T_RBRACKET

    T_LBRACKET  shift, and go to state 45

    $default  reduce using rule 57 (VALUE_WITH_FUNC)


State 37

   58 VALUE_WITH_FUNC: FUNC_EVOKE .

    $default  reduce using rule 58 (VALUE_WITH_FUNC)


State 38

   32 IF: T_IF T_LBRACKET . LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   33   | T_IF T_LBRACKET . LOGIC T_RBRACKET STATEMENT

    T_LBRACKET  shift, and go to state 26
    T_SUB       shift, and go to state 9
    T_NUMBER    shift, and go to state 10
    T_VARIABLE  shift, and go to state 11

    LOGIC            go to state 65
    LOGIC2           go to state 28
    LOGIC3           go to state 29
    LOGIC4           go to state 30
    LOGIC5           go to state 31
    EXPR             go to state 32
    EXPR2            go to state 33
    EXPR3            go to state 34
    VALUE_WITH_FUNC  go to state 35
    VALUE            go to state 36
    FUNC_EVOKE       go to state 37


State 39

   31 CONTROL: T_WHILE T_LBRACKET . LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET

    T_LBRACKET  shift, and go to state 26
    T_SUB       shift, and go to state 9
    T_NUMBER    shift, and go to state 10
    T_VARIABLE  shift, and go to state 11

    LOGIC            go to state 66
    LOGIC2           go to state 28
    LOGIC3           go to state 29
    LOGIC4           go to state 30
    LOGIC5           go to state 31
    EXPR             go to state 32
    EXPR2            go to state 33
    EXPR3            go to state 34
    VALUE_WITH_FUNC  go to state 35
    VALUE            go to state 36
    FUNC_EVOKE       go to state 37


State 40

   60 VALUE: T_SUB T_NUMBER .

    $default  reduce using rule 60 (VALUE)


State 41

   23 ASSIGN: VAR_DECLARATION T_ASSIGN . EXPR T_SEMICOLON

    T_LBRACKET  shift, and go to state 67
    T_SUB       shift, and go to state 9
    T_NUMBER    shift, and go to state 10
    T_VARIABLE  shift, and go to state 11

    EXPR             go to state 68
    EXPR2            go to state 33
    EXPR3            go to state 34
    VALUE_WITH_FUNC  go to state 35
    VALUE            go to state 36
    FUNC_EVOKE       go to state 37


State 42

   12 FUNC_DECLARATION: VAR_DECLARATION T_LBRACKET . ARGUMENT_LIST T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET

    T_INT       shift, and go to state 4
    T_VOID      shift, and go to state 5
    T_SUB       shift, and go to state 9
    T_NUMBER    shift, and go to state 10
    T_VARIABLE  shift, and go to state 11

    $default  reduce using rule 17 (ARGUMENT_LIST)

    VAR_DECLARATION  go to state 69
    ARGUMENT_LIST    go to state 70
    ARGUMENT         go to state 71
    VALUE            go to state 72


State 43

   29 CONTROL: IF T_ELSE . T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   30        | IF T_ELSE . STATEMENT

    T_LCURLBRACKET  shift, and go to state 73
    T_INT           shift, and go to state 4
    T_VOID          shift, and go to state 5
    T_RETURN        shift, and go to state 6
    T_IF            shift, and go to state 7
    T_WHILE         shift, and go to state 8
    T_SUB           shift, and go to state 9
    T_NUMBER        shift, and go to state 10
    T_VARIABLE      shift, and go to state 11

    STATEMENT         go to state 74
    DECLARATION       go to state 13
    FUNC_DECLARATION  go to state 14
    VAR_DECLARATION   go to state 15
    ASSIGNMENT        go to state 16
    ASSIGN            go to state 17
    JUMP              go to state 18
    RETURN            go to state 19
    CONTROL           go to state 20
    IF                go to state 21
    VALUE             go to state 22
    FUNC_EVOKE        go to state 23


State 44

   24 ASSIGN: VALUE T_ASSIGN . EXPR T_SEMICOLON

    T_LBRACKET  shift, and go to state 67
    T_SUB       shift, and go to state 9
    T_NUMBER    shift, and go to state 10
    T_VARIABLE  shift, and go to state 11

    EXPR             go to state 75
    EXPR2            go to state 33
    EXPR3            go to state 34
    VALUE_WITH_FUNC  go to state 35
    VALUE            go to state 36
    FUNC_EVOKE       go to state 37


State 45

   62 FUNC_EVOKE: VALUE T_LBRACKET . ARGUMENT_LIST T_RBRACKET

    T_INT       shift, and go to state 4
    T_VOID      shift, and go to state 5
    T_SUB       shift, and go to state 9
    T_NUMBER    shift, and go to state 10
    T_VARIABLE  shift, and go to state 11

    $default  reduce using rule 17 (ARGUMENT_LIST)

    VAR_DECLARATION  go to state 69
    ARGUMENT_LIST    go to state 76
    ARGUMENT         go to state 71
    VALUE            go to state 72


State 46

   26 JUMP: FUNC_EVOKE T_SEMICOLON .

    $default  reduce using rule 26 (JUMP)


State 47

   14 VAR_DECLARATION: T_INT VALUE T_SEMICOLON .

    $default  reduce using rule 14 (VAR_DECLARATION)


State 48

   16 VAR_DECLARATION: T_VOID VALUE T_SEMICOLON .

    $default  reduce using rule 16 (VAR_DECLARATION)


State 49

   35 LOGIC: LOGIC . T_OR LOGIC2
   47 LOGIC5: T_LBRACKET LOGIC . T_RBRACKET

    T_RBRACKET  shift, and go to state 77
    T_OR        shift, and go to state 52


State 50

   46 LOGIC5: EXPR .
   49 EXPR: EXPR . T_ADD EXPR2
   50     | EXPR . T_SUB EXPR2
   56 EXPR3: T_LBRACKET EXPR . T_RBRACKET

    T_RBRACKET  shift, and go to state 78
    T_ADD       shift, and go to state 60
    T_SUB       shift, and go to state 61

    T_RBRACKET  [reduce using rule 46 (LOGIC5)]
    $default    reduce using rule 46 (LOGIC5)


State 51

   27 RETURN: T_RETURN LOGIC T_SEMICOLON .

    $default  reduce using rule 27 (RETURN)


State 52

   35 LOGIC: LOGIC T_OR . LOGIC2

    T_LBRACKET  shift, and go to state 26
    T_SUB       shift, and go to state 9
    T_NUMBER    shift, and go to state 10
    T_VARIABLE  shift, and go to state 11

    LOGIC2           go to state 79
    LOGIC3           go to state 29
    LOGIC4           go to state 30
    LOGIC5           go to state 31
    EXPR             go to state 32
    EXPR2            go to state 33
    EXPR3            go to state 34
    VALUE_WITH_FUNC  go to state 35
    VALUE            go to state 36
    FUNC_EVOKE       go to state 37


State 53

   37 LOGIC2: LOGIC2 T_AND . LOGIC3

    T_LBRACKET  shift, and go to state 26
    T_SUB       shift, and go to state 9
    T_NUMBER    shift, and go to state 10
    T_VARIABLE  shift, and go to state 11

    LOGIC3           go to state 80
    LOGIC4           go to state 30
    LOGIC5           go to state 31
    EXPR             go to state 32
    EXPR2            go to state 33
    EXPR3            go to state 34
    VALUE_WITH_FUNC  go to state 35
    VALUE            go to state 36
    FUNC_EVOKE       go to state 37


State 54

   39 LOGIC3: LOGIC3 T_EQUAL . LOGIC4

    T_LBRACKET  shift, and go to state 26
    T_SUB       shift, and go to state 9
    T_NUMBER    shift, and go to state 10
    T_VARIABLE  shift, and go to state 11

    LOGIC4           go to state 81
    LOGIC5           go to state 31
    EXPR             go to state 32
    EXPR2            go to state 33
    EXPR3            go to state 34
    VALUE_WITH_FUNC  go to state 35
    VALUE            go to state 36
    FUNC_EVOKE       go to state 37


State 55

   40 LOGIC3: LOGIC3 T_NOTEQUAL . LOGIC4

    T_LBRACKET  shift, and go to state 26
    T_SUB       shift, and go to state 9
    T_NUMBER    shift, and go to state 10
    T_VARIABLE  shift, and go to state 11

    LOGIC4           go to state 82
    LOGIC5           go to state 31
    EXPR             go to state 32
    EXPR2            go to state 33
    EXPR3            go to state 34
    VALUE_WITH_FUNC  go to state 35
    VALUE            go to state 36
    FUNC_EVOKE       go to state 37


State 56

   44 LOGIC4: LOGIC4 T_LESS . LOGIC5

    T_LBRACKET  shift, and go to state 26
    T_SUB       shift, and go to state 9
    T_NUMBER    shift, and go to state 10
    T_VARIABLE  shift, and go to state 11

    LOGIC5           go to state 83
    EXPR             go to state 32
    EXPR2            go to state 33
    EXPR3            go to state 34
    VALUE_WITH_FUNC  go to state 35
    VALUE            go to state 36
    FUNC_EVOKE       go to state 37


State 57

   45 LOGIC4: LOGIC4 T_EQLT . LOGIC5

    T_LBRACKET  shift, and go to state 26
    T_SUB       shift, and go to state 9
    T_NUMBER    shift, and go to state 10
    T_VARIABLE  shift, and go to state 11

    LOGIC5           go to state 84
    EXPR             go to state 32
    EXPR2            go to state 33
    EXPR3            go to state 34
    VALUE_WITH_FUNC  go to state 35
    VALUE            go to state 36
    FUNC_EVOKE       go to state 37


State 58

   42 LOGIC4: LOGIC4 T_GREATER . LOGIC5

    T_LBRACKET  shift, and go to state 26
    T_SUB       shift, and go to state 9
    T_NUMBER    shift, and go to state 10
    T_VARIABLE  shift, and go to state 11

    LOGIC5           go to state 85
    EXPR             go to state 32
    EXPR2            go to state 33
    EXPR3            go to state 34
    VALUE_WITH_FUNC  go to state 35
    VALUE            go to state 36
    FUNC_EVOKE       go to state 37


State 59

   43 LOGIC4: LOGIC4 T_EQGT . LOGIC5

    T_LBRACKET  shift, and go to state 26
    T_SUB       shift, and go to state 9
    T_NUMBER    shift, and go to state 10
    T_VARIABLE  shift, and go to state 11

    LOGIC5           go to state 86
    EXPR             go to state 32
    EXPR2            go to state 33
    EXPR3            go to state 34
    VALUE_WITH_FUNC  go to state 35
    VALUE            go to state 36
    FUNC_EVOKE       go to state 37


State 60

   49 EXPR: EXPR T_ADD . EXPR2

    T_LBRACKET  shift, and go to state 67
    T_SUB       shift, and go to state 9
    T_NUMBER    shift, and go to state 10
    T_VARIABLE  shift, and go to state 11

    EXPR2            go to state 87
    EXPR3            go to state 34
    VALUE_WITH_FUNC  go to state 35
    VALUE            go to state 36
    FUNC_EVOKE       go to state 37


State 61

   50 EXPR: EXPR T_SUB . EXPR2

    T_LBRACKET  shift, and go to state 67
    T_SUB       shift, and go to state 9
    T_NUMBER    shift, and go to state 10
    T_VARIABLE  shift, and go to state 11

    EXPR2            go to state 88
    EXPR3            go to state 34
    VALUE_WITH_FUNC  go to state 35
    VALUE            go to state 36
    FUNC_EVOKE       go to state 37


State 62

   52 EXPR2: EXPR2 T_MULT . EXPR3

    T_LBRACKET  shift, and go to state 67
    T_SUB       shift, and go to state 9
    T_NUMBER    shift, and go to state 10
    T_VARIABLE  shift, and go to state 11

    EXPR3            go to state 89
    VALUE_WITH_FUNC  go to state 35
    VALUE            go to state 36
    FUNC_EVOKE       go to state 37


State 63

   53 EXPR2: EXPR2 T_DIV . EXPR3

    T_LBRACKET  shift, and go to state 67
    T_SUB       shift, and go to state 9
    T_NUMBER    shift, and go to state 10
    T_VARIABLE  shift, and go to state 11

    EXPR3            go to state 90
    VALUE_WITH_FUNC  go to state 35
    VALUE            go to state 36
    FUNC_EVOKE       go to state 37


State 64

   54 EXPR2: EXPR2 T_MOD . EXPR3

    T_LBRACKET  shift, and go to state 67
    T_SUB       shift, and go to state 9
    T_NUMBER    shift, and go to state 10
    T_VARIABLE  shift, and go to state 11

    EXPR3            go to state 91
    VALUE_WITH_FUNC  go to state 35
    VALUE            go to state 36
    FUNC_EVOKE       go to state 37


State 65

   32 IF: T_IF T_LBRACKET LOGIC . T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   33   | T_IF T_LBRACKET LOGIC . T_RBRACKET STATEMENT
   35 LOGIC: LOGIC . T_OR LOGIC2

    T_RBRACKET  shift, and go to state 92
    T_OR        shift, and go to state 52


State 66

   31 CONTROL: T_WHILE T_LBRACKET LOGIC . T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   35 LOGIC: LOGIC . T_OR LOGIC2

    T_RBRACKET  shift, and go to state 93
    T_OR        shift, and go to state 52


State 67

   56 EXPR3: T_LBRACKET . EXPR T_RBRACKET

    T_LBRACKET  shift, and go to state 67
    T_SUB       shift, and go to state 9
    T_NUMBER    shift, and go to state 10
    T_VARIABLE  shift, and go to state 11

    EXPR             go to state 94
    EXPR2            go to state 33
    EXPR3            go to state 34
    VALUE_WITH_FUNC  go to state 35
    VALUE            go to state 36
    FUNC_EVOKE       go to state 37


State 68

   23 ASSIGN: VAR_DECLARATION T_ASSIGN EXPR . T_SEMICOLON
   49 EXPR: EXPR . T_ADD EXPR2
   50     | EXPR . T_SUB EXPR2

    T_SEMICOLON  shift, and go to state 95
    T_ADD        shift, and go to state 60
    T_SUB        shift, and go to state 61


State 69

   20 ARGUMENT: VAR_DECLARATION .

    $default  reduce using rule 20 (ARGUMENT)


State 70

   12 FUNC_DECLARATION: VAR_DECLARATION T_LBRACKET ARGUMENT_LIST . T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   19 ARGUMENT_LIST: ARGUMENT_LIST . T_COMMA ARGUMENT

    T_RBRACKET  shift, and go to state 96
    T_COMMA     shift, and go to state 97


State 71

   18 ARGUMENT_LIST: ARGUMENT .

    $default  reduce using rule 18 (ARGUMENT_LIST)


State 72

   21 ARGUMENT: VALUE .

    $default  reduce using rule 21 (ARGUMENT)


State 73

   29 CONTROL: IF T_ELSE T_LCURLBRACKET . STATEMENT_LIST T_RCURLBRACKET

    $default  reduce using rule 8 (STATEMENT_LIST)

    STATEMENT_LIST  go to state 98


State 74

   30 CONTROL: IF T_ELSE STATEMENT .

    $default  reduce using rule 30 (CONTROL)


State 75

   24 ASSIGN: VALUE T_ASSIGN EXPR . T_SEMICOLON
   49 EXPR: EXPR . T_ADD EXPR2
   50     | EXPR . T_SUB EXPR2

    T_SEMICOLON  shift, and go to state 99
    T_ADD        shift, and go to state 60
    T_SUB        shift, and go to state 61


State 76

   19 ARGUMENT_LIST: ARGUMENT_LIST . T_COMMA ARGUMENT
   62 FUNC_EVOKE: VALUE T_LBRACKET ARGUMENT_LIST . T_RBRACKET

    T_RBRACKET  shift, and go to state 100
    T_COMMA     shift, and go to state 97


State 77

   47 LOGIC5: T_LBRACKET LOGIC T_RBRACKET .

    $default  reduce using rule 47 (LOGIC5)


State 78

   56 EXPR3: T_LBRACKET EXPR T_RBRACKET .

    $default  reduce using rule 56 (EXPR3)


State 79

   35 LOGIC: LOGIC T_OR LOGIC2 .
   37 LOGIC2: LOGIC2 . T_AND LOGIC3

    T_AND  shift, and go to state 53

    $default  reduce using rule 35 (LOGIC)


State 80

   37 LOGIC2: LOGIC2 T_AND LOGIC3 .
   39 LOGIC3: LOGIC3 . T_EQUAL LOGIC4
   40       | LOGIC3 . T_NOTEQUAL LOGIC4

    T_EQUAL     shift, and go to state 54
    T_NOTEQUAL  shift, and go to state 55

    $default  reduce using rule 37 (LOGIC2)


State 81

   39 LOGIC3: LOGIC3 T_EQUAL LOGIC4 .
   42 LOGIC4: LOGIC4 . T_GREATER LOGIC5
   43       | LOGIC4 . T_EQGT LOGIC5
   44       | LOGIC4 . T_LESS LOGIC5
   45       | LOGIC4 . T_EQLT LOGIC5

    T_LESS     shift, and go to state 56
    T_EQLT     shift, and go to state 57
    T_GREATER  shift, and go to state 58
    T_EQGT     shift, and go to state 59

    $default  reduce using rule 39 (LOGIC3)


State 82

   40 LOGIC3: LOGIC3 T_NOTEQUAL LOGIC4 .
   42 LOGIC4: LOGIC4 . T_GREATER LOGIC5
   43       | LOGIC4 . T_EQGT LOGIC5
   44       | LOGIC4 . T_LESS LOGIC5
   45       | LOGIC4 . T_EQLT LOGIC5

    T_LESS     shift, and go to state 56
    T_EQLT     shift, and go to state 57
    T_GREATER  shift, and go to state 58
    T_EQGT     shift, and go to state 59

    $default  reduce using rule 40 (LOGIC3)


State 83

   44 LOGIC4: LOGIC4 T_LESS LOGIC5 .

    $default  reduce using rule 44 (LOGIC4)


State 84

   45 LOGIC4: LOGIC4 T_EQLT LOGIC5 .

    $default  reduce using rule 45 (LOGIC4)


State 85

   42 LOGIC4: LOGIC4 T_GREATER LOGIC5 .

    $default  reduce using rule 42 (LOGIC4)


State 86

   43 LOGIC4: LOGIC4 T_EQGT LOGIC5 .

    $default  reduce using rule 43 (LOGIC4)


State 87

   49 EXPR: EXPR T_ADD EXPR2 .
   52 EXPR2: EXPR2 . T_MULT EXPR3
   53      | EXPR2 . T_DIV EXPR3
   54      | EXPR2 . T_MOD EXPR3

    T_MULT  shift, and go to state 62
    T_DIV   shift, and go to state 63
    T_MOD   shift, and go to state 64

    $default  reduce using rule 49 (EXPR)


State 88

   50 EXPR: EXPR T_SUB EXPR2 .
   52 EXPR2: EXPR2 . T_MULT EXPR3
   53      | EXPR2 . T_DIV EXPR3
   54      | EXPR2 . T_MOD EXPR3

    T_MULT  shift, and go to state 62
    T_DIV   shift, and go to state 63
    T_MOD   shift, and go to state 64

    $default  reduce using rule 50 (EXPR)


State 89

   52 EXPR2: EXPR2 T_MULT EXPR3 .

    $default  reduce using rule 52 (EXPR2)


State 90

   53 EXPR2: EXPR2 T_DIV EXPR3 .

    $default  reduce using rule 53 (EXPR2)


State 91

   54 EXPR2: EXPR2 T_MOD EXPR3 .

    $default  reduce using rule 54 (EXPR2)


State 92

   32 IF: T_IF T_LBRACKET LOGIC T_RBRACKET . T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   33   | T_IF T_LBRACKET LOGIC T_RBRACKET . STATEMENT

    T_LCURLBRACKET  shift, and go to state 101
    T_INT           shift, and go to state 4
    T_VOID          shift, and go to state 5
    T_RETURN        shift, and go to state 6
    T_IF            shift, and go to state 7
    T_WHILE         shift, and go to state 8
    T_SUB           shift, and go to state 9
    T_NUMBER        shift, and go to state 10
    T_VARIABLE      shift, and go to state 11

    STATEMENT         go to state 102
    DECLARATION       go to state 13
    FUNC_DECLARATION  go to state 14
    VAR_DECLARATION   go to state 15
    ASSIGNMENT        go to state 16
    ASSIGN            go to state 17
    JUMP              go to state 18
    RETURN            go to state 19
    CONTROL           go to state 20
    IF                go to state 21
    VALUE             go to state 22
    FUNC_EVOKE        go to state 23


State 93

   31 CONTROL: T_WHILE T_LBRACKET LOGIC T_RBRACKET . T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET

    T_LCURLBRACKET  shift, and go to state 103


State 94

   49 EXPR: EXPR . T_ADD EXPR2
   50     | EXPR . T_SUB EXPR2
   56 EXPR3: T_LBRACKET EXPR . T_RBRACKET

    T_RBRACKET  shift, and go to state 78
    T_ADD       shift, and go to state 60
    T_SUB       shift, and go to state 61


State 95

   23 ASSIGN: VAR_DECLARATION T_ASSIGN EXPR T_SEMICOLON .

    $default  reduce using rule 23 (ASSIGN)


State 96

   12 FUNC_DECLARATION: VAR_DECLARATION T_LBRACKET ARGUMENT_LIST T_RBRACKET . T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET

    T_LCURLBRACKET  shift, and go to state 104


State 97

   19 ARGUMENT_LIST: ARGUMENT_LIST T_COMMA . ARGUMENT

    T_INT       shift, and go to state 4
    T_VOID      shift, and go to state 5
    T_SUB       shift, and go to state 9
    T_NUMBER    shift, and go to state 10
    T_VARIABLE  shift, and go to state 11

    VAR_DECLARATION  go to state 69
    ARGUMENT         go to state 105
    VALUE            go to state 72


State 98

    9 STATEMENT_LIST: STATEMENT_LIST . STATEMENT
   29 CONTROL: IF T_ELSE T_LCURLBRACKET STATEMENT_LIST . T_RCURLBRACKET

    T_RCURLBRACKET  shift, and go to state 106
    T_INT           shift, and go to state 4
    T_VOID          shift, and go to state 5
    T_RETURN        shift, and go to state 6
    T_IF            shift, and go to state 7
    T_WHILE         shift, and go to state 8
    T_SUB           shift, and go to state 9
    T_NUMBER        shift, and go to state 10
    T_VARIABLE      shift, and go to state 11

    STATEMENT         go to state 107
    DECLARATION       go to state 13
    FUNC_DECLARATION  go to state 14
    VAR_DECLARATION   go to state 15
    ASSIGNMENT        go to state 16
    ASSIGN            go to state 17
    JUMP              go to state 18
    RETURN            go to state 19
    CONTROL           go to state 20
    IF                go to state 21
    VALUE             go to state 22
    FUNC_EVOKE        go to state 23


State 99

   24 ASSIGN: VALUE T_ASSIGN EXPR T_SEMICOLON .

    $default  reduce using rule 24 (ASSIGN)


State 100

   62 FUNC_EVOKE: VALUE T_LBRACKET ARGUMENT_LIST T_RBRACKET .

    $default  reduce using rule 62 (FUNC_EVOKE)


State 101

   32 IF: T_IF T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET . STATEMENT_LIST T_RCURLBRACKET

    $default  reduce using rule 8 (STATEMENT_LIST)

    STATEMENT_LIST  go to state 108


State 102

   33 IF: T_IF T_LBRACKET LOGIC T_RBRACKET STATEMENT .

    $default  reduce using rule 33 (IF)


State 103

   31 CONTROL: T_WHILE T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET . STATEMENT_LIST T_RCURLBRACKET

    $default  reduce using rule 8 (STATEMENT_LIST)

    STATEMENT_LIST  go to state 109


State 104

   12 FUNC_DECLARATION: VAR_DECLARATION T_LBRACKET ARGUMENT_LIST T_RBRACKET T_LCURLBRACKET . STATEMENT_LIST T_RCURLBRACKET

    $default  reduce using rule 8 (STATEMENT_LIST)

    STATEMENT_LIST  go to state 110


State 105

   19 ARGUMENT_LIST: ARGUMENT_LIST T_COMMA ARGUMENT .

    $default  reduce using rule 19 (ARGUMENT_LIST)


State 106

   29 CONTROL: IF T_ELSE T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET .

    $default  reduce using rule 29 (CONTROL)


State 107

    9 STATEMENT_LIST: STATEMENT_LIST STATEMENT .

    $default  reduce using rule 9 (STATEMENT_LIST)


State 108

    9 STATEMENT_LIST: STATEMENT_LIST . STATEMENT
   32 IF: T_IF T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST . T_RCURLBRACKET

    T_RCURLBRACKET  shift, and go to state 111
    T_INT           shift, and go to state 4
    T_VOID          shift, and go to state 5
    T_RETURN        shift, and go to state 6
    T_IF            shift, and go to state 7
    T_WHILE         shift, and go to state 8
    T_SUB           shift, and go to state 9
    T_NUMBER        shift, and go to state 10
    T_VARIABLE      shift, and go to state 11

    STATEMENT         go to state 107
    DECLARATION       go to state 13
    FUNC_DECLARATION  go to state 14
    VAR_DECLARATION   go to state 15
    ASSIGNMENT        go to state 16
    ASSIGN            go to state 17
    JUMP              go to state 18
    RETURN            go to state 19
    CONTROL           go to state 20
    IF                go to state 21
    VALUE             go to state 22
    FUNC_EVOKE        go to state 23


State 109

    9 STATEMENT_LIST: STATEMENT_LIST . STATEMENT
   31 CONTROL: T_WHILE T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST . T_RCURLBRACKET

    T_RCURLBRACKET  shift, and go to state 112
    T_INT           shift, and go to state 4
    T_VOID          shift, and go to state 5
    T_RETURN        shift, and go to state 6
    T_IF            shift, and go to state 7
    T_WHILE         shift, and go to state 8
    T_SUB           shift, and go to state 9
    T_NUMBER        shift, and go to state 10
    T_VARIABLE      shift, and go to state 11

    STATEMENT         go to state 107
    DECLARATION       go to state 13
    FUNC_DECLARATION  go to state 14
    VAR_DECLARATION   go to state 15
    ASSIGNMENT        go to state 16
    ASSIGN            go to state 17
    JUMP              go to state 18
    RETURN            go to state 19
    CONTROL           go to state 20
    IF                go to state 21
    VALUE             go to state 22
    FUNC_EVOKE        go to state 23


State 110

    9 STATEMENT_LIST: STATEMENT_LIST . STATEMENT
   12 FUNC_DECLARATION: VAR_DECLARATION T_LBRACKET ARGUMENT_LIST T_RBRACKET T_LCURLBRACKET STATEMENT_LIST . T_RCURLBRACKET

    T_RCURLBRACKET  shift, and go to state 113
    T_INT           shift, and go to state 4
    T_VOID          shift, and go to state 5
    T_RETURN        shift, and go to state 6
    T_IF            shift, and go to state 7
    T_WHILE         shift, and go to state 8
    T_SUB           shift, and go to state 9
    T_NUMBER        shift, and go to state 10
    T_VARIABLE      shift, and go to state 11

    STATEMENT         go to state 107
    DECLARATION       go to state 13
    FUNC_DECLARATION  go to state 14
    VAR_DECLARATION   go to state 15
    ASSIGNMENT        go to state 16
    ASSIGN            go to state 17
    JUMP              go to state 18
    RETURN            go to state 19
    CONTROL           go to state 20
    IF                go to state 21
    VALUE             go to state 22
    FUNC_EVOKE        go to state 23


State 111

   32 IF: T_IF T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET .

    $default  reduce using rule 32 (IF)


State 112

   31 CONTROL: T_WHILE T_LBRACKET LOGIC T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET .

    $default  reduce using rule 31 (CONTROL)


State 113

   12 FUNC_DECLARATION: VAR_DECLARATION T_LBRACKET ARGUMENT_LIST T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET .

    $default  reduce using rule 12 (FUNC_DECLARATION)
