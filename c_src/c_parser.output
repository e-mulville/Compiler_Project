Terminals unused in grammar

   T_COLON


Grammar

    0 $accept: ROOT $end

    1 ROOT: PROGRAM

    2 PROGRAM: %empty
    3        | PROGRAM STATEMENT

    4 STATEMENT: DECLARATION
    5          | ASSIGNMENT

    6 STATEMENT_LIST: STATEMENT
    7               | STATEMENT_LIST STATEMENT

    8 DECLARATION: FUNC_DECLARATION
    9            | VAR_DECLARATION T_SEMICOLON

   10 FUNC_DECLARATION: TYPE T_VARIABLE T_LBRACKET ARGUMENT_LIST T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET

   11 ARGUMENT_LIST: ARGUMENT
   12              | ARGUMENT_LIST T_COMMA ARGUMENT

   13 ARGUMENT: TYPE T_VARIABLE

   14 TYPE: T_INT

   15 ASSIGNMENT: VAR_DECLARATION ASSIGN_OPERATOR EXPR T_SEMICOLON
   16           | T_VARIABLE ASSIGN_OPERATOR EXPR T_SEMICOLON

   17 VAR_DECLARATION: TYPE T_VARIABLE

   18 ASSIGN_OPERATOR: T_ASSIGN

   19 EXPR: VALUE

   20 VALUE: T_NUMBER
   21      | T_VARIABLE


Terminals, with rules where they appear

$end (0) 0
error (256)
T_ASSIGN (258) 18
T_LBRACKET (259) 10
T_RBRACKET (260) 10
T_LCURLBRACKET (261) 10
T_RCURLBRACKET (262) 10
T_SEMICOLON (263) 9 15 16
T_COLON (264)
T_COMMA (265) 12
T_INT (266) 14
T_NUMBER (267) 20
T_VARIABLE (268) 10 13 16 17 21


Nonterminals, with rules where they appear

$accept (14)
    on left: 0
ROOT (15)
    on left: 1, on right: 0
PROGRAM (16)
    on left: 2 3, on right: 1 3
STATEMENT (17)
    on left: 4 5, on right: 3 6 7
STATEMENT_LIST (18)
    on left: 6 7, on right: 7 10
DECLARATION (19)
    on left: 8 9, on right: 4
FUNC_DECLARATION (20)
    on left: 10, on right: 8
ARGUMENT_LIST (21)
    on left: 11 12, on right: 10 12
ARGUMENT (22)
    on left: 13, on right: 11 12
TYPE (23)
    on left: 14, on right: 10 13 17
ASSIGNMENT (24)
    on left: 15 16, on right: 5
VAR_DECLARATION (25)
    on left: 17, on right: 9 15
ASSIGN_OPERATOR (26)
    on left: 18, on right: 15 16
EXPR (27)
    on left: 19, on right: 15 16
VALUE (28)
    on left: 20 21, on right: 19


State 0

    0 $accept: . ROOT $end

    $default  reduce using rule 2 (PROGRAM)

    ROOT     go to state 1
    PROGRAM  go to state 2


State 1

    0 $accept: ROOT . $end

    $end  shift, and go to state 3


State 2

    1 ROOT: PROGRAM .
    3 PROGRAM: PROGRAM . STATEMENT

    T_INT       shift, and go to state 4
    T_VARIABLE  shift, and go to state 5

    $default  reduce using rule 1 (ROOT)

    STATEMENT         go to state 6
    DECLARATION       go to state 7
    FUNC_DECLARATION  go to state 8
    TYPE              go to state 9
    ASSIGNMENT        go to state 10
    VAR_DECLARATION   go to state 11


State 3

    0 $accept: ROOT $end .

    $default  accept


State 4

   14 TYPE: T_INT .

    $default  reduce using rule 14 (TYPE)


State 5

   16 ASSIGNMENT: T_VARIABLE . ASSIGN_OPERATOR EXPR T_SEMICOLON

    T_ASSIGN  shift, and go to state 12

    ASSIGN_OPERATOR  go to state 13


State 6

    3 PROGRAM: PROGRAM STATEMENT .

    $default  reduce using rule 3 (PROGRAM)


State 7

    4 STATEMENT: DECLARATION .

    $default  reduce using rule 4 (STATEMENT)


State 8

    8 DECLARATION: FUNC_DECLARATION .

    $default  reduce using rule 8 (DECLARATION)


State 9

   10 FUNC_DECLARATION: TYPE . T_VARIABLE T_LBRACKET ARGUMENT_LIST T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   17 VAR_DECLARATION: TYPE . T_VARIABLE

    T_VARIABLE  shift, and go to state 14


State 10

    5 STATEMENT: ASSIGNMENT .

    $default  reduce using rule 5 (STATEMENT)


State 11

    9 DECLARATION: VAR_DECLARATION . T_SEMICOLON
   15 ASSIGNMENT: VAR_DECLARATION . ASSIGN_OPERATOR EXPR T_SEMICOLON

    T_ASSIGN     shift, and go to state 12
    T_SEMICOLON  shift, and go to state 15

    ASSIGN_OPERATOR  go to state 16


State 12

   18 ASSIGN_OPERATOR: T_ASSIGN .

    $default  reduce using rule 18 (ASSIGN_OPERATOR)


State 13

   16 ASSIGNMENT: T_VARIABLE ASSIGN_OPERATOR . EXPR T_SEMICOLON

    T_NUMBER    shift, and go to state 17
    T_VARIABLE  shift, and go to state 18

    EXPR   go to state 19
    VALUE  go to state 20


State 14

   10 FUNC_DECLARATION: TYPE T_VARIABLE . T_LBRACKET ARGUMENT_LIST T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   17 VAR_DECLARATION: TYPE T_VARIABLE .

    T_LBRACKET  shift, and go to state 21

    $default  reduce using rule 17 (VAR_DECLARATION)


State 15

    9 DECLARATION: VAR_DECLARATION T_SEMICOLON .

    $default  reduce using rule 9 (DECLARATION)


State 16

   15 ASSIGNMENT: VAR_DECLARATION ASSIGN_OPERATOR . EXPR T_SEMICOLON

    T_NUMBER    shift, and go to state 17
    T_VARIABLE  shift, and go to state 18

    EXPR   go to state 22
    VALUE  go to state 20


State 17

   20 VALUE: T_NUMBER .

    $default  reduce using rule 20 (VALUE)


State 18

   21 VALUE: T_VARIABLE .

    $default  reduce using rule 21 (VALUE)


State 19

   16 ASSIGNMENT: T_VARIABLE ASSIGN_OPERATOR EXPR . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 23


State 20

   19 EXPR: VALUE .

    $default  reduce using rule 19 (EXPR)


State 21

   10 FUNC_DECLARATION: TYPE T_VARIABLE T_LBRACKET . ARGUMENT_LIST T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET

    T_INT  shift, and go to state 4

    ARGUMENT_LIST  go to state 24
    ARGUMENT       go to state 25
    TYPE           go to state 26


State 22

   15 ASSIGNMENT: VAR_DECLARATION ASSIGN_OPERATOR EXPR . T_SEMICOLON

    T_SEMICOLON  shift, and go to state 27


State 23

   16 ASSIGNMENT: T_VARIABLE ASSIGN_OPERATOR EXPR T_SEMICOLON .

    $default  reduce using rule 16 (ASSIGNMENT)


State 24

   10 FUNC_DECLARATION: TYPE T_VARIABLE T_LBRACKET ARGUMENT_LIST . T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET
   12 ARGUMENT_LIST: ARGUMENT_LIST . T_COMMA ARGUMENT

    T_RBRACKET  shift, and go to state 28
    T_COMMA     shift, and go to state 29


State 25

   11 ARGUMENT_LIST: ARGUMENT .

    $default  reduce using rule 11 (ARGUMENT_LIST)


State 26

   13 ARGUMENT: TYPE . T_VARIABLE

    T_VARIABLE  shift, and go to state 30


State 27

   15 ASSIGNMENT: VAR_DECLARATION ASSIGN_OPERATOR EXPR T_SEMICOLON .

    $default  reduce using rule 15 (ASSIGNMENT)


State 28

   10 FUNC_DECLARATION: TYPE T_VARIABLE T_LBRACKET ARGUMENT_LIST T_RBRACKET . T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET

    T_LCURLBRACKET  shift, and go to state 31


State 29

   12 ARGUMENT_LIST: ARGUMENT_LIST T_COMMA . ARGUMENT

    T_INT  shift, and go to state 4

    ARGUMENT  go to state 32
    TYPE      go to state 26


State 30

   13 ARGUMENT: TYPE T_VARIABLE .

    $default  reduce using rule 13 (ARGUMENT)


State 31

   10 FUNC_DECLARATION: TYPE T_VARIABLE T_LBRACKET ARGUMENT_LIST T_RBRACKET T_LCURLBRACKET . STATEMENT_LIST T_RCURLBRACKET

    T_INT       shift, and go to state 4
    T_VARIABLE  shift, and go to state 5

    STATEMENT         go to state 33
    STATEMENT_LIST    go to state 34
    DECLARATION       go to state 7
    FUNC_DECLARATION  go to state 8
    TYPE              go to state 9
    ASSIGNMENT        go to state 10
    VAR_DECLARATION   go to state 11


State 32

   12 ARGUMENT_LIST: ARGUMENT_LIST T_COMMA ARGUMENT .

    $default  reduce using rule 12 (ARGUMENT_LIST)


State 33

    6 STATEMENT_LIST: STATEMENT .

    $default  reduce using rule 6 (STATEMENT_LIST)


State 34

    7 STATEMENT_LIST: STATEMENT_LIST . STATEMENT
   10 FUNC_DECLARATION: TYPE T_VARIABLE T_LBRACKET ARGUMENT_LIST T_RBRACKET T_LCURLBRACKET STATEMENT_LIST . T_RCURLBRACKET

    T_RCURLBRACKET  shift, and go to state 35
    T_INT           shift, and go to state 4
    T_VARIABLE      shift, and go to state 5

    STATEMENT         go to state 36
    DECLARATION       go to state 7
    FUNC_DECLARATION  go to state 8
    TYPE              go to state 9
    ASSIGNMENT        go to state 10
    VAR_DECLARATION   go to state 11


State 35

   10 FUNC_DECLARATION: TYPE T_VARIABLE T_LBRACKET ARGUMENT_LIST T_RBRACKET T_LCURLBRACKET STATEMENT_LIST T_RCURLBRACKET .

    $default  reduce using rule 10 (FUNC_DECLARATION)


State 36

    7 STATEMENT_LIST: STATEMENT_LIST STATEMENT .

    $default  reduce using rule 7 (STATEMENT_LIST)
